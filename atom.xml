<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Guest997</title>
  
  <subtitle>一个在互联网下的小小 Coder</subtitle>
  <link href="http://guest997.tk/atom.xml" rel="self"/>
  
  <link href="http://guest997.tk/"/>
  <updated>2021-09-02T05:16:38.655Z</updated>
  <id>http://guest997.tk/</id>
  
  <author>
    <name>Guest997</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MyBatis-Plus 详解(四)</title>
    <link href="http://guest997.tk/2021/08/31/mybatis-plus-expound04/"/>
    <id>http://guest997.tk/2021/08/31/mybatis-plus-expound04/</id>
    <published>2021-08-31T14:29:36.000Z</published>
    <updated>2021-09-02T05:16:38.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="条件构造器（Wrapper）（重要）"><a href="#条件构造器（Wrapper）（重要）" class="headerlink" title="条件构造器（Wrapper）（重要）"></a>条件构造器（Wrapper）（重要）</h2><p>写一些复杂的 sql 语句就可以使用它来替代。<strong>注意：查看输出的 SQL 进行分析</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.<span class="keyword">User</span>;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line">@SpringBootTest</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> WrapperTest &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> test01() &#123;</span><br><span class="line">        //查询邮箱不为空且年龄大于等于<span class="number">18</span>小于<span class="number">20</span>的用户</span><br><span class="line">        QueryWrapper&lt;<span class="keyword">User</span>&gt; <span class="keyword">wrapper</span> = <span class="built_in">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="keyword">wrapper</span></span><br><span class="line">                .isNotNull(&quot;email&quot;)</span><br><span class="line">                .ge(&quot;age&quot;, <span class="number">18</span>)</span><br><span class="line">                .lt(&quot;age&quot;, <span class="number">20</span>);</span><br><span class="line">        userMapper.selectList(<span class="keyword">wrapper</span>).<span class="keyword">forEach</span>(<span class="keyword">System</span>.<span class="keyword">out</span>::println);</span><br><span class="line">        //<span class="keyword">SELECT</span> id,<span class="type">name</span>,age,email,<span class="keyword">version</span>,deleted,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> deleted=<span class="number">0</span> <span class="keyword">AND</span> (email <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">AND</span> age &gt;= <span class="number">18</span> <span class="keyword">AND</span> age &lt; <span class="number">20</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> test02() &#123;</span><br><span class="line">        //查询 <span class="type">name</span> 为 Tom 的用户</span><br><span class="line">        QueryWrapper&lt;<span class="keyword">User</span>&gt; <span class="keyword">wrapper</span> = <span class="built_in">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="keyword">wrapper</span>.eq(&quot;name&quot;, &quot;Tom&quot;);</span><br><span class="line">        <span class="keyword">User</span> <span class="keyword">user</span> = userMapper.selectOne(<span class="keyword">wrapper</span>);      //查询一条记录，多条记录使用 List 或者 Map。</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="keyword">user</span>);</span><br><span class="line">        //<span class="keyword">SELECT</span> id,<span class="type">name</span>,age,email,<span class="keyword">version</span>,deleted,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> deleted=<span class="number">0</span> <span class="keyword">AND</span> (<span class="type">name</span> = <span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> test03() &#123;</span><br><span class="line">        //查询年龄在 <span class="number">20</span> ~ <span class="number">30</span> 之间的用户总数</span><br><span class="line">        QueryWrapper&lt;<span class="keyword">User</span>&gt; <span class="keyword">wrapper</span> = <span class="built_in">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="keyword">wrapper</span>.<span class="keyword">between</span>(&quot;age&quot;, <span class="number">20</span>, <span class="number">30</span>);</span><br><span class="line">        <span class="type">Integer</span> count = userMapper.selectCount(<span class="keyword">wrapper</span>);    //查询结果数</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(count);</span><br><span class="line">        //<span class="keyword">SELECT</span> COUNT( * ) <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> deleted=<span class="number">0</span> <span class="keyword">AND</span> (age <span class="keyword">BETWEEN</span> <span class="number">20</span> <span class="keyword">AND</span> <span class="number">30</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> test04() &#123;</span><br><span class="line">        //查询 <span class="type">name</span> 中包含 <span class="number">2</span> 且 email 以 t 开头、m 结尾的用户</span><br><span class="line">        QueryWrapper&lt;<span class="keyword">User</span>&gt; <span class="keyword">wrapper</span> = <span class="built_in">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="keyword">wrapper</span></span><br><span class="line">                .<span class="keyword">like</span>(&quot;name&quot;, &quot;2&quot;)</span><br><span class="line">                //指的是 % 在左还是右</span><br><span class="line">                .likeRight(&quot;email&quot;, &quot;t&quot;)</span><br><span class="line">                .likeLeft(&quot;email&quot;, &quot;m&quot;);</span><br><span class="line">        List&lt;Map&lt;String, <span class="keyword">Object</span>&gt;&gt; maps = userMapper.selectMaps(<span class="keyword">wrapper</span>);</span><br><span class="line">        maps.<span class="keyword">forEach</span>(<span class="keyword">System</span>.<span class="keyword">out</span>::println);</span><br><span class="line">        //<span class="keyword">SELECT</span> id,<span class="type">name</span>,age,email,<span class="keyword">version</span>,deleted,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> deleted=<span class="number">0</span> <span class="keyword">AND</span> (<span class="type">name</span> <span class="keyword">LIKE</span> <span class="string">&#x27;%2%&#x27;</span> <span class="keyword">AND</span> email <span class="keyword">LIKE</span> <span class="string">&#x27;t%&#x27;</span> <span class="keyword">AND</span> email <span class="keyword">LIKE</span> <span class="string">&#x27;%m&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> test05() &#123;</span><br><span class="line">        //子查询</span><br><span class="line">        QueryWrapper&lt;<span class="keyword">User</span>&gt; <span class="keyword">wrapper</span> = <span class="built_in">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="keyword">wrapper</span>.inSql(&quot;id&quot;, &quot;select id from user where id&lt;3&quot;);</span><br><span class="line">        List&lt;<span class="keyword">Object</span>&gt; objects = userMapper.selectObjs(<span class="keyword">wrapper</span>);</span><br><span class="line">        objects.<span class="keyword">forEach</span>(<span class="keyword">System</span>.<span class="keyword">out</span>::println);</span><br><span class="line">        //<span class="keyword">SELECT</span> id,<span class="type">name</span>,age,email,<span class="keyword">version</span>,deleted,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> deleted=<span class="number">0</span> <span class="keyword">AND</span> (id <span class="keyword">IN</span> (<span class="keyword">select</span> id <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id&lt;<span class="number">3</span>))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> test06() &#123;</span><br><span class="line">        //排序</span><br><span class="line">        QueryWrapper&lt;<span class="keyword">User</span>&gt; <span class="keyword">wrapper</span> = <span class="built_in">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">        <span class="keyword">wrapper</span>.orderByDesc(&quot;id&quot;);      //倒序</span><br><span class="line">        List&lt;<span class="keyword">User</span>&gt; users = userMapper.selectList(<span class="keyword">wrapper</span>);</span><br><span class="line">        users.<span class="keyword">forEach</span>(<span class="keyword">System</span>.<span class="keyword">out</span>::println);</span><br><span class="line">        //<span class="keyword">SELECT</span> id,<span class="type">name</span>,age,email,<span class="keyword">version</span>,deleted,create_time,update_time <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> deleted=<span class="number">0</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">DESC</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多的 Wrapper 方法请到官网下进行查看。</p><h2 id="代码自动生成器"><a href="#代码自动生成器" class="headerlink" title="代码自动生成器"></a>代码自动生成器</h2><p>dao<code>、</code>pojo<code>、</code>service<code>、</code>controller 层自动生成代码。</p><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--代码自动生成器依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity-engine-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997;</span><br><span class="line"></span><br><span class="line">import com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line">import com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.*;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.builder.GeneratorBuilder;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.converts.MySqlTypeConvert;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.querys.MySqlQuery;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.rules.DateType;</span><br><span class="line">import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line">import com.baomidou.mybatisplus.generator.fill.Property;</span><br><span class="line">import com.baomidou.mybatisplus.generator.keywords.MySqlKeyWordsHandler;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> CodeGenerator &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line"></span><br><span class="line">        String projectPath = <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>get<span class="constructor">Property(<span class="string">&quot;user.dir&quot;</span>)</span>;    <span class="comment">//获取用户目录即当前项目路径</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//全局配置</span></span><br><span class="line">        GlobalConfig globalConfig = <span class="module-access"><span class="module"><span class="identifier">GeneratorBuilder</span>.</span></span>global<span class="constructor">ConfigBuilder()</span></span><br><span class="line">                .file<span class="constructor">Override()</span>     <span class="comment">//覆盖已有文件，如果不需要覆盖的话就把这句话注释掉。</span></span><br><span class="line">                .enable<span class="constructor">Swagger()</span>    <span class="comment">//开启 swagger 模式，记得导入 swagger 的依赖。</span></span><br><span class="line">                .output<span class="constructor">Dir(<span class="params">projectPath</span>+<span class="string">&quot;/src/main/java&quot;</span>)</span>    <span class="comment">//输出路径</span></span><br><span class="line">                .<span class="keyword">open</span><span class="constructor">Dir(<span class="params">false</span>)</span>     <span class="comment">//是否打开资源管理器</span></span><br><span class="line">                .author(<span class="string">&quot;Guest997&quot;</span>)     <span class="comment">//作者</span></span><br><span class="line">                .date<span class="constructor">Type(DateType.ONLY_DATE)</span>   <span class="comment">//时间类型</span></span><br><span class="line">                .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//数据源配置</span></span><br><span class="line">        DataSourceConfig dataSourceConfig = <span class="keyword">new</span> DataSourceConfig</span><br><span class="line">                .<span class="constructor">Builder(<span class="string">&quot;jdbc:p6spy:mysql://localhost:3306/mybatis_plus?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;root&quot;</span>)</span></span><br><span class="line">                <span class="comment">//类型转换，数据库 -&gt; JAVA 类型</span></span><br><span class="line">                .<span class="keyword">type</span><span class="constructor">Convert(<span class="params">new</span> MySqlTypeConvert()</span>)</span><br><span class="line">                <span class="comment">//关键字处理 ,这里选取了 mysql5.7 文档中的关键字和保留字（含移除）</span></span><br><span class="line">                .key<span class="constructor">WordsHandler(<span class="params">new</span> MySqlKeyWordsHandler()</span>)</span><br><span class="line">                <span class="comment">//数据库信息查询类，默认由 dbType 类型决定选择对应数据库内置实现。</span></span><br><span class="line">                .db<span class="constructor">Query(<span class="params">new</span> MySqlQuery()</span>)</span><br><span class="line">                .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//包配置</span></span><br><span class="line">        PackageConfig packageConfig = <span class="keyword">new</span> PackageConfig.<span class="constructor">Builder()</span></span><br><span class="line">                .parent(<span class="string">&quot;ml.guest997&quot;</span>)</span><br><span class="line">                .<span class="keyword">module</span><span class="constructor">Name(<span class="string">&quot;blog&quot;</span>)</span></span><br><span class="line">                .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//策略配置</span></span><br><span class="line">        StrategyConfig strategyConfig = <span class="keyword">new</span> StrategyConfig.<span class="constructor">Builder()</span></span><br><span class="line">                .add<span class="constructor">Include(<span class="string">&quot;user&quot;</span>)</span>   <span class="comment">//要生成代码的表名</span></span><br><span class="line">                .enable<span class="constructor">CapitalMode()</span>    <span class="comment">//开启大写命名</span></span><br><span class="line">                .entity<span class="constructor">Builder()</span>        <span class="comment">//实体配置构建者</span></span><br><span class="line">                .enable<span class="constructor">Lombok()</span>         <span class="comment">//开启 lombok 模型</span></span><br><span class="line">                .version<span class="constructor">ColumnName(<span class="string">&quot;version&quot;</span>)</span>   <span class="comment">//乐观锁</span></span><br><span class="line">                .logic<span class="constructor">DeletePropertyName(<span class="string">&quot;deleted&quot;</span>)</span>     <span class="comment">//逻辑删除</span></span><br><span class="line">                <span class="comment">//数据库表映射的命名策略</span></span><br><span class="line">                .naming(<span class="module-access"><span class="module"><span class="identifier">NamingStrategy</span>.</span></span>underline_to_camel)</span><br><span class="line">                .column<span class="constructor">Naming(NamingStrategy.<span class="params">underline_to_camel</span>)</span></span><br><span class="line">                <span class="comment">//自动填充</span></span><br><span class="line">                .add<span class="constructor">TableFills(<span class="params">new</span> Property(<span class="string">&quot;gmt_create&quot;</span>, FieldFill.INSERT_UPDATE)</span>,</span><br><span class="line">                               <span class="keyword">new</span> <span class="constructor">Property(<span class="string">&quot;gmt_modified&quot;</span>, FieldFill.INSERT_UPDATE)</span>)</span><br><span class="line">                .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建代码生成器</span></span><br><span class="line">        AutoGenerator mpg = <span class="keyword">new</span> <span class="constructor">AutoGenerator(<span class="params">dataSourceConfig</span>)</span></span><br><span class="line">                .global(globalConfig)</span><br><span class="line">                .strategy(strategyConfig)</span><br><span class="line">                .package<span class="constructor">Info(<span class="params">packageConfig</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行</span></span><br><span class="line">        mpg.execute<span class="literal">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体效果如下图：<br><img data-src="/images/mybatis-plus-expound04.md-0.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;条件构造器（Wrapper）（重要）&quot;&gt;&lt;a href=&quot;#条件构造器（Wrapper）（重要）&quot; class=&quot;headerlink&quot; title=&quot;条件构造器（Wrapper）（重要）&quot;&gt;&lt;/a&gt;条件构造器（Wrapper）（重要）&lt;/h2&gt;&lt;p&gt;写一些复杂的 sql 语句就可以使用它来替代。&lt;strong&gt;注意：查看输出的 SQL 进行分析&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight pgsql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package ml.guest997;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ml.guest997.mapper.UserMapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ml.guest997.pojo.&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.jupiter.api.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.beans.factory.annotation.Autowired;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.boot.test.context.SpringBootTest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@SpringBootTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; WrapperTest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Autowired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private UserMapper userMapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; test01() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //查询邮箱不为空且年龄大于等于&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;小于&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;的用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryWrapper&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .isNotNull(&amp;quot;email&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .ge(&amp;quot;age&amp;quot;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .lt(&amp;quot;age&amp;quot;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        userMapper.selectList(&lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;).&lt;span class=&quot;keyword&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id,&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt;,age,email,&lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;,deleted,create_time,update_time &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deleted=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (email &lt;span class=&quot;keyword&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; age &amp;gt;= &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; age &amp;lt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; test02() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //查询 &lt;span class=&quot;type&quot;&gt;name&lt;/span&gt; 为 Tom 的用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryWrapper&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;.eq(&amp;quot;name&amp;quot;, &amp;quot;Tom&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; = userMapper.selectOne(&lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;);      //查询一条记录，多条记录使用 List 或者 Map。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id,&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt;,age,email,&lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;,deleted,create_time,update_time &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deleted=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;Tom&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; test03() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //查询年龄在 &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; ~ &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; 之间的用户总数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryWrapper&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;between&lt;/span&gt;(&amp;quot;age&amp;quot;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Integer&lt;/span&gt; count = userMapper.selectCount(&lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;);    //查询结果数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; COUNT( * ) &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deleted=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (age &lt;span class=&quot;keyword&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; test04() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //查询 &lt;span class=&quot;type&quot;&gt;name&lt;/span&gt; 中包含 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; 且 email 以 t 开头、m 结尾的用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryWrapper&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .&lt;span class=&quot;keyword&quot;&gt;like&lt;/span&gt;(&amp;quot;name&amp;quot;, &amp;quot;2&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //指的是 % 在左还是右&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .likeRight(&amp;quot;email&amp;quot;, &amp;quot;t&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .likeLeft(&amp;quot;email&amp;quot;, &amp;quot;m&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;Map&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;&amp;gt;&amp;gt; maps = userMapper.selectMaps(&lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maps.&lt;span class=&quot;keyword&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id,&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt;,age,email,&lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;,deleted,create_time,update_time &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deleted=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;%2%&amp;#x27;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; email &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;t%&amp;#x27;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; email &lt;span class=&quot;keyword&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;%m&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; test05() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //子查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryWrapper&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;.inSql(&amp;quot;id&amp;quot;, &amp;quot;select id from user where id&amp;lt;3&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;&amp;gt; objects = userMapper.selectObjs(&lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        objects.&lt;span class=&quot;keyword&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id,&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt;,age,email,&lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;,deleted,create_time,update_time &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deleted=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;AND&lt;/span&gt; (id &lt;span class=&quot;keyword&quot;&gt;IN&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; id &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;where&lt;/span&gt; id&amp;lt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; test06() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //排序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        QueryWrapper&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; QueryWrapper&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;.orderByDesc(&amp;quot;id&amp;quot;);      //倒序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;&amp;gt; users = userMapper.selectList(&lt;span class=&quot;keyword&quot;&gt;wrapper&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        users.&lt;span class=&quot;keyword&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;keyword&quot;&gt;SELECT&lt;/span&gt; id,&lt;span class=&quot;type&quot;&gt;name&lt;/span&gt;,age,email,&lt;span class=&quot;keyword&quot;&gt;version&lt;/span&gt;,deleted,create_time,update_time &lt;span class=&quot;keyword&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WHERE&lt;/span&gt; deleted=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; id &lt;span class=&quot;keyword&quot;&gt;DESC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更多的 Wrapper 方法请到官网下进行查看。&lt;/p&gt;
&lt;h2 id=&quot;代码自动生成器&quot;&gt;&lt;a href=&quot;#代码自动生成器&quot; class=&quot;headerlink&quot; title=&quot;代码自动生成器&quot;&gt;&lt;/a&gt;代码自动生成器&lt;/h2&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="mybatis-plus" scheme="http://guest997.tk/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-Plus 详解(三)</title>
    <link href="http://guest997.tk/2021/08/31/mybatis-plus-expound03/"/>
    <id>http://guest997.tk/2021/08/31/mybatis-plus-expound03/</id>
    <published>2021-08-31T14:25:23.000Z</published>
    <updated>2021-09-02T05:16:36.580Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查询测试"><a href="#查询测试" class="headerlink" title="查询测试"></a>查询测试</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void context<span class="constructor">Loads06()</span> &#123;</span><br><span class="line">    <span class="comment">//通过一个 id 查询一条记录</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(userMapper.select<span class="constructor">ById(1)</span>);</span><br><span class="line">    <span class="comment">//通过多个 id 查询多条记录</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(userMapper.select<span class="constructor">BatchIds(Arrays.<span class="params">asList</span>(2, 3)</span>));</span><br><span class="line">    <span class="comment">//查询全部记录</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(userMapper.select<span class="constructor">List(<span class="params">null</span>)</span>);</span><br><span class="line">    <span class="comment">//通过条件查询记录</span></span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;<span class="literal">()</span>;</span><br><span class="line">    map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(userMapper.select<span class="constructor">ByMap(<span class="params">map</span>)</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">User(<span class="attribute">id</span>=1, <span class="attribute">name</span>=测试1..., <span class="attribute">age</span>=18, <span class="attribute">email</span>=test1@baomidou.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021)</span><br><span class="line"></span><br><span class="line">[User(<span class="attribute">id</span>=2, <span class="attribute">name</span>=测试2..., <span class="attribute">age</span>=66, <span class="attribute">email</span>=test2@baomidou.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021), </span><br><span class="line">User(<span class="attribute">id</span>=3, <span class="attribute">name</span>=Tom, <span class="attribute">age</span>=18, <span class="attribute">email</span>=TEST..., <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 21:20:01 CST 2021)]</span><br><span class="line"></span><br><span class="line">[User(<span class="attribute">id</span>=1, <span class="attribute">name</span>=测试1..., <span class="attribute">age</span>=18, <span class="attribute">email</span>=test1@baomidou.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021), </span><br><span class="line">User(<span class="attribute">id</span>=2, <span class="attribute">name</span>=测试2..., <span class="attribute">age</span>=66, <span class="attribute">email</span>=test2@baomidou.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021),</span><br><span class="line">User(<span class="attribute">id</span>=3, <span class="attribute">name</span>=Tom, <span class="attribute">age</span>=18, <span class="attribute">email</span>=TEST..., <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 21:20:01 CST 2021), </span><br><span class="line">User(<span class="attribute">id</span>=4, <span class="attribute">name</span>=Test02, <span class="attribute">age</span>=21, <span class="attribute">email</span>=1036635267@qq.com, <span class="attribute">version</span>=2, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 22:21:46 CST 2021),</span><br><span class="line">User(<span class="attribute">id</span>=5, <span class="attribute">name</span>=Billie, <span class="attribute">age</span>=24, <span class="attribute">email</span>=test5@baomidou.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021), </span><br><span class="line">User(<span class="attribute">id</span>=1426753508230733825, <span class="attribute">name</span>=Guest997, <span class="attribute">age</span>=18, <span class="attribute">email</span>=1036635267@qq.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021), User(<span class="attribute">id</span>=1426753508230733826, <span class="attribute">name</span>=Guest997, <span class="attribute">age</span>=18, <span class="attribute">email</span>=1036635267@qq.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 20:48:17 CST 2021), User(<span class="attribute">id</span>=1426753508230733827, <span class="attribute">name</span>=GUEST997, <span class="attribute">age</span>=18, <span class="attribute">email</span>=1036635267@qq.com, <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 21:20:01 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 21:20:01 CST 2021)]</span><br><span class="line"></span><br><span class="line">[User(<span class="attribute">id</span>=3, <span class="attribute">name</span>=Tom, <span class="attribute">age</span>=18, <span class="attribute">email</span>=TEST..., <span class="attribute">version</span>=1, <span class="attribute">createTime</span>=Sun Aug 15 20:48:17 CST 2021, <span class="attribute">updateTime</span>=Sun Aug 15 21:20:01 CST 2021)]</span><br></pre></td></tr></table></figure><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>配置分页插件</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line"><span class="keyword">public</span> MybatisPlusInterceptor mybatisPlusInterceptor() &#123;</span><br><span class="line">    MybatisPlusInterceptor interceptor = <span class="keyword">new</span> <span class="type">MybatisPlusInterceptor</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置乐观锁插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="type">OptimisticLockerInnerInterceptor</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置分页插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="type">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> interceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void context<span class="constructor">Loads07()</span> &#123;</span><br><span class="line">    <span class="comment">//一般是从前端获取当前页</span></span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">2</span>, <span class="number">5</span>);  <span class="comment">//参数一为当前页，参数二为页面容量。</span></span><br><span class="line">    Page&lt;User&gt; userPage = userMapper.select<span class="constructor">Page(<span class="params">page</span>, <span class="params">null</span>)</span>;</span><br><span class="line">    userPage.get<span class="constructor">Records()</span>.<span class="keyword">for</span><span class="constructor">Each(System.<span class="params">out</span>::<span class="params">println</span>)</span>;</span><br><span class="line">    <span class="comment">//一般前端还会展示总记录数和总页数，而 new Page 的时候就已经会查询出所有记录了。</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(page.get<span class="constructor">Total()</span>);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(page.get<span class="constructor">Pages()</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">User</span>(id=<span class="number">1426753508230733825</span>, name=Guest<span class="number">997</span>, age=<span class="number">18</span>, email=<span class="number">1036635267</span>@qq.com, version=<span class="number">1</span>, createTime=Sun Aug <span class="number">15</span> <span class="number">20</span>:<span class="number">48</span>:<span class="number">17</span> CST <span class="number">2021</span>, updateTime=Sun Aug <span class="number">15</span> <span class="number">20</span>:<span class="number">48</span>:<span class="number">17</span> CST <span class="number">2021</span>)</span><br><span class="line"><span class="attribute">User</span>(id=<span class="number">1426753508230733826</span>, name=Guest<span class="number">997</span>, age=<span class="number">18</span>, email=<span class="number">1036635267</span>@qq.com, version=<span class="number">1</span>, createTime=Sun Aug <span class="number">15</span> <span class="number">20</span>:<span class="number">48</span>:<span class="number">17</span> CST <span class="number">2021</span>, updateTime=Sun Aug <span class="number">15</span> <span class="number">20</span>:<span class="number">48</span>:<span class="number">17</span> CST <span class="number">2021</span>)</span><br><span class="line"><span class="attribute">User</span>(id=<span class="number">1426753508230733827</span>, name=GUEST<span class="number">997</span>, age=<span class="number">18</span>, email=<span class="number">1036635267</span>@qq.com, version=<span class="number">1</span>, createTime=Sun Aug <span class="number">15</span> <span class="number">21</span>:<span class="number">20</span>:<span class="number">01</span> CST <span class="number">2021</span>, updateTime=Sun Aug <span class="number">15</span> <span class="number">21</span>:<span class="number">20</span>:<span class="number">01</span> CST <span class="number">2021</span>)</span><br><span class="line"><span class="attribute">8</span></span><br><span class="line"><span class="attribute">2</span></span><br></pre></td></tr></table></figure><h2 id="删除测试"><a href="#删除测试" class="headerlink" title="删除测试"></a>删除测试</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@<span class="function">Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">contextLoads08</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//通过一个 id 删除一条记录</span></span><br><span class="line">    System.out.<span class="built_in">println</span>(userMapper.<span class="built_in">deleteById</span>(<span class="number">1426753508230733827L</span>));</span><br><span class="line">    <span class="comment">//通过多个 id 删除多条记录</span></span><br><span class="line">    System.out.<span class="built_in">println</span>(userMapper.<span class="built_in">deleteBatchIds</span>(Arrays.<span class="built_in">asList</span>(<span class="number">1426753508230733825L</span>, <span class="number">1426753508230733826L</span>)));</span><br><span class="line">    <span class="comment">//通过条件删除记录</span></span><br><span class="line">    Map&lt;<span class="keyword">String</span>, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.<span class="built_in">put</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Billie&quot;</span>);</span><br><span class="line">    map.<span class="built_in">put</span>(<span class="string">&quot;age&quot;</span>, <span class="number">24</span>);</span><br><span class="line">    System.out.<span class="built_in">println</span>(userMapper.<span class="built_in">deleteByMap</span>(map));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果为  1 2 1</span></span><br></pre></td></tr></table></figure><h2 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h2><p><strong>物理删除</strong>：数据库中直接移除记录<br><strong>逻辑删除</strong>：数据库中没有移除记录，而是通过一个属性来让他失效。 deleted = 0 =&gt; deleted = 1</p><p>管理员可以查看被删除的记录，防止误操作导致的数据丢失，类似于回收站。</p><p>在表中新增属性：deleted。<img data-src="/images/mybatis-plus-expound03.md-0.png"></p><p>实体类添加对应属性。</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span>     <span class="comment">//表示逻辑删除</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><p>application.yaml 配置文件中配置逻辑删除</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="comment">#配置日志</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span>   <span class="comment">#控制台输出</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">logic-not-delete-value:</span> <span class="number">0</span>   <span class="comment">#未删除属性值是0</span></span><br><span class="line">      <span class="attr">logic-delete-value:</span> <span class="number">1</span>   <span class="comment">#已删除属性值是1</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void co<span class="symbol">ntextLoads09</span><span class="comment">()</span> &#123;</span><br><span class="line">    userMapper.deleteById<span class="comment">(1)</span>;</span><br><span class="line">    userMapper.selectById<span class="comment">(1)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下图，可以发现逻辑删除操作实质就是更改操作。并且配置了逻辑删除，所有的 sql 语句的 where 条件子句中都会带上逻辑删除的条件 deleted=0。<img data-src="/images/mybatis-plus-expound03.md-1.png"></p><h2 id="防止全表更新与删除"><a href="#防止全表更新与删除" class="headerlink" title="防止全表更新与删除"></a>防止全表更新与删除</h2><p>业务 bug 或者漏洞可能导致把整个表都更新或者删除，在生产环境中这是十分危险的事情，MP 也考虑到了这一点，提供了防止全表更新与删除插件。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line"><span class="keyword">public</span> MybatisPlusInterceptor mybatisPlusInterceptor() &#123;</span><br><span class="line">    MybatisPlusInterceptor interceptor = <span class="keyword">new</span> <span class="type">MybatisPlusInterceptor</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置乐观锁插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="type">OptimisticLockerInnerInterceptor</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置分页插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="type">PaginationInnerInterceptor</span>(DbType.MYSQL));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置防止全表更新与删除插件</span></span><br><span class="line">    interceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="type">BlockAttackInnerInterceptor</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> interceptor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line"><span class="type">void</span> contextLoads10() &#123;</span><br><span class="line">    <span class="keyword">System</span>.<span class="keyword">out</span>.println(userMapper.<span class="keyword">delete</span>(<span class="keyword">null</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line"><span class="type">void</span> contextLoads11() &#123;</span><br><span class="line">    LambdaUpdateWrapper&lt;<span class="keyword">User</span>&gt; updateWrapper = <span class="built_in">new</span> LambdaUpdateWrapper&lt;<span class="keyword">User</span>&gt;().<span class="keyword">set</span>(<span class="keyword">User</span>::getAge, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">System</span>.<span class="keyword">out</span>.println(userMapper.<span class="keyword">update</span>(<span class="keyword">null</span>, updateWrapper));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>两个的测试都会直接报错：Prohibition of table update/dalete operation</p><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><p>在平时的工作和开发中，我们可能会遇到一些慢 SQL，可以通过一些测试或者测压工具来查看，或者通过 Druid 数据源的 SQL 监控功能。MP 也提供了性能分析插件，用于输出每条 SQL 语句及其执行时间，如果超过这个时间就停止运行，并且抛出异常。</p><p>MP 新版已经移除了内置的性能分析插件，需要添加第三方依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--p6spy 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改 application.yaml 配置文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spring:</span></span><br><span class="line"><span class="symbol">  datasource:</span></span><br><span class="line"><span class="symbol">    username:</span> root</span><br><span class="line"><span class="symbol">    password:</span> root</span><br><span class="line">    <span class="meta">#数据库连接修改为 jdbc:p6spy:mysql:数据库</span></span><br><span class="line"><span class="symbol">    url:</span> jdbc:p6spy:mysql:<span class="comment">//localhost:3306/mybatis_plus?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="meta">#为了执行 SQL 分析打印，需要将数据库驱动修改为 P6SpyDriver。</span></span><br><span class="line">    driver-class-name: com.p6spy.engine.spy.P6SpyDriver</span><br></pre></td></tr></table></figure><p>在 resources 目录下创建 <strong>spy.properties</strong> 配置文件。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#3.2.1以上使用</span></span><br><span class="line"><span class="attr">modulelist</span>=com.baomidou.mybatisplus.extension.p6spy.MybatisPlusLogFactory,com.p6spy.engine.outage.P6OutageFactory</span><br><span class="line"><span class="comment">#3.2.1以下使用或者不配置</span></span><br><span class="line"><span class="comment">#modulelist=com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span></span><br><span class="line"><span class="comment"># 自定义日志打印</span></span><br><span class="line"><span class="attr">logMessageFormat</span>=com.baomidou.mybatisplus.extension.p6spy.P6SpyLogger</span><br><span class="line"><span class="comment">#日志输出到控制台</span></span><br><span class="line"><span class="attr">appender</span>=com.baomidou.mybatisplus.extension.p6spy.StdoutLogger</span><br><span class="line"><span class="comment"># 使用日志系统记录 sql</span></span><br><span class="line"><span class="comment">#appender=com.p6spy.engine.spy.appender.Slf4JLogger</span></span><br><span class="line"><span class="comment"># 设置 p6spy driver 代理</span></span><br><span class="line"><span class="attr">deregisterdrivers</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 取消JDBC URL前缀</span></span><br><span class="line"><span class="attr">useprefix</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 配置记录 Log 例外,可去掉的结果集有error,info,batch,debug,statement,commit,rollback,result,resultset.</span></span><br><span class="line"><span class="attr">excludecategories</span>=info,debug,result,commit,resultset</span><br><span class="line"><span class="comment"># 日期格式</span></span><br><span class="line"><span class="attr">dateformat</span>=yyyy-MM-dd HH:mm:ss</span><br><span class="line"><span class="comment"># 实际驱动可多个</span></span><br><span class="line"><span class="comment">#driverlist=org.h2.Driver</span></span><br><span class="line"><span class="comment"># 是否开启慢SQL记录</span></span><br><span class="line"><span class="attr">outagedetection</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment"># 慢SQL记录标准 2 秒</span></span><br><span class="line"><span class="attr">outagedetectioninterval</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>测试</p><p>执行之前的查询所有用户方法 contextLoads()。结果如下图：<img data-src="/images/mybatis-plus-expound03.md-2.png"></p><p>可以看到 sql 的执行时间是31ms，而我们设置的是2s，所以是能够执行成功的。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;查询测试&quot;&gt;&lt;a href=&quot;#查询测试&quot; class=&quot;headerlink&quot; title=&quot;查询测试&quot;&gt;&lt;/a&gt;查询测试&lt;/h2&gt;&lt;figure class=&quot;highlight reasonml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void context&lt;span class=&quot;constructor&quot;&gt;Loads06()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//通过一个 id 查询一条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;module-access&quot;&gt;&lt;span class=&quot;module&quot;&gt;&lt;span class=&quot;identifier&quot;&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(userMapper.select&lt;span class=&quot;constructor&quot;&gt;ById(1)&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//通过多个 id 查询多条记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;module-access&quot;&gt;&lt;span class=&quot;module&quot;&gt;&lt;span class=&quot;identifier&quot;&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(userMapper.select&lt;span class=&quot;constructor&quot;&gt;BatchIds(Arrays.&lt;span class=&quot;params&quot;&gt;asList&lt;/span&gt;(2, 3)&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//查询全部记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;module-access&quot;&gt;&lt;span class=&quot;module&quot;&gt;&lt;span class=&quot;identifier&quot;&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(userMapper.select&lt;span class=&quot;constructor&quot;&gt;List(&lt;span class=&quot;params&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//通过条件查询记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, Object&amp;gt; map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&amp;gt;&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map.put(&lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Tom&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    map.put(&lt;span class=&quot;string&quot;&gt;&amp;quot;age&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;module-access&quot;&gt;&lt;span class=&quot;module&quot;&gt;&lt;span class=&quot;identifier&quot;&gt;System&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;out.println(userMapper.select&lt;span class=&quot;constructor&quot;&gt;ByMap(&lt;span class=&quot;params&quot;&gt;map&lt;/span&gt;)&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;结果为：&lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=测试1..., &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=test1@baomidou.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=2, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=测试2..., &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=66, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=test2@baomidou.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=3, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Tom, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=TEST..., &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 21:20:01 CST 2021)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=测试1..., &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=test1@baomidou.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=2, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=测试2..., &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=66, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=test2@baomidou.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=3, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Tom, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=TEST..., &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 21:20:01 CST 2021), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=4, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Test02, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=21, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=1036635267@qq.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=2, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 22:21:46 CST 2021),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=5, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Billie, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=24, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=test5@baomidou.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=1426753508230733825, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Guest997, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=1036635267@qq.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021), User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=1426753508230733826, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Guest997, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=1036635267@qq.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021), User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=1426753508230733827, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=GUEST997, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=1036635267@qq.com, &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 21:20:01 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 21:20:01 CST 2021)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[User(&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=3, &lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;=Tom, &lt;span class=&quot;attribute&quot;&gt;age&lt;/span&gt;=18, &lt;span class=&quot;attribute&quot;&gt;email&lt;/span&gt;=TEST..., &lt;span class=&quot;attribute&quot;&gt;version&lt;/span&gt;=1, &lt;span class=&quot;attribute&quot;&gt;createTime&lt;/span&gt;=Sun Aug 15 20:48:17 CST 2021, &lt;span class=&quot;attribute&quot;&gt;updateTime&lt;/span&gt;=Sun Aug 15 21:20:01 CST 2021)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;分页查询&quot;&gt;&lt;a href=&quot;#分页查询&quot; class=&quot;headerlink&quot; title=&quot;分页查询&quot;&gt;&lt;/a&gt;分页查询&lt;/h2&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="mybatis-plus" scheme="http://guest997.tk/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-Plus 详解(二)</title>
    <link href="http://guest997.tk/2021/08/27/mybatis-plus-expound02/"/>
    <id>http://guest997.tk/2021/08/27/mybatis-plus-expound02/</id>
    <published>2021-08-27T01:50:41.000Z</published>
    <updated>2021-09-02T05:16:29.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="增加测试"><a href="#增加测试" class="headerlink" title="增加测试"></a>增加测试</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line"><span class="type">void</span> contextLoads02() &#123;</span><br><span class="line">    <span class="keyword">User</span> <span class="keyword">user</span> = <span class="built_in">new</span> <span class="keyword">User</span>();</span><br><span class="line">    <span class="keyword">user</span>.setName(&quot;Guest997&quot;);</span><br><span class="line">    <span class="keyword">user</span>.setAge(<span class="number">18</span>);</span><br><span class="line">    <span class="keyword">user</span>.setEmail(&quot;1036635267@qq.com&quot;);</span><br><span class="line">    <span class="type">int</span> res = userMapper.<span class="keyword">insert</span>(<span class="keyword">user</span>);</span><br><span class="line">    <span class="keyword">System</span>.<span class="keyword">out</span>.println(res);    //影响的行数</span><br><span class="line">    <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="keyword">user</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*结果为</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">User(id=1426753508230733825, name=Guest997, age=18, email=1036635267@qq.com)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>从结果可以看出，id 是自动生成的，而这全局的唯一 id 又是怎么生成的呢？</p><h2 id="唯一-id-生成策略"><a href="#唯一-id-生成策略" class="headerlink" title="唯一 id 生成策略"></a>唯一 id 生成策略</h2><p>可以点击后方链接了解唯一 id 生成的各种方案。<a href="https://www.cnblogs.com/haoxinyue/p/5208136.html">https://www.cnblogs.com/haoxinyue/p/5208136.html</a></p><h3 id="主键自增"><a href="#主键自增" class="headerlink" title="主键自增"></a>主键自增</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.<span class="keyword">annotation</span>.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.<span class="keyword">annotation</span>.TableId;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@TableId(type = IdType.AUTO)</span>    <span class="comment">//设置 id 生成方式为自增，数据库 id 属性也要设置为自增，否则就会报错。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">Long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次运行上面的 contextLoads02() ，会发现结果相较于上个 id 加了一。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">1</span></span><br><span class="line"><span class="selector-tag">User</span>(id=<span class="number">1426753508230733826</span>, name=Guest997, age=<span class="number">18</span>, email=<span class="number">1036635267</span><span class="variable">@qq</span>.com)</span><br></pre></td></tr></table></figure><h3 id="雪花算法"><a href="#雪花算法" class="headerlink" title="雪花算法"></a>雪花算法</h3><p>雪花算法是 Twitter 开源的分布式 ID 生成算法，结果是一个 long 型的 ID。其核心思想是：使用41 bit 作为毫秒数，10 bit 作为机器的 ID（5个 bit 是数据中心，5个 bit 是机器 ID），12 bit 作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID），最后还有一个符号位，永远是0。</p><p>在 MyBatis-Plus 中默认就是使用这种算法生成 id，@TableId(type = IdType.ASSIGN_ID)。</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> IdType &#123;</span><br><span class="line">    AUTO(<span class="number">0</span>),    <span class="comment">//id 自增</span></span><br><span class="line">    NONE(<span class="number">1</span>),    <span class="comment">//未设置 id 主键</span></span><br><span class="line">    INPUT(<span class="number">2</span>),    <span class="comment">//手动输入 id</span></span><br><span class="line">    ASSIGN_ID(<span class="number">3</span>),    <span class="comment">//默认的全局唯一 id</span></span><br><span class="line">    ASSIGN_UUID(<span class="number">4</span>);    <span class="comment">//全局唯一 id uuid</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="built_in">int</span> <span class="built_in">key</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IdType(<span class="built_in">int</span> <span class="built_in">key</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.<span class="built_in">key</span> = <span class="built_in">key</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> getKey() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.<span class="built_in">key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更改测试"><a href="#更改测试" class="headerlink" title="更改测试"></a>更改测试</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void context<span class="constructor">Loads03()</span> &#123;</span><br><span class="line">    User user01 = <span class="keyword">new</span> <span class="constructor">User()</span>;</span><br><span class="line">    user01.set<span class="constructor">Id(1L)</span>;</span><br><span class="line">    user01.set<span class="constructor">Name(<span class="string">&quot;测试1...&quot;</span>)</span>;</span><br><span class="line">    <span class="built_in">int</span> res01 = userMapper.update<span class="constructor">ById(<span class="params">user01</span>)</span>;      <span class="comment">//传入的参数是一个对象</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(res01);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(user01);</span><br><span class="line"></span><br><span class="line">    User user02 = <span class="keyword">new</span> <span class="constructor">User()</span>;</span><br><span class="line">    user02.set<span class="constructor">Id(2L)</span>;</span><br><span class="line">    user02.set<span class="constructor">Age(66)</span>;</span><br><span class="line">    user02.set<span class="constructor">Name(<span class="string">&quot;测试2...&quot;</span>)</span>;</span><br><span class="line">    <span class="built_in">int</span> res02 = userMapper.update<span class="constructor">ById(<span class="params">user02</span>)</span>;      <span class="comment">//传入的参数是一个对象</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(res02);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(user02);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下图，可以发现 MyBatis-Plus 自动拼接了动态 sql 语句。<img data-src="/images/mybatis-plus-expound02.md-0.png"></p><h2 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h2><p>数据库表属性：gmt_create（创建时间）、gmt_modified（修改时间）几乎所有的表都要配置上，而且需要自动化更新，不希望手动更新。</p><h3 id="方式一：数据库级别（工作中不允许修改数据库）"><a href="#方式一：数据库级别（工作中不允许修改数据库）" class="headerlink" title="方式一：数据库级别（工作中不允许修改数据库）"></a>方式一：数据库级别（工作中不允许修改数据库）</h3><p>在表中新增属性：create_time 和 update_time。<img data-src="/images/mybatis-plus-expound02.md-1.png"></p><p>实体类添加对应属性。</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">Date</span> createTime;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">Date</span> updateTime;</span><br></pre></td></tr></table></figure><p>执行上面的更改测试。结果如下图，可以发现全部的数据都加上了时间。<img data-src="/images/mybatis-plus-expound02.md-2.png"></p><h3 id="方式二：代码级别"><a href="#方式二：代码级别" class="headerlink" title="方式二：代码级别"></a>方式二：代码级别</h3><p>删除数据库的默认值。<img data-src="/images/mybatis-plus-expound02.md-3.png"></p><p>实体类属性上增加注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span>    <span class="comment">//进行增加操作时属性自动填充</span></span><br><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span>     <span class="comment">//进行增加和更改操作时属性自动填充</span></span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure><p>编写处理器来处理注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>  <span class="comment">//放入到 Spring 容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加时的填充策略</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>, <span class="keyword">new</span> Date(), metaObject);</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>, <span class="keyword">new</span> Date(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更改时的填充策略</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>, <span class="keyword">new</span> Date(), metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void context<span class="constructor">Loads04()</span> &#123;</span><br><span class="line">    User user01 = <span class="keyword">new</span> <span class="constructor">User()</span>;</span><br><span class="line">    user01.set<span class="constructor">Name(<span class="string">&quot;GUEST997&quot;</span>)</span>;</span><br><span class="line">    user01.set<span class="constructor">Age(18)</span>;</span><br><span class="line">    user01.set<span class="constructor">Email(<span class="string">&quot;1036635267@qq.com&quot;</span>)</span>;</span><br><span class="line">    <span class="built_in">int</span> res01 = userMapper.insert(user01);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(res01);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(user01);</span><br><span class="line"></span><br><span class="line">    User user02 = <span class="keyword">new</span> <span class="constructor">User()</span>;</span><br><span class="line">    user02.set<span class="constructor">Id(3L)</span>;</span><br><span class="line">    user02.set<span class="constructor">Age(18)</span>;</span><br><span class="line">    user02.set<span class="constructor">Email(<span class="string">&quot;TEST...&quot;</span>)</span>;</span><br><span class="line">    <span class="built_in">int</span> res02 = userMapper.update<span class="constructor">ById(<span class="params">user02</span>)</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(res02);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(user02);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现结果如处理器中的策略一样。</p><p><img data-src="/images/mybatis-plus-expound02.md-4.png"></p><h2 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h2><p>乐观锁的主要作用是为了解决事务并发带来的问题。相对于悲观锁而言，乐观锁机制采取了更加宽松的加锁机制。</p><p><strong>乐观锁</strong>：故名思意十分乐观，它总是认为不会出现问题，无论干什么不去上锁！如果出现了问题，再次更新值测试。<br><strong>悲观锁</strong>：故名思意十分悲观，它总是认为总是出现问题，无论干什么都会上锁！再去操作。</p><p><strong>乐观锁实现方式：</strong></p><ul><li>  取出记录时，获取当前 version。</li><li>  更新记录时，带上这个 version。</li><li>  如果 version 不对，就更新失败。</li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- A 线程</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="type">name</span> = &quot;Guest997&quot;, version = <span class="keyword">version</span> + <span class="number">1</span> </span><br><span class="line"><span class="keyword">where</span> id = <span class="number">2</span> <span class="keyword">and</span> version = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- B 线程抢先完成，这个时候 version = 2，会导致 A 线程修改失败。</span></span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> <span class="type">name</span> = &quot;Guest997&quot;, version = <span class="keyword">version</span> + <span class="number">1</span> </span><br><span class="line"><span class="keyword">where</span> id = <span class="number">2</span> <span class="keyword">and</span> version = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>在表中新增属性：version。<img data-src="/images/mybatis-plus-expound02.md-5.png"></p><p>实体类添加对应属性。</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@Version</span>    <span class="comment">//表示这是一个乐观锁</span></span><br><span class="line"><span class="keyword">private</span> Integer <span class="keyword">version</span>;</span><br></pre></td></tr></table></figure><p>配置乐观锁插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.OptimisticLockerInnerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MPConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MybatisPlusInterceptor <span class="title">mybatisPlusInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MybatisPlusInterceptor interceptor = <span class="keyword">new</span> MybatisPlusInterceptor();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//配置乐观锁插件</span></span><br><span class="line">        interceptor.addInnerInterceptor(<span class="keyword">new</span> OptimisticLockerInnerInterceptor());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> interceptor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">void context<span class="constructor">Loads05()</span> &#123;</span><br><span class="line">    <span class="comment">//模拟线程1</span></span><br><span class="line">    User user01 = userMapper.select<span class="constructor">ById(4L)</span>;</span><br><span class="line">    user01.set<span class="constructor">Name(<span class="string">&quot;Test01&quot;</span>)</span>;</span><br><span class="line">    user01.set<span class="constructor">Email(<span class="string">&quot;1036635267@qq.com&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//模拟线程2抢先完成操作</span></span><br><span class="line">    User user02 = userMapper.select<span class="constructor">ById(4L)</span>;</span><br><span class="line">    user02.set<span class="constructor">Name(<span class="string">&quot;Test02&quot;</span>)</span>;</span><br><span class="line">    user02.set<span class="constructor">Email(<span class="string">&quot;1036635267@qq.com&quot;</span>)</span>;</span><br><span class="line">    userMapper.update<span class="constructor">ById(<span class="params">user02</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//可以通过自旋锁来多次尝试提交</span></span><br><span class="line">    userMapper.update<span class="constructor">ById(<span class="params">user01</span>)</span>;   <span class="comment">//如果没有乐观锁就会覆盖插队线程的值。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下图，可以看出只有模拟的线程2实现了操作，模拟线程1的操作是失败的。<img data-src="/images/mybatis-plus-expound02.md-6.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;增加测试&quot;&gt;&lt;a href=&quot;#增加测试&quot; class=&quot;headerlink&quot; title=&quot;增加测试&quot;&gt;&lt;/a&gt;增加测试&lt;/h2&gt;&lt;figure class=&quot;highlight pgsql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; contextLoads02() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;User&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;.setName(&amp;quot;Guest997&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;.setAge(&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;.setEmail(&amp;quot;1036635267@qq.com&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; res = userMapper.&lt;span class=&quot;keyword&quot;&gt;insert&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(res);    //影响的行数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*结果为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;User(id=1426753508230733825, name=Guest997, age=18, email=1036635267@qq.com)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;从结果可以看出，id 是自动生成的，而这全局的唯一 id 又是怎么生成的呢？&lt;/p&gt;
&lt;h2 id=&quot;唯一-id-生成策略&quot;&gt;&lt;a href=&quot;#唯一-id-生成策略&quot; class=&quot;headerlink&quot; title=&quot;唯一 id 生成策略&quot;&gt;&lt;/a&gt;唯一 id 生成策略&lt;/h2&gt;&lt;p&gt;可以点击后方链接了解唯一 id 生成的各种方案。&lt;a href=&quot;https://www.cnblogs.com/haoxinyue/p/5208136.html&quot;&gt;https://www.cnblogs.com/haoxinyue/p/5208136.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="mybatis-plus" scheme="http://guest997.tk/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-Plus 详解(一)</title>
    <link href="http://guest997.tk/2021/08/27/mybatis-plus-expound01/"/>
    <id>http://guest997.tk/2021/08/27/mybatis-plus-expound01/</id>
    <published>2021-08-27T01:42:22.000Z</published>
    <updated>2021-09-02T05:16:13.798Z</updated>
    
    <content type="html"><![CDATA[<p>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><h2 id="第一个-MyBatis-Plus-程序"><a href="#第一个-MyBatis-Plus-程序" class="headerlink" title="第一个 MyBatis-Plus 程序"></a>第一个 MyBatis-Plus 程序</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>创建 mybatis_plus 数据库，并创建 user 表以及插入数据。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mybatis_plus;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">USER</span></span><br><span class="line">(</span><br><span class="line">    id <span class="type">BIGINT</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">    <span class="type">NAME</span> <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY KEY</span> (id)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">USER</span> (id, <span class="type">NAME</span>, age, email) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;Jone&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;test1@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;test2@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="number">28</span>, <span class="string">&#x27;test3@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;Sandy&#x27;</span>, <span class="number">21</span>, <span class="string">&#x27;test4@baomidou.com&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;Billie&#x27;</span>, <span class="number">24</span>, <span class="string">&#x27;test5@baomidou.com&#x27;</span>);</span><br></pre></td></tr></table></figure><p>新建 SpringBoot 项目，导入 Lombok、Spring Web 和 MySQL Driver 依赖。</p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis-plus 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写数据库连接配置"><a href="#编写数据库连接配置" class="headerlink" title="编写数据库连接配置"></a>编写数据库连接配置</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spring:</span></span><br><span class="line"><span class="symbol">  datasource:</span></span><br><span class="line"><span class="symbol">    username:</span> root</span><br><span class="line"><span class="symbol">    password:</span> root</span><br><span class="line"><span class="symbol">    url:</span> jdbc:mysql:<span class="comment">//localhost:3306/mybatis_plus?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    driver-class-name: com.mysql.jdbc.Driver</span><br></pre></td></tr></table></figure><h3 id="POJO-层"><a href="#POJO-层" class="headerlink" title="POJO 层"></a>POJO 层</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Mapper-层"><a href="#Mapper-层" class="headerlink" title="Mapper 层"></a>Mapper 层</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line">@Repository</span><br><span class="line"><span class="comment">//在 Mapper 接口上继承基本的类 BaseMapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="symbol">UserMapper</span> <span class="symbol">extends</span> <span class="symbol">BaseMapper</span>&lt;<span class="symbol">User</span>&gt; &#123;</span><br><span class="line">    <span class="comment">//常用、简单的 CRUD 操作都已经编写完成了，不需要像之前一样写一堆 sql 语句了。当然无法满足需求时，重写方法即可。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MyBatisPlusApplication-主启动类"><a href="#MyBatisPlusApplication-主启动类" class="headerlink" title="MyBatisPlusApplication 主启动类"></a>MyBatisPlusApplication 主启动类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@MapperScan(&quot;ml.guest997.mapper&quot;)</span>   <span class="comment">//扫描包下的 mapper 接口</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyBatisPlusApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.<span class="keyword">User</span>;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line">@SpringBootTest</span><br><span class="line"><span class="keyword">class</span> MyBatisPlusApplicationTests &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    <span class="type">void</span> contextLoads() &#123;</span><br><span class="line">        //参数是一个 <span class="keyword">Wrapper</span>（条件构造器），这里我们先不用就设置为 <span class="keyword">null</span>。</span><br><span class="line">        List&lt;<span class="keyword">User</span>&gt; userList = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        userList.<span class="keyword">forEach</span>(<span class="keyword">System</span>.<span class="keyword">out</span>::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">User</span>(id=<span class="number">2</span>, name=Jack, age=<span class="number">20</span>, email=test2<span class="variable">@baomidou</span>.com)</span><br><span class="line"><span class="selector-tag">User</span>(id=<span class="number">3</span>, name=Tom, age=<span class="number">28</span>, email=test3<span class="variable">@baomidou</span>.com)</span><br><span class="line"><span class="selector-tag">User</span>(id=<span class="number">4</span>, name=Sandy, age=<span class="number">21</span>, email=test4<span class="variable">@baomidou</span>.com)</span><br><span class="line"><span class="selector-tag">User</span>(id=<span class="number">5</span>, name=Billie, age=<span class="number">24</span>, email=test5<span class="variable">@baomidou</span>.com)</span><br></pre></td></tr></table></figure><h2 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h2><p>现在所有的 sql 语句执行过程是不可见的，所以我们必须要配置日志进行查看。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#配置日志</span><br><span class="line">mybatis-plus:</span><br><span class="line">  configuration:</span><br><span class="line">    log-impl: org<span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.logging</span><span class="selector-class">.stdout</span><span class="selector-class">.StdOutImpl</span>   #控制台输出</span><br></pre></td></tr></table></figure><p><img data-src="/images/mybatis-plus-expound01.md-0.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。&lt;/p&gt;
&lt;h2 id=&quot;第一个-MyBatis-Plus-程序&quot;&gt;&lt;a href=&quot;#第一个-MyBatis-Plus-程序&quot; class=&quot;headerlink&quot; title=&quot;第一个 MyBatis-Plus 程序&quot;&gt;&lt;/a&gt;第一个 MyBatis-Plus 程序&lt;/h2&gt;&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;创建 mybatis_plus 数据库，并创建 user 表以及插入数据。&lt;/p&gt;
&lt;figure class=&quot;highlight pgsql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DATABASE&lt;/span&gt; mybatis_plus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;USER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id &lt;span class=&quot;type&quot;&gt;BIGINT&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;主键ID&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;姓名&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age &lt;span class=&quot;type&quot;&gt;INT&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;年龄&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    email &lt;span class=&quot;type&quot;&gt;VARCHAR&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;邮箱&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;PRIMARY KEY&lt;/span&gt; (id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;USER&lt;/span&gt; (id, &lt;span class=&quot;type&quot;&gt;NAME&lt;/span&gt;, age, email) &lt;span class=&quot;keyword&quot;&gt;VALUES&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Jone&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;test1@baomidou.com&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Jack&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;test2@baomidou.com&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Tom&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;test3@baomidou.com&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Sandy&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;test4@baomidou.com&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;Billie&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;test5@baomidou.com&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="mybatis-plus" scheme="http://guest997.tk/tags/mybatis-plus/"/>
    
  </entry>
  
  <entry>
    <title>为 blog 添加循环打字一言</title>
    <link href="http://guest997.tk/2021/08/26/blog-hitokoto02/"/>
    <id>http://guest997.tk/2021/08/26/blog-hitokoto02/</id>
    <published>2021-08-26T03:09:47.000Z</published>
    <updated>2021-09-02T05:15:29.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h2><p>之前有为 blog 添加局部定时刷新的一言，但未能实现打字效果。下面就只实现了循环打字一言。具体效果主页就能看到。</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p>添加以下代码到当前主题的 <strong>footer.php</strong> 文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/typed.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml">    var typed = new Typed(&#x27;.element&#x27;, &#123;        //一言字符串数组，支持 html 标签。        strings: [            &quot;我只会和需要我的人<span class="tag">&lt;<span class="name">br</span>&gt;</span>一起走下去<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《缘之空》&quot;,            &quot;秒速5厘米<span class="tag">&lt;<span class="name">br</span>&gt;</span>那是樱花飘落的速度<span class="tag">&lt;<span class="name">br</span>&gt;</span>那么怎样的速度<span class="tag">&lt;<span class="name">br</span>&gt;</span>才能走完我与你之间的距离<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《秒速五厘米》&quot;,            &quot;即使这份感情是虚假的<span class="tag">&lt;<span class="name">br</span>&gt;</span>这也是我唯一的真实<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《罪恶王冠》&quot;,            &quot;我们每天度过的称之为日常的生活<span class="tag">&lt;<span class="name">br</span>&gt;</span>其实是一个个奇迹的连续也说不定<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《日常》&quot;,            &quot;只要有你在<span class="tag">&lt;<span class="name">br</span>&gt;</span>我就无所不能<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《进击的巨人》&quot;,            &quot;重要的感情总是非常单纯<span class="tag">&lt;<span class="name">br</span>&gt;</span>自然脱口而出的<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《GAMERS电玩咖》&quot;,            &quot;只要记住你的名字<span class="tag">&lt;<span class="name">br</span>&gt;</span>不管你在世界的哪个地方<span class="tag">&lt;<span class="name">br</span>&gt;</span>我一定会去见你<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《你的名字》&quot;,            &quot;我们终会相遇相知<span class="tag">&lt;<span class="name">br</span>&gt;</span>在那悠远的苍穹<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《缘之空》&quot;,            &quot;音无结弦之日<span class="tag">&lt;<span class="name">br</span>&gt;</span>跃动天使之心<span class="tag">&lt;<span class="name">br</span>&gt;</span>立于浮华之世<span class="tag">&lt;<span class="name">br</span>&gt;</span>奏响天籁之音<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《Angel Beats!》&quot;,            &quot;我不甘心<span class="tag">&lt;<span class="name">br</span>&gt;</span>明明你为我做了那么多<span class="tag">&lt;<span class="name">br</span>&gt;</span>我却什么都不能为你做<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《四月是你的谎言》&quot;,            &quot;真正重要的东西<span class="tag">&lt;<span class="name">br</span>&gt;</span>永远都是非常简单的<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《Clannad》&quot;,            &quot;我动身踏上旅程<span class="tag">&lt;<span class="name">br</span>&gt;</span>是为了与你道别<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《追逐繁星的孩子》&quot;,            &quot;无论最终的结果是什么<span class="tag">&lt;<span class="name">br</span>&gt;</span>只要这是自己选择的道路<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《龙与虎》&quot;,            &quot;因为无法再见面<span class="tag">&lt;<span class="name">br</span>&gt;</span>所以要笑着说再见<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《AIR》&quot;,            &quot;要是因为烦恼很痛苦<span class="tag">&lt;<span class="name">br</span>&gt;</span>就选择了轻松的选项<span class="tag">&lt;<span class="name">br</span>&gt;</span>将来一定会后悔<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《樱花庄的宠物女孩》&quot;,            &quot;隐约雷鸣<span class="tag">&lt;<span class="name">br</span>&gt;</span>阴霾天空<span class="tag">&lt;<span class="name">br</span>&gt;</span>即使天无雨<span class="tag">&lt;<span class="name">br</span>&gt;</span>我亦留此地<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《言叶之庭》&quot;,            &quot;无论世界如何改变<span class="tag">&lt;<span class="name">br</span>&gt;</span>我们都将永不分离<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《GOSICK》&quot;,            &quot;烦恼这东西<span class="tag">&lt;<span class="name">br</span>&gt;</span>是只有活着的人<span class="tag">&lt;<span class="name">br</span>&gt;</span>才有的特权哦<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《我们的存在》&quot;,            &quot;我在未来等你<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《穿越时空的少女》&quot;,            &quot;真正让我难受的<span class="tag">&lt;<span class="name">br</span>&gt;</span>大概是因为让你看到如此狼狈的自己<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《元气少女缘结神》&quot;,            &quot;爱<span class="tag">&lt;<span class="name">br</span>&gt;</span>其实很简单<span class="tag">&lt;<span class="name">br</span>&gt;</span>困难的是去接受它<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《通灵王》&quot;,            &quot;知道活着的痛苦处的人就能对人温柔<span class="tag">&lt;<span class="name">br</span>&gt;</span>这和软弱是不一样的<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《EVA》&quot;,            &quot;只要一天活著<span class="tag">&lt;<span class="name">br</span>&gt;</span>难过的事总有一天会让你笑著说出来<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《天空之城》&quot;,            &quot;我们总是在注意错过太多<span class="tag">&lt;<span class="name">br</span>&gt;</span>却不注意自己拥有多少<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《未闻花名》&quot;,            &quot;有些事情我不看透<span class="tag">&lt;<span class="name">br</span>&gt;</span>不是我太笨<span class="tag">&lt;<span class="name">br</span>&gt;</span>只是我太善良<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《樱桃小丸子》&quot;,            &quot;不管是怎样的回忆<span class="tag">&lt;<span class="name">br</span>&gt;</span>都是我们活过的人生<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《Angel Beats!》&quot;,            &quot;只要有想见面的人<span class="tag">&lt;<span class="name">br</span>&gt;</span>自己就不再是孤单一人<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《夏目友人帐》&quot;,            &quot;大部分人并不想长大<span class="tag">&lt;<span class="name">br</span>&gt;</span>只是没办法继续当一个小孩子<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《小林家的龙女仆》&quot;,            &quot;我是一个经常笑的人<span class="tag">&lt;<span class="name">br</span>&gt;</span>可我不是经常开心的人<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《未闻花名》&quot;,            &quot;有你在的日子才是我的日常<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《琴浦小姐》&quot;,            &quot;男人只要去行动就好<span class="tag">&lt;<span class="name">br</span>&gt;</span>做得到或做不到<span class="tag">&lt;<span class="name">br</span>&gt;</span>女孩子会来告诉你的<span class="tag">&lt;<span class="name">br</span>&gt;</span> —《四月是你的谎言》&quot;        ],        typeSpeed: 140,     //打字速度        backSpeed: 50,      //退回速度        loop: true,         //是否循环        loopCount: Infinity,    //循环次数计算        showCursor: true        //是否显示光标    &#125;);</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加以下代码到你想显示的地方。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-quote-left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;element&quot;</span>&gt;</span>loading...<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;typed-cursor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-quote-right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h2><p>其实想要实现定时局部刷新的打字一言，可惜是个小菜鸟，始终无法实现。如果有大神会的话，请在下方留言，谢谢！</p><p>如有任何疑问，可在下方评论区@我或者发送悄悄话都可以，我会尽力回答。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;说明：&quot;&gt;&lt;a href=&quot;#说明：&quot; class=&quot;headerlink&quot; title=&quot;说明：&quot;&gt;&lt;/a&gt;说明：&lt;/h2&gt;&lt;p&gt;之前有为 blog 添加局部定时刷新的一言，但未能实现打字效果。下面就只实现了循环打字一言。具体效果主页就能看到。&lt;/p&gt;
&lt;h2 id=&quot;正文：&quot;&gt;&lt;a href=&quot;#正文：&quot; class=&quot;headerlink&quot; title=&quot;正文：&quot;&gt;&lt;/a&gt;正文：&lt;/h2&gt;&lt;p&gt;添加以下代码到当前主题的 &lt;strong&gt;footer.php&lt;/strong&gt; 文件。&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/typed.min.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;handlebars&quot;&gt;&lt;span class=&quot;xml&quot;&gt;    var typed = new Typed(&amp;#x27;.element&amp;#x27;, &amp;#123;        //一言字符串数组，支持 html 标签。        strings: [            &amp;quot;我只会和需要我的人&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;一起走下去&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《缘之空》&amp;quot;,            &amp;quot;秒速5厘米&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;那是樱花飘落的速度&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;那么怎样的速度&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;才能走完我与你之间的距离&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《秒速五厘米》&amp;quot;,            &amp;quot;即使这份感情是虚假的&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;这也是我唯一的真实&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《罪恶王冠》&amp;quot;,            &amp;quot;我们每天度过的称之为日常的生活&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;其实是一个个奇迹的连续也说不定&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《日常》&amp;quot;,            &amp;quot;只要有你在&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;我就无所不能&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《进击的巨人》&amp;quot;,            &amp;quot;重要的感情总是非常单纯&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;自然脱口而出的&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《GAMERS电玩咖》&amp;quot;,            &amp;quot;只要记住你的名字&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;不管你在世界的哪个地方&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;我一定会去见你&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《你的名字》&amp;quot;,            &amp;quot;我们终会相遇相知&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;在那悠远的苍穹&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《缘之空》&amp;quot;,            &amp;quot;音无结弦之日&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;跃动天使之心&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;立于浮华之世&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;奏响天籁之音&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《Angel Beats!》&amp;quot;,            &amp;quot;我不甘心&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;明明你为我做了那么多&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;我却什么都不能为你做&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《四月是你的谎言》&amp;quot;,            &amp;quot;真正重要的东西&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;永远都是非常简单的&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《Clannad》&amp;quot;,            &amp;quot;我动身踏上旅程&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;是为了与你道别&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《追逐繁星的孩子》&amp;quot;,            &amp;quot;无论最终的结果是什么&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;只要这是自己选择的道路&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《龙与虎》&amp;quot;,            &amp;quot;因为无法再见面&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;所以要笑着说再见&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《AIR》&amp;quot;,            &amp;quot;要是因为烦恼很痛苦&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;就选择了轻松的选项&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;将来一定会后悔&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《樱花庄的宠物女孩》&amp;quot;,            &amp;quot;隐约雷鸣&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;阴霾天空&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;即使天无雨&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;我亦留此地&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《言叶之庭》&amp;quot;,            &amp;quot;无论世界如何改变&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;我们都将永不分离&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《GOSICK》&amp;quot;,            &amp;quot;烦恼这东西&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;是只有活着的人&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;才有的特权哦&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《我们的存在》&amp;quot;,            &amp;quot;我在未来等你&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《穿越时空的少女》&amp;quot;,            &amp;quot;真正让我难受的&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;大概是因为让你看到如此狼狈的自己&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《元气少女缘结神》&amp;quot;,            &amp;quot;爱&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;其实很简单&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;困难的是去接受它&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《通灵王》&amp;quot;,            &amp;quot;知道活着的痛苦处的人就能对人温柔&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;这和软弱是不一样的&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《EVA》&amp;quot;,            &amp;quot;只要一天活著&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;难过的事总有一天会让你笑著说出来&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《天空之城》&amp;quot;,            &amp;quot;我们总是在注意错过太多&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;却不注意自己拥有多少&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《未闻花名》&amp;quot;,            &amp;quot;有些事情我不看透&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;不是我太笨&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;只是我太善良&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《樱桃小丸子》&amp;quot;,            &amp;quot;不管是怎样的回忆&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;都是我们活过的人生&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《Angel Beats!》&amp;quot;,            &amp;quot;只要有想见面的人&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;自己就不再是孤单一人&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《夏目友人帐》&amp;quot;,            &amp;quot;大部分人并不想长大&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;只是没办法继续当一个小孩子&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《小林家的龙女仆》&amp;quot;,            &amp;quot;我是一个经常笑的人&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;可我不是经常开心的人&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《未闻花名》&amp;quot;,            &amp;quot;有你在的日子才是我的日常&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《琴浦小姐》&amp;quot;,            &amp;quot;男人只要去行动就好&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;做得到或做不到&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt;女孩子会来告诉你的&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;br&lt;/span&gt;&amp;gt;&lt;/span&gt; —《四月是你的谎言》&amp;quot;        ],        typeSpeed: 140,     //打字速度        backSpeed: 50,      //退回速度        loop: true,         //是否循环        loopCount: Infinity,    //循环次数计算        showCursor: true        //是否显示光标    &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="建站" scheme="http://guest997.tk/categories/%E5%BB%BA%E7%AB%99/"/>
    
    
    <category term="建站" scheme="http://guest997.tk/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo/Zookeeper 初识(三)</title>
    <link href="http://guest997.tk/2021/08/26/dubbo-zookeeper-firacquaintance03/"/>
    <id>http://guest997.tk/2021/08/26/dubbo-zookeeper-firacquaintance03/</id>
    <published>2021-08-26T01:19:38.000Z</published>
    <updated>2021-09-02T05:15:50.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="服务注册与发现"><a href="#服务注册与发现" class="headerlink" title="服务注册与发现"></a>服务注册与发现</h2><p>IDEA 创建一个空项目。</p><h3 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a>Provider</h3><p>创建一个 SpringBoot 模块，实现服务提供者：Provider， 选择 Spring Web 依赖即可。</p><h4 id="创建卖票服务"><a href="#创建卖票服务" class="headerlink" title="创建卖票服务"></a>创建卖票服务</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TicketService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">String</span> getTicket();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TicketServiceImpl</span> <span class="keyword"><span class="keyword">implements</span> <span class="type">TicketService</span></span> </span>&#123;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getTicket() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;测试...&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h3><p>创建一个 SpringBoot 模块，实现服务消费者：Consumer， 选择 Spring Web 依赖即可。</p><h4 id="创建用户服务"><a href="#创建用户服务" class="headerlink" title="创建用户服务"></a>创建用户服务</h4><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>需求：现在用户想使用买票的服务，该怎么做？</strong></p><h3 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h3><p>在 Provider 模块下的 pom.xml 配置文件中添加下面的依赖。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--dubbo 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.dubbo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--zkclient 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.sgroschupf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--zookeeper 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-recipes<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--排除 slf4j-log4j12 日志冲突--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 Provider 模块下的 application.yaml 配置文件中添加下面的属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="comment">#服务名</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">provider</span></span><br><span class="line">  <span class="comment">#注册中心地址</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br><span class="line">  <span class="comment">#元数据配置</span></span><br><span class="line">  <span class="attr">metadata-report:</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">zookeeper://127.0.0.1:2181</span></span><br><span class="line">  <span class="comment">#扫描包下服务</span></span><br><span class="line">  <span class="attr">scan:</span></span><br><span class="line">    <span class="attr">base-packages:</span> <span class="string">ml.guest997.service</span></span><br></pre></td></tr></table></figure><p>配置注解注册服务。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>   <span class="comment">//表明这是一个分布式服务</span></span><br><span class="line"><span class="meta">@Component</span>      <span class="comment">//放到 Spring 容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TicketServiceImpl</span> <span class="keyword">implements</span> <span class="title">TicketService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTicket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;测试...&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="发现服务"><a href="#发现服务" class="headerlink" title="发现服务"></a>发现服务</h3><p>在 Consumer 模块下的 pom.xml 配置文件中添加和注册服务时一样的依赖。</p><p>在 Consumer 模块下的 application.yaml 配置文件中添加下面的属性。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">server:</span></span><br><span class="line"><span class="symbol">  port:</span> <span class="number">8002</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol">dubbo:</span></span><br><span class="line">  <span class="meta">#暴露自己的名字</span></span><br><span class="line"><span class="symbol">  application:</span></span><br><span class="line"><span class="symbol">    name:</span> consumer</span><br><span class="line">  <span class="meta">#注册中心地址</span></span><br><span class="line"><span class="symbol">  registry:</span></span><br><span class="line"><span class="symbol">    address:</span> zookeeper:<span class="comment">//127.0.0.1:2181</span></span><br></pre></td></tr></table></figure><p>完善服务消费者</p><p><strong>正常步骤是需要将服务提供者的接口打包，然后用 pom 文件导入。在这里就使用简单的方式，直接将服务的接口拿过来，并放在和服务消费者一样的路径下。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">buyTicket</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span>    <span class="comment">//放到 Spring 容器中</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Reference</span>         <span class="comment">//远程引用指定的服务，它会按照全类名进行匹配，看谁给注册中心注册了这个全类名。</span></span><br><span class="line">    <span class="keyword">private</span> TicketService ticketService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">buyTicket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String ticket = ticketService.getTicket();</span><br><span class="line">        System.out.println(ticket);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.service.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConsumerApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserServiceImpl userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userService.buyTicket();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果为 测试...</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;服务注册与发现&quot;&gt;&lt;a href=&quot;#服务注册与发现&quot; class=&quot;headerlink&quot; title=&quot;服务注册与发现&quot;&gt;&lt;/a&gt;服务注册与发现&lt;/h2&gt;&lt;p&gt;IDEA 创建一个空项目。&lt;/p&gt;
&lt;h3 id=&quot;Provider&quot;&gt;&lt;a href=&quot;#Provider&quot; class=&quot;headerlink&quot; title=&quot;Provider&quot;&gt;&lt;/a&gt;Provider&lt;/h3&gt;&lt;p&gt;创建一个 SpringBoot 模块，实现服务提供者：Provider， 选择 Spring Web 依赖即可。&lt;/p&gt;
&lt;h4 id=&quot;创建卖票服务&quot;&gt;&lt;a href=&quot;#创建卖票服务&quot; class=&quot;headerlink&quot; title=&quot;创建卖票服务&quot;&gt;&lt;/a&gt;创建卖票服务&lt;/h4&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="dubbo" scheme="http://guest997.tk/tags/dubbo/"/>
    
    <category term="zookeeper" scheme="http://guest997.tk/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo/Zookeeper 初识(二)</title>
    <link href="http://guest997.tk/2021/08/25/dubbo-zookeeper-firacquaintance02/"/>
    <id>http://guest997.tk/2021/08/25/dubbo-zookeeper-firacquaintance02/</id>
    <published>2021-08-25T01:51:03.000Z</published>
    <updated>2021-09-02T05:15:50.056Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RPC"><a href="#RPC" class="headerlink" title="RPC"></a>RPC</h2><p><strong>RPC 两个核心模块：通讯和序列化。</strong></p><p>RPC（Remote Procedure Call）是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。</p><p>也就是说两台服务器 A 和 B，一个应用部署在 A 服务器上，想要调用 B 服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。为什么要用 RPC 呢？就是无法在一个进程内，甚至一个计算机内通过本地调用的方式完成的需求，比如不同的系统间的通讯，甚至不同的组织间的通讯，由于计算能力需要横向扩展，需要在多台机器组成的集群上部署应用。RPC 就是要像调用本地的函数一样去调远程函数。<img data-src="/images/dubbo-zookeeper-firacquaintance02.md-0.png"></p><h2 id="Dubbo"><a href="#Dubbo" class="headerlink" title="Dubbo"></a>Dubbo</h2><p>Dubbo ˈdʌbəʊ 是一款高性能、轻量级的开源 Java RPC 框架，它拥有三大核心能力：<strong>面向接口的远程方法调用</strong>、<strong>智能容错和负载均衡</strong>，以及<strong>服务自动注册和发现</strong>。<img data-src="/images/dubbo-zookeeper-firacquaintance02.md-1.jpg"></p><ul><li>  服务提供者（Provider）：暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</li><li>  服务消费者（Consumer）：调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</li><li>  注册中心（Registry）：注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。（<strong>Dubbo 建议使用 Zookeeper 作为服务的注册中心</strong>）</li><li>  监控中心（Monitor）：服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="zookeeper"><a href="#zookeeper" class="headerlink" title="zookeeper"></a>zookeeper</h3><p>zookeeper 的安装网上有很多教程就不在这赘述了，下面就是简单地测试一下是否正常运行了。<strong>注意：新版启动会占用 8080 端口与新版 dubbo-admin 启动会冲突，需要在配置文件中添加下面的参数。</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">admin.serverPort</span>=<span class="number">8888</span></span><br></pre></td></tr></table></figure><p><img data-src="/images/dubbo-zookeeper-firacquaintance02.md-2.png"></p><h3 id="dubbo-admin"><a href="#dubbo-admin" class="headerlink" title="dubbo-admin"></a>dubbo-admin</h3><p>Dubbo 本身并不是一个服务软件。它其实就是一个 jar 包，能够帮你的 java 程序连接到 zookeeper，并利用 zookeeper 消费以及提供服务。但是为了让用户更好的管理监控众多的 Dubbo 服务，官方提供了一个可视化的监控程序 dubbo-admin。</p><p>安装 dubbo-admin 很简单，去官方 Github 地址下载 Releases 压缩包，双击运行 bin/startup.cmd 即可，最后访问 localhost:8080 就会出现下面的界面了。<img data-src="/images/dubbo-zookeeper-firacquaintance02.md-3.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;RPC&quot;&gt;&lt;a href=&quot;#RPC&quot; class=&quot;headerlink&quot; title=&quot;RPC&quot;&gt;&lt;/a&gt;RPC&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;RPC 两个核心模块：通讯和序列化。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RPC（Remote Procedure Call）是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。&lt;/p&gt;
&lt;p&gt;也就是说两台服务器 A 和 B，一个应用部署在 A 服务器上，想要调用 B 服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。为什么要用 RPC 呢？就是无法在一个进程内，甚至一个计算机内通过本地调用的方式完成的需求，比如不同的系统间的通讯，甚至不同的组织间的通讯，由于计算能力需要横向扩展，需要在多台机器组成的集群上部署应用。RPC 就是要像调用本地的函数一样去调远程函数。&lt;img data-src=&quot;/images/dubbo-zookeeper-firacquaintance02.md-0.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Dubbo&quot;&gt;&lt;a href=&quot;#Dubbo&quot; class=&quot;headerlink&quot; title=&quot;Dubbo&quot;&gt;&lt;/a&gt;Dubbo&lt;/h2&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="dubbo" scheme="http://guest997.tk/tags/dubbo/"/>
    
    <category term="zookeeper" scheme="http://guest997.tk/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>Dubbo/Zookeeper 初识(一)</title>
    <link href="http://guest997.tk/2021/08/25/dubbo-zookeeper-firacquaintance01/"/>
    <id>http://guest997.tk/2021/08/25/dubbo-zookeeper-firacquaintance01/</id>
    <published>2021-08-25T01:43:32.000Z</published>
    <updated>2021-09-02T05:15:41.121Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h2><p>分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统。分布式系统是由一组通过网络进行通信、为了完成共同的任务而协调工作的计算机节点组成的系统。分布式系统的出现是为了用廉价的、普通的机器完成单个计算机无法完成的计算、存储任务。其目的是<strong>利用更多的机器，处理更多的数据</strong>。</p><p>需要明确的是，只有当单个节点的处理能力无法满足日益增长的计算、存储任务的时候，硬件的提升高昂到得不偿失的时候，应用程序不能进一步优化的时候，我们才需要考虑分布式系统。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，急需<strong>一个治理系统</strong>确保架构有条不紊的演进。<img data-src="/images/dubbo-zookeeper-firacquaintance01.md-0.jpg"></p><h3 id="单一应用架构"><a href="#单一应用架构" class="headerlink" title="单一应用架构"></a>单一应用架构</h3><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，<strong>用于简化增删改查工作量的数据访问框架（ORM）是关键。</strong><img data-src="/images/dubbo-zookeeper-firacquaintance01.md-1.png"></p><p>缺点：</p><ul><li>  全部功能集成在一个工程中，对于大型项目不易开发、扩展及维护。</li><li>  版本迭代速度逐渐变慢，修改一个地方就要将整个应用全部编译、部署、启动，开发及测试周期过长。</li><li>  通过集群的方式来实现水平扩展，无法针对某业务按需伸缩。</li></ul><h3 id="垂直应用架构"><a href="#垂直应用架构" class="headerlink" title="垂直应用架构"></a>垂直应用架构</h3><p>当访问量逐渐增大，单一应用增加机器（集群）带来的加速度越来越小，提升效率的方法之一是将应用拆成互不相干的几个应用，以提升效率。此时，<strong>用于加速前端页面开发的 Web 框架（MVC）是关键。</strong><img data-src="/images/dubbo-zookeeper-firacquaintance01.md-2.png"></p><p>缺点：</p><ul><li>  业务逻辑与页面无法分离，公共资源无法复用。</li><li>  子系统之间存在数据冗余、功能冗余，耦合性高。</li></ul><h3 id="分布式服务架构"><a href="#分布式服务架构" class="headerlink" title="分布式服务架构"></a>分布式服务架构</h3><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的<strong>服务中心</strong>，使前端应用能更快速地响应多变的市场需求。此时，<strong>用于提高业务复用及整合的分布式服务框架（RPC）是关键。</strong><img data-src="/images/dubbo-zookeeper-firacquaintance01.md-3.png"></p><p><strong>缺点：</strong></p><ul><li>  系统与服务的界限模糊，会导致抽取的服务的粒度过大，系统与服务之间耦合性高。</li><li>  虽然使用了服务中心，但是服务的接口协议不固定，种类繁多，不利于系统维护。</li></ul><h3 id="流动计算架构"><a href="#流动计算架构" class="headerlink" title="流动计算架构"></a>流动计算架构</h3><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个<strong>调度中心</strong>基于访问压力实时管理集群容量，提高集群利用率。此时，<strong>用于提高机器利用率的资源调度和治理中心（SOA）是关键。</strong>SOA（Service-Oriented Architecture）是一种面向服务的架构，它基于分布式架构将不同业务功能（服务）进行拆分，并通过这些服务之间定义良好的接口和协议联系起来。<img data-src="/images/dubbo-zookeeper-firacquaintance01.md-4.png"></p><p><strong>缺点：</strong></p><ul><li>  开发的复杂性增加，因为一个业务流程需要多个服务通过网络交互来完成。</li><li>  服务过多，服务治理成本高。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;分布式系统&quot;&gt;&lt;a href=&quot;#分布式系统&quot; class=&quot;headerlink&quot; title=&quot;分布式系统&quot;&gt;&lt;/a&gt;分布式系统&lt;/h2&gt;&lt;p&gt;分布式系统是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统。分布式系统是由一组通过网络进行通信、为了完成共同的任务而协调工作的计算机节点组成的系统。分布式系统的出现是为了用廉价的、普通的机器完成单个计算机无法完成的计算、存储任务。其目的是&lt;strong&gt;利用更多的机器，处理更多的数据&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;需要明确的是，只有当单个节点的处理能力无法满足日益增长的计算、存储任务的时候，硬件的提升高昂到得不偿失的时候，应用程序不能进一步优化的时候，我们才需要考虑分布式系统。&lt;/p&gt;
&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，急需&lt;strong&gt;一个治理系统&lt;/strong&gt;确保架构有条不紊的演进。&lt;img data-src=&quot;/images/dubbo-zookeeper-firacquaintance01.md-0.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="dubbo" scheme="http://guest997.tk/tags/dubbo/"/>
    
    <category term="zookeeper" scheme="http://guest997.tk/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十六)</title>
    <link href="http://guest997.tk/2021/08/24/springboot-expound16/"/>
    <id>http://guest997.tk/2021/08/24/springboot-expound16/</id>
    <published>2021-08-24T02:30:52.000Z</published>
    <updated>2021-09-02T05:17:36.855Z</updated>
    
    <content type="html"><![CDATA[<h2 id="异步任务"><a href="#异步任务" class="headerlink" title="异步任务"></a>异步任务</h2><h3 id="同步测试"><a href="#同步测试" class="headerlink" title="同步测试"></a>同步测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);        <span class="comment">//线程睡眠3秒钟</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;处理数据中...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.service.AsyncService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AsyncService asyncService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/sayHello&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String sayHello() &#123;</span><br><span class="line">        asyncService.sayHello();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8080/sayHello，发现网页在转圈加载中，大概过了3秒钟才返回了响应，控制台也才打印了内容。</p><h3 id="异步测试"><a href="#异步测试" class="headerlink" title="异步测试"></a>异步测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableAsync</span>    <span class="comment">//开启异步注解功能</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async</span>      <span class="comment">//表示这是一个异步方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;处理数据中...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8080/sayHello，发现网页立即做出了响应，控制台则大概过了3秒才打印了内容。</p><h2 id="邮件任务"><a href="#邮件任务" class="headerlink" title="邮件任务"></a>邮件任务</h2><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--邮件依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSenderImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.MimeMessageHelper;</span><br><span class="line"><span class="keyword">import</span> javax.mail.MessagingException;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSenderImpl javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//发送一个一个简单的邮件</span></span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        message.setSubject(<span class="string">&quot;你好，我是Guest997。&quot;</span>);      <span class="comment">//邮件名</span></span><br><span class="line">        message.setText(<span class="string">&quot;我的博客地址：https://guest997.ml&quot;</span>);        <span class="comment">//邮件内容</span></span><br><span class="line">        message.setTo(<span class="string">&quot;1036635267@qq.com&quot;</span>);             <span class="comment">//收件人</span></span><br><span class="line">        message.setFrom(<span class="string">&quot;1036635267@qq.com&quot;</span>);           <span class="comment">//发件人</span></span><br><span class="line">        javaMailSender.send(message);       <span class="comment">//发送邮件</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads02</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        <span class="comment">//发送一个复杂的邮件</span></span><br><span class="line">        MimeMessage mimeMessage = javaMailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(mimeMessage, <span class="keyword">true</span>);    <span class="comment">//helper 用于组合邮件内容</span></span><br><span class="line">        helper.setSubject(<span class="string">&quot;你好，我是Guest997。&quot;</span>);</span><br><span class="line">        helper.setText(<span class="string">&quot;&lt;h1 style=&#x27;color:red&#x27;&gt;我的博客地址：https://guest997.ml&lt;/h1&gt;&quot;</span>, <span class="keyword">true</span>);     <span class="comment">//开启 html 标签解析</span></span><br><span class="line">        <span class="comment">//添加附件</span></span><br><span class="line">        helper.addAttachment(<span class="string">&quot;1.jpg&quot;</span>, <span class="keyword">new</span> File(<span class="string">&quot;src/main/resources/static/test.jpg&quot;</span>));</span><br><span class="line">        helper.addAttachment(<span class="string">&quot;2.jpg&quot;</span>, <span class="keyword">new</span> File(<span class="string">&quot;src/main/resources/static/test.jpg&quot;</span>));</span><br><span class="line">        <span class="comment">//发送邮件</span></span><br><span class="line">        helper.setTo(<span class="string">&quot;1036635267@qq.com&quot;</span>);</span><br><span class="line">        helper.setFrom(<span class="string">&quot;1036635267@qq.com&quot;</span>);</span><br><span class="line">        javaMailSender.send(mimeMessage);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><p>会使用到 corn 表达式，具体的语法就不在这解释了，可以点击后面的链接了解一下。<a href="https://vic.kim/2021/05/10/cron%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3">https://vic.kim/2021/05/10/cron表达式详解</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableAsync</span>    <span class="comment">//开启异步注解功能</span></span><br><span class="line"><span class="meta">@EnableScheduling</span>   <span class="comment">//开启基于注解的定时任务</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在指定的时间运行方法</span></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0/3 * * * * *&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接运行 Application.java 即可，会发现在控制台每3秒钟就会打印内容。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;异步任务&quot;&gt;&lt;a href=&quot;#异步任务&quot; class=&quot;headerlink&quot; title=&quot;异步任务&quot;&gt;&lt;/a&gt;异步任务&lt;/h2&gt;&lt;h3 id=&quot;同步测试&quot;&gt;&lt;a href=&quot;#同步测试&quot; class=&quot;headerlink&quot; title=&quot;同步测试&quot;&gt;&lt;/a&gt;同步测试&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; ml.guest997.service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.stereotype.Service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncService&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Thread.sleep(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;);        &lt;span class=&quot;comment&quot;&gt;//线程睡眠3秒钟&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;处理数据中...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; ml.guest997.controller;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ml.guest997.service.AsyncService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.beans.factory.&lt;span class=&quot;keyword&quot;&gt;annotation&lt;/span&gt;.Autowired;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span class=&quot;keyword&quot;&gt;annotation&lt;/span&gt;.RequestMapping;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span class=&quot;keyword&quot;&gt;annotation&lt;/span&gt;.RestController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RestController&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncController&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Autowired&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; AsyncService asyncService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@RequestMapping(&lt;span class=&quot;meta-string&quot;&gt;&amp;quot;/sayHello&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String sayHello() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        asyncService.sayHello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Hello!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;访问 localhost:8080/sayHello，发现网页在转圈加载中，大概过了3秒钟才返回了响应，控制台也才打印了内容。&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十五)</title>
    <link href="http://guest997.tk/2021/08/24/springboot-expound15/"/>
    <id>http://guest997.tk/2021/08/24/springboot-expound15/</id>
    <published>2021-08-24T02:27:35.000Z</published>
    <updated>2021-09-02T05:17:36.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Swagger"><a href="#Swagger" class="headerlink" title="Swagger"></a>Swagger</h2><p>号称世界上最流行的 API 框架，RESTful API 文档在线自动生成器（API 文档与 API 定义同步更新），直接运行在线测试 API，支持多种语言。相较于传统的 Postman 或 Curl 方式，使用 Swagger 来测试接口就显得非常简单了，不需要说明文档，却更不容易出错，只需要输入数据点击 Execute 即可进行测试。</p><h3 id="整合-Swagger"><a href="#整合-Swagger" class="headerlink" title="整合 Swagger"></a>整合 Swagger</h3><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--swagger3依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/helloSwagger&quot;</span>)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String helloSwagger() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;helloSwagger!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>访问 localhost:8080/swagger-ui/，会出现如下图的界面。<img data-src="/images/springboot-expound15.md-0.png"></p><h3 id="配置-Swagger-信息"><a href="#配置-Swagger-信息" class="headerlink" title="配置 Swagger 信息"></a>配置 Swagger 信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.oas.annotations.EnableOpenApi;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.Contact;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableOpenApi</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">docket</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.OAS_30).apiInfo(apiInfo());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfo(</span><br><span class="line">                <span class="string">&quot;Swagger3接口文档&quot;</span>,</span><br><span class="line">                <span class="string">&quot;详情请查看官方文档：https://swagger.io/docs/&quot;</span>,</span><br><span class="line">                <span class="string">&quot;1.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;urn:tos&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> Contact(<span class="string">&quot;Guest997&quot;</span>, <span class="string">&quot;https://guest997.ml&quot;</span>, <span class="string">&quot;1036635267@qq.com&quot;</span>),</span><br><span class="line">                <span class="string">&quot;Apache 2.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8080/swagger-ui/，会出现如下图的界面。<img data-src="/images/springboot-expound15.md-1.png"></p><h3 id="配置接口扫描"><a href="#配置接口扫描" class="headerlink" title="配置接口扫描"></a>配置接口扫描</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public Docket docket() &#123;</span><br><span class="line">    return new Docket(DocumentationType.OAS_30).apiInfo(apiInfo())</span><br><span class="line">            <span class="regexp">//</span>通过select()启动接口扫描，apis(RequestHandlerSelectors)配置如何扫描接口。</span><br><span class="line">            .select()</span><br><span class="line">            <span class="regexp">//</span>any() 扫描所有接口</span><br><span class="line">            <span class="regexp">//</span>none() 不扫描接口</span><br><span class="line">            <span class="regexp">//</span>withMethodAnnotation() 通过方法上的注解扫描，如 withMethodAnnotation(GetMapping.class) 只扫描有 @GetMapping 的请求接口。</span><br><span class="line">            <span class="regexp">//</span>withClassAnnotation() 通过类上的注解扫描，如 withClassAnnotation(Controller.class) 只扫描有 @Controller 的类。</span><br><span class="line">            <span class="regexp">//</span>basePackage() 扫描包</span><br><span class="line">            .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;ml.guest997.controller&quot;</span>))</span><br><span class="line">            <span class="regexp">//</span>配置过滤</span><br><span class="line">            <span class="regexp">//</span>any() 任何请求都扫描</span><br><span class="line">            <span class="regexp">//</span>none() 任何请求都不扫描</span><br><span class="line">            <span class="regexp">//</span>regex() 通过正则表达式控制</span><br><span class="line">            <span class="regexp">//</span>ant() 通过 ant() 控制</span><br><span class="line">            .paths(PathSelectors.ant(<span class="string">&quot;/hello/**&quot;</span>))      <span class="regexp">//</span>只扫描以 /hello 开头的请求接口</span><br><span class="line">            .build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置-Swagger-开关"><a href="#配置-Swagger-开关" class="headerlink" title="配置 Swagger 开关"></a>配置 Swagger 开关</h3><p>如何动态配置当项目处于 dev 环境时才显示 swagger？</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#application.yaml</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">activate:</span></span><br><span class="line">      <span class="attr">on-profile:</span> <span class="string">pro</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">config:</span></span><br><span class="line">    <span class="attr">activate:</span></span><br><span class="line">      <span class="attr">on-profile:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public Docket docket(Environment environment) &#123;</span><br><span class="line">    <span class="comment">//设置要显示 swagger 的环境</span></span><br><span class="line">    Profiles <span class="keyword">of</span> = <span class="module-access"><span class="module"><span class="identifier">Profiles</span>.</span></span><span class="keyword">of</span>(<span class="string">&quot;dev&quot;</span>);</span><br><span class="line">    <span class="comment">//判断当前是否处于设定的环境</span></span><br><span class="line">    boolean flag = environment.accepts<span class="constructor">Profiles(<span class="params">of</span>)</span>;</span><br><span class="line">    <span class="comment">//enable()接收上面判断的结果</span></span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">Docket(DocumentationType.OAS_30)</span>.api<span class="constructor">Info(<span class="params">apiInfo</span>()</span>).enable(flag)...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8082//swagger-ui/，发现是能正常显示的，访问 localhost:8081//swagger-ui/ 是不显示的。</p><h3 id="配置-API-分组"><a href="#配置-API-分组" class="headerlink" title="配置 API 分组"></a>配置 API 分组</h3><p>默认是 default。通过 groupName() 即可配置分组。想要配置多个分组只需要配置多个 docket 即可。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Docket <span class="function"><span class="title">docket1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.OAS_30).groupName(<span class="string">&quot;group1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Docket <span class="function"><span class="title">docket2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.OAS_30).groupName(<span class="string">&quot;group2&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Docket <span class="function"><span class="title">docket3</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.OAS_30).groupName(<span class="string">&quot;group3&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ApiModel(&quot;实体类注释&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty(&quot;实体类属性注释&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiParam;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.Dog;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(<span class="meta-string">&quot;/helloSwagger&quot;</span>)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String helloSwagger() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;helloSwagger!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(<span class="meta-string">&quot;接口注释&quot;</span>)</span></span><br><span class="line">    <span class="meta">@GetMapping(<span class="meta-string">&quot;/getDog&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> Dog getDog(<span class="meta">@ApiParam(<span class="meta-string">&quot;接口参数注释&quot;</span>)</span> String name) &#123;</span><br><span class="line">        <span class="keyword">return</span> new Dog(name, <span class="number">6</span>);       <span class="comment">//只有在 Controller 中返回实体类，才会显示在 Schemas 上。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8080//swagger-ui/，点击 Swagger-Controller 区块如下图显示。<img data-src="/images/springboot-expound15.md-2.png"></p><p>点击 Schemas 区块如下图显示。<img data-src="/images/springboot-expound15.md-3.png"></p><h3 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h3><p>测试的话其实直接点击图上的 <strong>Try it out</strong> 按钮即可，输入数据后点击 <strong>Execute</strong> 按钮执行，最后会在下方出现发送的请求头等信息，响应结果也会显示出来。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Swagger&quot;&gt;&lt;a href=&quot;#Swagger&quot; class=&quot;headerlink&quot; title=&quot;Swagger&quot;&gt;&lt;/a&gt;Swagger&lt;/h2&gt;&lt;p&gt;号称世界上最流行的 API 框架，RESTful API 文档在线自动生成器（API 文档与 API 定义同步更新），直接运行在线测试 API，支持多种语言。相较于传统的 Postman 或 Curl 方式，使用 Swagger 来测试接口就显得非常简单了，不需要说明文档，却更不容易出错，只需要输入数据点击 Execute 即可进行测试。&lt;/p&gt;
&lt;h3 id=&quot;整合-Swagger&quot;&gt;&lt;a href=&quot;#整合-Swagger&quot; class=&quot;headerlink&quot; title=&quot;整合 Swagger&quot;&gt;&lt;/a&gt;整合 Swagger&lt;/h3&gt;&lt;h4 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h4&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--swagger3依赖--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.springfox&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;springfox-boot-starter&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.0&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十四)</title>
    <link href="http://guest997.tk/2021/08/23/springboot-expound14/"/>
    <id>http://guest997.tk/2021/08/23/springboot-expound14/</id>
    <published>2021-08-23T01:43:47.000Z</published>
    <updated>2021-09-02T05:17:27.344Z</updated>
    
    <content type="html"><![CDATA[<p>基于上篇文章继续进行整合。</p><h2 id="Shiro-整合-MyBatis-框架"><a href="#Shiro-整合-MyBatis-框架" class="headerlink" title="Shiro 整合 MyBatis 框架"></a>Shiro 整合 MyBatis 框架</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>由于 application.yaml 配置文件、DruidConfig 配置类以及 POJO 层实体类和之前的完全一样，就不在这赘述了。</p><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--druid 连接池依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--log4j2 日志依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.14.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--MyBatis 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Mapper-层"><a href="#Mapper-层" class="headerlink" title="Mapper 层"></a>Mapper 层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function">User <span class="title">getUserByName</span><span class="params">(<span class="meta">@Param(&quot;name&quot;)</span> String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--resources/mybatis/mapper/UserMapper.xml--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span></span><br><span class="line"><span class="meta"><span class="xml">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span></span><br><span class="line"><span class="meta"><span class="xml">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;ml.guest997.mapper.UserMapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        select *</span></span><br><span class="line"><span class="xml">        from mybatis.user</span></span><br><span class="line"><span class="xml">        where name = #</span><span class="template-variable">&#123;name&#125;</span><span class="xml">;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="修改-UserRealm"><a href="#修改-UserRealm" class="headerlink" title="修改 UserRealm"></a>修改 UserRealm</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//认证</span></span><br><span class="line">@Override</span><br><span class="line">protected AuthenticationInfo <span class="keyword">do</span><span class="constructor">GetAuthenticationInfo(AuthenticationToken <span class="params">authenticationToken</span>)</span> throws AuthenticationException &#123;</span><br><span class="line">    <span class="comment">//需要将 authenticationToken 强转成之前在 controller 中使用的 UsernamePasswordToken 才能取到用户数据。</span></span><br><span class="line">    UsernamePasswordToken usernamePasswordToken = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">    <span class="comment">//连接真实的数据库</span></span><br><span class="line">    User user = userMapper.get<span class="constructor">UserByName(<span class="params">usernamePasswordToken</span>.<span class="params">getUsername</span>()</span>);</span><br><span class="line">    <span class="keyword">if</span> (user<span class="operator"> == </span>null) &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//AuthenticationInfo 是个接口，返回的是它的实现类 SimpleAuthenticationInfo。</span></span><br><span class="line">    <span class="comment">//密码认证 shiro 直接帮我们做了，我们只要传个密码进去就好了。</span></span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">SimpleAuthenticationInfo(<span class="string">&quot;&quot;</span>, <span class="params">user</span>.<span class="params">getPwd</span>()</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>访问 localhost:8080，点击 <strong>add</strong> 或 <strong>update</strong> 链接，因为没有登录过，所以会自动跳到登录页面。输入数据库中的用户名和密码，会进入到首页，点击 <strong>add</strong> 或 <strong>update</strong> 链接，发现能够正常操作。</p><h2 id="实现用户授权"><a href="#实现用户授权" class="headerlink" title="实现用户授权"></a>实现用户授权</h2><p>为了接近真实业务，还需要在 mybatis.user 表中增加 perms 字段。给几个用户将该字段赋值为 user:add 或 user:update。</p><h3 id="POJO-层"><a href="#POJO-层" class="headerlink" title="POJO 层"></a>POJO 层</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> name;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> pwd;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> perms;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ShiroConfig"><a href="#ShiroConfig" class="headerlink" title="ShiroConfig"></a>ShiroConfig</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">public ShiroFilterFactoryBean <span class="constructor">ShiroFilterFactoryBean(@Autowired DefaultWebSecurityManager <span class="params">defaultWebSecurityManager</span>)</span> &#123;</span><br><span class="line">    ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> <span class="constructor">ShiroFilterFactoryBean()</span>;</span><br><span class="line">    <span class="comment">//设置安全管理器</span></span><br><span class="line">    shiroFilterFactoryBean.set<span class="constructor">SecurityManager(<span class="params">defaultWebSecurityManager</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加 shiro 的内置过滤器</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        anon：无需认证就能访问</span></span><br><span class="line"><span class="comment">        authc：必须认证才能访问</span></span><br><span class="line"><span class="comment">        user：必须拥有记住我功能才能访问</span></span><br><span class="line"><span class="comment">        perms：拥有某个资源的权限才能访问</span></span><br><span class="line"><span class="comment">        role：拥有某个角色权限才能访问</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    Map&lt;String, String&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">//filterMap.put(&quot;/user/*&quot;, &quot;authc&quot;);    //设置了权限就要把这行代码注释掉。因为这行代码意思就是认证了就能访问，将不会走授权方法，这样就会导致只要登录了就能访问。</span></span><br><span class="line">    shiroFilterFactoryBean.set<span class="constructor">LoginUrl(<span class="string">&quot;/toLoginPage&quot;</span>)</span>;     <span class="comment">//跳转到的登录页面请求地址</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    filterMap.put(<span class="string">&quot;/user/add&quot;</span>, <span class="string">&quot;perms[user:add]&quot;</span>);</span><br><span class="line">    filterMap.put(<span class="string">&quot;/user/update&quot;</span>, <span class="string">&quot;perms[user:update]&quot;</span>);</span><br><span class="line">    <span class="comment">//跳转到的未授权请求地址</span></span><br><span class="line">    shiroFilterFactoryBean.set<span class="constructor">UnauthorizedUrl(<span class="string">&quot;/user/noauth&quot;</span>)</span>;</span><br><span class="line"></span><br><span class="line">    shiroFilterFactoryBean.set<span class="constructor">FilterChainDefinitionMap(<span class="params">filterMap</span>)</span>;      <span class="comment">//设置过滤器</span></span><br><span class="line"></span><br><span class="line">    return shiroFilterFactoryBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="UserController"><a href="#UserController" class="headerlink" title="UserController"></a>UserController</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">&quot;/noauth&quot;</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">unauthorized</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;未经授权禁止访问！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="UserRealm"><a href="#UserRealm" class="headerlink" title="UserRealm"></a>UserRealm</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.mapper.<span class="type">UserMapper</span>;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.<span class="type">User</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.<span class="type">SecurityUtils</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">SimpleAuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">Subject</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.<span class="type">Autowired</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserMapper</span> userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="type">SimpleAuthorizationInfo</span> simpleAuthorizationInfo = <span class="keyword">new</span> <span class="type">SimpleAuthorizationInfo</span>();</span><br><span class="line">        <span class="comment">//获取当前用户</span></span><br><span class="line">        <span class="type">Subject</span> subject = <span class="type">SecurityUtils</span>.getSubject();</span><br><span class="line">        <span class="type">User</span> currentUser = (<span class="type">User</span>) subject.getPrincipal();        <span class="comment">//拿到 User 对象</span></span><br><span class="line">        simpleAuthorizationInfo.addStringPermission(currentUser.getPerms());       <span class="comment">//授权给当前用户</span></span><br><span class="line">        <span class="keyword">return</span> simpleAuthorizationInfo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="comment">//需要将 authenticationToken 强转成之前在 controller 中使用的 UsernamePasswordToken 才能取到用户数据。</span></span><br><span class="line">        <span class="type">UsernamePasswordToken</span> usernamePasswordToken = (<span class="type">UsernamePasswordToken</span>) authenticationToken;</span><br><span class="line">        <span class="comment">//连接真实的数据库</span></span><br><span class="line">        <span class="type">User</span> user = userMapper.getUserByName(usernamePasswordToken.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//存放 session</span></span><br><span class="line">        <span class="type">Subject</span> subject = <span class="type">SecurityUtils</span>.getSubject();</span><br><span class="line">        <span class="type">Session</span> session = subject.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;loginUser&quot;</span>, user);</span><br><span class="line">        <span class="comment">//AuthenticationInfo 是个接口，返回的是它的实现类 SimpleAuthenticationInfo。</span></span><br><span class="line">        <span class="comment">//密码认证 shiro 直接帮我们做了，我们只要传个密码进去就好了。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">SimpleAuthenticationInfo</span>(user, user.getPwd(), <span class="string">&quot;&quot;</span>);   <span class="comment">//由于授权需要数据库中的 perms 字段值，所以需要通过 principal 将 user 传过去。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>访问 localhost:8080，点击 <strong>add</strong> 或 <strong>update</strong> 链接，因为没有登录过，所以会自动跳到登录页面。输入数据库中的用户名和密码，会进入到首页，点击 <strong>add</strong> 或 <strong>update</strong> 链接，发现只有在数据库 perms 字段有的值，才能正常访问，否则会跳转到未授权请求地址。</p><h2 id="Shiro-整合-Thymeleaf"><a href="#Shiro-整合-Thymeleaf" class="headerlink" title="Shiro 整合 Thymeleaf"></a>Shiro 整合 Thymeleaf</h2><p>为了实现不同的用户权限显示不同的页面，还需要整合 Thymeleaf。</p><h3 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--shiro 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.theborakompanioni<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-shiro<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="ShiroConfig-1"><a href="#ShiroConfig-1" class="headerlink" title="ShiroConfig"></a>ShiroConfig</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用来整合 shiro-thymeleaf</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ShiroDialect <span class="function"><span class="title">getShiroDialect</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ShiroDialect();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改-index-html"><a href="#修改-index-html" class="headerlink" title="修改 index.html"></a>修改 index.html</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--index.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">      <span class="attr">xmlns:th</span>=<span class="string">&quot;https://www.thymeleaf.org&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">      <span class="attr">xmlns:shiro</span>=<span class="string">&quot;https://www.thymeleaf.org/thymeleaf-extras-shiro&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;msg&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;session.loginUser==null&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">toLoginPage</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:hasPermission</span>=<span class="string">&quot;user:add&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">user</span>/add&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">shiro:hasPermission</span>=<span class="string">&quot;user:update&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">user</span>/update&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>update<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>访问 localhost:8080，发现相较于之前没有了 <strong>add</strong> 和 <strong>update</strong> 链接，只有个登录链接。进行登录之后，发现登录链接没了，并且具有什么样的用户权限就显示什么样的页面。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;基于上篇文章继续进行整合。&lt;/p&gt;
&lt;h2 id=&quot;Shiro-整合-MyBatis-框架&quot;&gt;&lt;a href=&quot;#Shiro-整合-MyBatis-框架&quot; class=&quot;headerlink&quot; title=&quot;Shiro 整合 MyBatis 框架&quot;&gt;&lt;/a&gt;Shiro 整合 MyBatis 框架&lt;/h2&gt;&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;由于 application.yaml 配置文件、DruidConfig 配置类以及 POJO 层实体类和之前的完全一样，就不在这赘述了。&lt;/p&gt;
&lt;h4 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h4&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十三)</title>
    <link href="http://guest997.tk/2021/08/23/springboot-expound13/"/>
    <id>http://guest997.tk/2021/08/23/springboot-expound13/</id>
    <published>2021-08-23T01:42:07.000Z</published>
    <updated>2021-09-02T05:17:27.266Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Shiro"><a href="#Shiro" class="headerlink" title="Shiro"></a>Shiro</h2><p>Shiro 是一个 Java 的安全（权限）框架，可以完成认证、授权、加密、会话管理、Web 集成和缓存等。</p><h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p><img data-src="/images/springboot-expound13.md-0.png"></p><ul><li>  Subject：任何可以与应用交互的用户</li><li>  Security Manager：相当于 SpringMVC 中的 DispatcherSerlet，是 Shiro 的心脏。所有具体的交互都通过 Security Manager 进行控制，它管理者所有的 Subject，且负责进行认证、授权、会话及缓存的管理。</li><li>  Authenticator：负责 Subject 认证， 是一个扩展点，可以自定义实现。可以使用认证策略（Authentication Strategy），即什么情况下算用户认证通过了。</li><li>Authorizer：授权器，即访问控制器，用来决定主体是否有权限进行相应的操作，即控制着用户能访问应用中<br>  的那些功能。</li><li>  Realm：可以有一个或者多个的 realm, 可以认为是安全实体数据源，即用于获取安全实体的，可以用 JDBC 实现，也可以是内存实现等等，由用户提供。</li><li>  Session Manager：管理 Session 生命周期的组件，Shiro 并不仅仅可以用在 Web 环境，也可以用在普通的 JavaSE 环境中。</li><li>  Cache Manager：缓存控制器，来管理如用户、角色和权限等缓存的，因为这些数据基本上很少改变，放到缓存中后可以提高访问的性能。</li><li>  Cryptography：密码模块，Shiro 提供了一些常见的加密组件用于密码加密和解密等。</li></ul><h2 id="SpringBoot-整合-Shiro-框架"><a href="#SpringBoot-整合-Shiro-框架" class="headerlink" title="SpringBoot 整合 Shiro 框架"></a>SpringBoot 整合 Shiro 框架</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>新建 SpringBoot 项目，导入 Lombok、Spring Web、MySQL Driver 和 Thymeleaf 依赖。</p><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--shiro 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Config-层"><a href="#Config-层" class="headerlink" title="Config 层"></a>Config 层</h4><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationException</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.<span class="type">AuthenticationToken</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authz.<span class="type">AuthorizationInfo</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.realm.<span class="type">AuthorizingRealm</span>;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.<span class="type">PrincipalCollection</span>;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">    <span class="comment">//授权</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthorizationInfo</span> doGetAuthorizationInfo(<span class="type">PrincipalCollection</span> principalCollection) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">AuthenticationInfo</span> doGetAuthenticationInfo(<span class="type">AuthenticationToken</span> authenticationToken) <span class="keyword">throws</span> <span class="type">AuthenticationException</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建 realm 对象</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> UserRealm <span class="function"><span class="title">userRealm</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserRealm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DefaultWebSecurityManager <span class="function"><span class="title">DefaultWebSecurityManager</span>(<span class="params"><span class="meta">@Autowired</span> UserRealm userRealm</span>)</span> &#123;</span><br><span class="line">        DefaultWebSecurityManager defaultWebSecurityManager = <span class="keyword">new</span> DefaultWebSecurityManager();</span><br><span class="line">        <span class="comment">//关联 UserRealm</span></span><br><span class="line">        defaultWebSecurityManager.setRealm(userRealm);</span><br><span class="line">        <span class="keyword">return</span> defaultWebSecurityManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ShiroFilterFactoryBean <span class="function"><span class="title">ShiroFilterFactoryBean</span>(<span class="params"><span class="meta">@Autowired</span> DefaultWebSecurityManager defaultWebSecurityManager</span>)</span> &#123;</span><br><span class="line">        ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">        <span class="comment">//设置安全管理器</span></span><br><span class="line">        shiroFilterFactoryBean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line">        <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">&quot;/user&quot;</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&#123;<span class="meta-string">&quot;/&quot;</span>, <span class="meta-string">&quot;/index&quot;</span>&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String homePage(Model model) &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;helloShiro!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/add&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String add() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/add&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/update&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String update() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/update&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/toLoginPage&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String toLoginPage()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--index.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">      <span class="attr">xmlns:th</span>=<span class="string">&quot;https://www.thymeleaf.org&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;msg&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">user</span>/add&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">user</span>/update&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>update<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--login.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;https://www.thymeleaf.org&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;msg&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">login</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--user/add.html--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>添加一个用户<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--user/update.html--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>修改一个用户<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现登录拦截"><a href="#实现登录拦截" class="headerlink" title="实现登录拦截"></a>实现登录拦截</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="function"><span class="title">ShiroFilterFactoryBean</span>(<span class="params"><span class="meta">@Autowired</span> DefaultWebSecurityManager defaultWebSecurityManager</span>)</span> &#123;</span><br><span class="line">    ShiroFilterFactoryBean shiroFilterFactoryBean = <span class="keyword">new</span> ShiroFilterFactoryBean();</span><br><span class="line">    <span class="comment">//设置安全管理器</span></span><br><span class="line">    shiroFilterFactoryBean.setSecurityManager(defaultWebSecurityManager);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加 shiro 的内置过滤器</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    anon：无需认证就能访问</span></span><br><span class="line"><span class="comment">    authc：必须认证才能访问</span></span><br><span class="line"><span class="comment">    user：必须拥有记住我功能才能访问</span></span><br><span class="line"><span class="comment">    perms：拥有某个资源的权限才能访问</span></span><br><span class="line"><span class="comment">    role：拥有某个角色权限才能访问</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; filterMap = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">    filterMap.put(<span class="string">&quot;/user/*&quot;</span>, <span class="string">&quot;authc&quot;</span>);</span><br><span class="line">    shiroFilterFactoryBean.setLoginUrl(<span class="string">&quot;/toLoginPage&quot;</span>);     <span class="comment">//跳转到的登录页面请求地址</span></span><br><span class="line">    shiroFilterFactoryBean.setFilterChainDefinitionMap(filterMap);      <span class="comment">//设置过滤器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> shiroFilterFactoryBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8080，点击 <strong>add</strong> 或 <strong>update</strong> 链接，因为没有登录过，所以会自动跳到登录页面。</p><h3 id="实现用户认证"><a href="#实现用户认证" class="headerlink" title="实现用户认证"></a>实现用户认证</h3><h4 id="LoginController"><a href="#LoginController" class="headerlink" title="LoginController"></a>LoginController</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">login</span>(<span class="params"><span class="meta">@RequestParam</span>(<span class="string">&quot;username&quot;</span>) <span class="built_in">String</span> username, <span class="meta">@RequestParam</span>(<span class="string">&quot;password&quot;</span>) <span class="built_in">String</span> password, Model model</span>)</span> &#123;</span><br><span class="line">    <span class="comment">//获取当前用户</span></span><br><span class="line">    Subject subject = SecurityUtils.getSubject();</span><br><span class="line">    <span class="comment">//使用 token 封装用户登录数据</span></span><br><span class="line">    UsernamePasswordToken usernamePasswordToken = <span class="keyword">new</span> UsernamePasswordToken(username, password);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        subject.login(usernamePasswordToken);      <span class="comment">//执行登录方法，认证会在 UserRealm.doGetAuthenticationInfo() 中进行。</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnknownAccountException uae) &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;用户名不存在！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IncorrectCredentialsException ice) &#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;密码错误！&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserRealm"><a href="#UserRealm" class="headerlink" title="UserRealm"></a>UserRealm</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//认证</span></span><br><span class="line">@Override</span><br><span class="line">protected AuthenticationInfo <span class="keyword">do</span><span class="constructor">GetAuthenticationInfo(AuthenticationToken <span class="params">authenticationToken</span>)</span> throws AuthenticationException &#123;</span><br><span class="line">    <span class="comment">//需要将 authenticationToken 强转成之前在 controller 中使用的 UsernamePasswordToken 才能取到用户数据。</span></span><br><span class="line">    UsernamePasswordToken usernamePasswordToken = (UsernamePasswordToken) authenticationToken;</span><br><span class="line">    <span class="comment">//模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="string">&quot;root&quot;</span>.equals(usernamePasswordToken.get<span class="constructor">Username()</span>))&#123;</span><br><span class="line">        return null;        <span class="comment">//在这里会自动抛出之前在 controller 中定义的 UnknownAccountException 异常。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//存放 session</span></span><br><span class="line">    Subject subject = <span class="module-access"><span class="module"><span class="identifier">SecurityUtils</span>.</span></span>get<span class="constructor">Subject()</span>;</span><br><span class="line">    Session session = subject.get<span class="constructor">Session()</span>;</span><br><span class="line">    session.set<span class="constructor">Attribute(<span class="string">&quot;loginUser&quot;</span>, <span class="params">user</span>)</span>;</span><br><span class="line">    <span class="comment">//AuthenticationInfo 是个接口，返回的是它的实现类 SimpleAuthenticationInfo。</span></span><br><span class="line">    <span class="comment">//密码认证 shiro 直接帮我们做了，我们只要传个密码进去就好了。</span></span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">SimpleAuthenticationInfo(<span class="string">&quot;&quot;</span>,<span class="string">&quot;password&quot;</span>,<span class="string">&quot;&quot;</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>访问 localhost:8080，点击 <strong>add</strong> 或 <strong>update</strong> 链接，因为没有登录过，所以会自动跳到登录页面。随便输入用户名或密码，会出现提示信息；输入用户名 root 和密码 password，会进入到首页，点击 <strong>add</strong> 或 <strong>update</strong> 链接，发现能够正常操作。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Shiro&quot;&gt;&lt;a href=&quot;#Shiro&quot; class=&quot;headerlink&quot; title=&quot;Shiro&quot;&gt;&lt;/a&gt;Shiro&lt;/h2&gt;&lt;p&gt;Shiro 是一个 Java 的安全（权限）框架，可以完成认证、授权、加密、会话管理、Web 集成和缓存等。&lt;/p&gt;
&lt;h3 id=&quot;架构&quot;&gt;&lt;a href=&quot;#架构&quot; class=&quot;headerlink&quot; title=&quot;架构&quot;&gt;&lt;/a&gt;架构&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&quot;/images/springboot-expound13.md-0.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;  Subject：任何可以与应用交互的用户&lt;/li&gt;
&lt;li&gt;  Security Manager：相当于 SpringMVC 中的 DispatcherSerlet，是 Shiro 的心脏。所有具体的交互都通过 Security Manager 进行控制，它管理者所有的 Subject，且负责进行认证、授权、会话及缓存的管理。&lt;/li&gt;
&lt;li&gt;  Authenticator：负责 Subject 认证， 是一个扩展点，可以自定义实现。可以使用认证策略（Authentication Strategy），即什么情况下算用户认证通过了。&lt;/li&gt;
&lt;li&gt;Authorizer：授权器，即访问控制器，用来决定主体是否有权限进行相应的操作，即控制着用户能访问应用中&lt;br&gt;  的那些功能。&lt;/li&gt;
&lt;li&gt;  Realm：可以有一个或者多个的 realm, 可以认为是安全实体数据源，即用于获取安全实体的，可以用 JDBC 实现，也可以是内存实现等等，由用户提供。&lt;/li&gt;
&lt;li&gt;  Session Manager：管理 Session 生命周期的组件，Shiro 并不仅仅可以用在 Web 环境，也可以用在普通的 JavaSE 环境中。&lt;/li&gt;
&lt;li&gt;  Cache Manager：缓存控制器，来管理如用户、角色和权限等缓存的，因为这些数据基本上很少改变，放到缓存中后可以提高访问的性能。&lt;/li&gt;
&lt;li&gt;  Cryptography：密码模块，Shiro 提供了一些常见的加密组件用于密码加密和解密等。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十二)</title>
    <link href="http://guest997.tk/2021/08/22/springboot-expound12/"/>
    <id>http://guest997.tk/2021/08/22/springboot-expound12/</id>
    <published>2021-08-22T01:15:53.000Z</published>
    <updated>2021-09-02T05:17:24.813Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web-应用的安全"><a href="#Web-应用的安全" class="headerlink" title="Web 应用的安全"></a>Web 应用的安全</h2><p>在 Web 开发中，安全一直是非常重要的一个方面。安全虽然属于应用的非功能性需求，但是应该在应用开发的初期就考虑进来。如果在应用开发的后期才考虑安全的问题，就可能陷入一个两难的境地：一方面，应用存在严重的安全漏洞，无法满足用户的要求，并可能造成用户的隐私数据被攻击者窃取；另一方面，应用的基本架构已经确定，要修复安全漏洞，可能需要对系统的架构做出比较重大的调整，因而需要更多的开发时间，影响应用的发布进程。<br>Web 应用的安全性包括用户认证（Authentication）和用户授权（Authorization）两个部分。用户认证指的是用户能否访问该系统，一般需要用户提供用户名和密码，系统通过校验用户名和密码来完成认证过程。用户授权指的是验证某个用户是否有权限执行某个操作。在一个系统中，不同用户所具有的权限是不同的。</p><h2 id="SpringSecurity"><a href="#SpringSecurity" class="headerlink" title="SpringSecurity"></a>SpringSecurity</h2><p>SpringSecurity 是一个基于 Spring 的框架，也是 SpringBoot 底层安全模块默认的技术选型。记住下面这三个东西：</p><ul><li>  WebSecurityConfigurerAdapter：自定义安全策略</li><li>  AuthenticationManagerBuilder：自定义认证策略</li><li>  @EnableWebSecurity：开启 WebSecurity 模式</li></ul><p>项目源码会放在我的网盘 <strong>学习-SpringBoot</strong> 目录下的 <strong>SpringSecurity</strong> 压缩包。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>新建 SpringBoot 项目，导入 Spring Web 和 Thymeleaf 依赖。导入所有的静态资源，如下图。<strong>仔细查看所有 html 页面中的 thymeleaf 语法当作复习一遍。每写一个功能都要进行测试，看下前端是否能够正常显示。</strong><img data-src="/images/springboot-expound12.md-0.png"></p><h4 id="application-yaml"><a href="#application-yaml" class="headerlink" title="application.yaml"></a>application.yaml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭 thymeleaf 缓存</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RouterController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(&#123;<span class="string">&quot;/&quot;</span>, <span class="string">&quot;/index&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">index</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/toLoginPage&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">toLogin</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/login&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/level1/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">level1</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) int id</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level1/&quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/level2/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">level2</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) int id</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level2/&quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/level3/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">level3</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) int id</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;views/level3/&quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现用户认证和授权"><a href="#实现用户认证和授权" class="headerlink" title="实现用户认证和授权"></a>实现用户认证和授权</h3><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springsecurity 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Config-层"><a href="#Config-层" class="headerlink" title="Config 层"></a>Config 层</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">ml</span><span class="selector-class">.guest997</span><span class="selector-class">.config</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.security</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.authentication</span><span class="selector-class">.builders</span><span class="selector-class">.AuthenticationManagerBuilder</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.security</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.web</span><span class="selector-class">.builders</span><span class="selector-class">.HttpSecurity</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.security</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.web</span><span class="selector-class">.configuration</span><span class="selector-class">.EnableWebSecurity</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.security</span><span class="selector-class">.config</span><span class="selector-class">.annotation</span><span class="selector-class">.web</span><span class="selector-class">.configuration</span><span class="selector-class">.WebSecurityConfigurerAdapter</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.security</span><span class="selector-class">.crypto</span><span class="selector-class">.bcrypt</span><span class="selector-class">.BCryptPasswordEncoder</span>;</span><br><span class="line"></span><br><span class="line">@<span class="selector-tag">EnableWebSecurity</span>      <span class="comment">//开启 WebSecurity 模式</span></span><br><span class="line"><span class="selector-tag">public</span> <span class="selector-tag">class</span> <span class="selector-tag">SpringSecurityConfig</span> <span class="selector-tag">extends</span> <span class="selector-tag">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//认证和授权</span></span><br><span class="line">    <span class="variable">@Override</span></span><br><span class="line">    protected void configure(AuthenticationManagerBuilder auth) throws Exception &#123;</span><br><span class="line">        <span class="comment">//在内存中定义，也可以去数据库拿。</span></span><br><span class="line">        <span class="selector-tag">auth</span><span class="selector-class">.inMemoryAuthentication</span>()<span class="selector-class">.passwordEncoder</span>(new BCryptPasswordEncoder())      <span class="comment">//一定要进行密码加密，否则会报错。</span></span><br><span class="line">            <span class="selector-class">.withUser</span>(<span class="string">&quot;root&quot;</span>)<span class="selector-class">.password</span>(new BCryptPasswordEncoder().encode(<span class="string">&quot;root&quot;</span>))<span class="selector-class">.roles</span>(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>, <span class="string">&quot;vip3&quot;</span>)</span><br><span class="line">            <span class="selector-class">.and</span>()</span><br><span class="line">            <span class="selector-class">.withUser</span>(<span class="string">&quot;admin&quot;</span>)<span class="selector-class">.password</span>(new BCryptPasswordEncoder().encode(<span class="string">&quot;admin&quot;</span>))<span class="selector-class">.roles</span>(<span class="string">&quot;vip1&quot;</span>, <span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">            <span class="selector-class">.and</span>()</span><br><span class="line">            <span class="selector-class">.withUser</span>(<span class="string">&quot;guest&quot;</span>)<span class="selector-class">.password</span>(new BCryptPasswordEncoder().encode(<span class="string">&quot;guest&quot;</span>))<span class="selector-class">.roles</span>(<span class="string">&quot;vip1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="selector-tag">Override</span></span><br><span class="line">    <span class="selector-tag">protected</span> <span class="selector-tag">void</span> <span class="selector-tag">configure</span>(HttpSecurity http) <span class="selector-tag">throws</span> <span class="selector-tag">Exception</span> &#123;</span><br><span class="line">        <span class="comment">//设置权限</span></span><br><span class="line">        <span class="selector-tag">http</span><span class="selector-class">.authorizeRequests</span>()<span class="selector-class">.antMatchers</span>(<span class="string">&quot;/&quot;</span>)<span class="selector-class">.permitAll</span>()       <span class="comment">//首页所有人能访问</span></span><br><span class="line">            <span class="comment">//等级页面需要一定的角色才能进入</span></span><br><span class="line">            <span class="selector-class">.antMatchers</span>(<span class="string">&quot;/level1/**&quot;</span>)<span class="selector-class">.hasRole</span>(<span class="string">&quot;vip1&quot;</span>)</span><br><span class="line">            <span class="selector-class">.antMatchers</span>(<span class="string">&quot;/level2/**&quot;</span>)<span class="selector-class">.hasRole</span>(<span class="string">&quot;vip2&quot;</span>)</span><br><span class="line">            <span class="selector-class">.antMatchers</span>(<span class="string">&quot;/level3/**&quot;</span>)<span class="selector-class">.hasRole</span>(<span class="string">&quot;vip3&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启自动配置的登录功能</span></span><br><span class="line">        <span class="comment">//当没有登录时，会跳转到 /login，当登录失败时，会跳转到 /login?error。</span></span><br><span class="line">        <span class="selector-tag">http</span><span class="selector-class">.formLogin</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开启自动配置的注销功能</span></span><br><span class="line">        <span class="selector-tag">http</span><span class="selector-class">.logout</span>()<span class="selector-class">.logoutSuccessUrl</span>(<span class="string">&quot;/&quot;</span>);    <span class="comment">//注销成功时跳转到首页</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果登录后发现无法注销，就可能是因为开启了 csrf 防御功能。</span></span><br><span class="line">        <span class="selector-tag">http</span><span class="selector-class">.csrf</span>()<span class="selector-class">.disable</span>();      <span class="comment">//关闭 csrf 防御功能，默认只能通过 post 方式提交 logout 请求。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现权限控制"><a href="#实现权限控制" class="headerlink" title="实现权限控制"></a>实现权限控制</h3><p>用户没有登录的时候，导航栏上只显示登录按钮并且不显示任何 level 区块，用户登录之后，导航栏才显示登录的用户信息及注销按钮。还有就是，比如 guest 用户只有 vip1 的身份权限，那么登录后就只显示 level 1 的区块，而其它的 level 区块就不应该显示。</p><h4 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--thymeleaf-springsecurity 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--如果未登录只显示登录按钮--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;!isAuthenticated()&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">toLoginPage</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;address card icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 登录</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--如果已登录显示用户信息和注销按钮--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;isAuthenticated()&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;address card icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">        用户名：<span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">&quot;principal.username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="symbol">&amp;nbsp;</span></span></span><br><span class="line"><span class="xml">        角色：<span class="tag">&lt;<span class="name">span</span> <span class="attr">sec:authentication</span>=<span class="string">&quot;principal.authorities&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;isAuthenticated()&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">logout</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;sign-out icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 注销</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--level 区块根据用户角色动态生成--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip1&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 1<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>1/1&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>1/2&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>1/3&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-1-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip2&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 2<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>2/1&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>2/2&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>2/3&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-2-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;column&quot;</span> <span class="attr">sec:authorize</span>=<span class="string">&quot;hasRole(&#x27;vip3&#x27;)&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui raised segment&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;ui&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span>Level 3<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>3/1&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>3/2&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">level</span>3/3&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;bullhorn icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> Level-3-3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>访问 localhost:8080，如下图<img data-src="/images/springboot-expound12.md-1.png"></p><p>访问 localhost:8080/login 进行登录，如下图<img data-src="/images/springboot-expound12.md-2.png"></p><p>可以发现已经实现了我们想要的权限控制。</p><h3 id="登录页和记住我"><a href="#登录页和记住我" class="headerlink" title="登录页和记住我"></a>登录页和记住我</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;form th:action=<span class="string">&quot;@&#123;/login&#125;&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>=&quot;<span class="symbol">field</span>&quot;&gt;</span><br><span class="line">        &lt;<span class="symbol">label</span>&gt;<span class="symbol">Username</span>&lt;/<span class="symbol">label</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>=&quot;<span class="symbol">ui</span> <span class="symbol">left</span> <span class="symbol">icon</span> <span class="symbol">input</span>&quot;&gt;</span><br><span class="line">            &lt;<span class="symbol">input</span> <span class="symbol">type</span>=&quot;<span class="symbol">text</span>&quot; <span class="symbol">placeholder</span>=&quot;<span class="symbol">username</span>&quot; <span class="symbol">name</span>=&quot;<span class="symbol">username</span>&quot;&gt;</span><br><span class="line">            &lt;<span class="symbol">i</span> <span class="symbol">class</span>=&quot;<span class="symbol">user</span> <span class="symbol">icon</span>&quot;&gt;&lt;/<span class="symbol">i</span>&gt;</span><br><span class="line">        &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>=&quot;<span class="symbol">field</span>&quot;&gt;</span><br><span class="line">        &lt;<span class="symbol">label</span>&gt;<span class="symbol">Password</span>&lt;/<span class="symbol">label</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>=&quot;<span class="symbol">ui</span> <span class="symbol">left</span> <span class="symbol">icon</span> <span class="symbol">input</span>&quot;&gt;</span><br><span class="line">            &lt;<span class="symbol">input</span> <span class="symbol">type</span>=&quot;<span class="symbol">password</span>&quot; <span class="symbol">placeholder</span>=&quot;<span class="symbol">password</span>&quot; <span class="symbol">name</span>=&quot;<span class="symbol">password</span>&quot;&gt;</span><br><span class="line">            &lt;<span class="symbol">i</span> <span class="symbol">class</span>=&quot;<span class="symbol">lock</span> <span class="symbol">icon</span>&quot;&gt;&lt;/<span class="symbol">i</span>&gt;</span><br><span class="line">        &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>=&quot;<span class="symbol">field</span>&quot;&gt;</span><br><span class="line">        &lt;<span class="symbol">input</span> <span class="symbol">type</span>=&quot;<span class="symbol">checkbox</span>&quot; <span class="symbol">name</span>=&quot;<span class="symbol">remember</span>&quot;&gt; 记住我</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">input</span> <span class="symbol">type</span>=&quot;<span class="symbol">submit</span>&quot; <span class="symbol">class</span>=&quot;<span class="symbol">ui</span> <span class="symbol">blue</span> <span class="symbol">submit</span> <span class="symbol">button</span>&quot; <span class="symbol">value</span>=&quot;登录&quot;/&gt;</span><br><span class="line">&lt;/<span class="symbol">form</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="Config-层-1"><a href="#Config-层-1" class="headerlink" title="Config 层"></a>Config 层</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定制首页（注意：需要对应着首页表单进行参数确认）</span></span><br><span class="line"><span class="selector-tag">http</span><span class="selector-class">.formLogin</span>()</span><br><span class="line">    <span class="selector-class">.usernameParameter</span>(<span class="string">&quot;username&quot;</span>)<span class="selector-class">.passwordParameter</span>(<span class="string">&quot;password&quot;</span>)        <span class="comment">//用户名和密码参数名默认就是 username 和 password，如果前端表单的 name 属性值为别的，一定要设置为相应的 name 属性值。</span></span><br><span class="line">    <span class="selector-class">.loginPage</span>(<span class="string">&quot;/toLoginPage&quot;</span>)      <span class="comment">//跳转到的登录页面请求地址</span></span><br><span class="line">    <span class="selector-class">.loginProcessingUrl</span>(<span class="string">&quot;/login&quot;</span>);      <span class="comment">//表单提交的请求地址，一定要和前端表单的 action 属性值一样。不用我们自己写 controller，SpringSecurity 会自动帮我们做。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启记住我功能，并且接收的参数为前端表单传过来的 name 属性值。</span></span><br><span class="line"><span class="selector-tag">http</span><span class="selector-class">.rememberMe</span>()<span class="selector-class">.rememberMeParameter</span>(<span class="string">&quot;remember&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><p>访问 localhost:8080，点击右上角的登录按钮，发现能够正常跳转到我们自己的登录页，登录后也能正常进入到首页。关闭浏览器，依旧访问 localhost:8080，发现即使不登录，依然是我们登录后的界面，就说明成功了。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Web-应用的安全&quot;&gt;&lt;a href=&quot;#Web-应用的安全&quot; class=&quot;headerlink&quot; title=&quot;Web 应用的安全&quot;&gt;&lt;/a&gt;Web 应用的安全&lt;/h2&gt;&lt;p&gt;在 Web 开发中，安全一直是非常重要的一个方面。安全虽然属于应用的非功能性需求，但是应该在应用开发的初期就考虑进来。如果在应用开发的后期才考虑安全的问题，就可能陷入一个两难的境地：一方面，应用存在严重的安全漏洞，无法满足用户的要求，并可能造成用户的隐私数据被攻击者窃取；另一方面，应用的基本架构已经确定，要修复安全漏洞，可能需要对系统的架构做出比较重大的调整，因而需要更多的开发时间，影响应用的发布进程。&lt;br&gt;Web 应用的安全性包括用户认证（Authentication）和用户授权（Authorization）两个部分。用户认证指的是用户能否访问该系统，一般需要用户提供用户名和密码，系统通过校验用户名和密码来完成认证过程。用户授权指的是验证某个用户是否有权限执行某个操作。在一个系统中，不同用户所具有的权限是不同的。&lt;/p&gt;
&lt;h2 id=&quot;SpringSecurity&quot;&gt;&lt;a href=&quot;#SpringSecurity&quot; class=&quot;headerlink&quot; title=&quot;SpringSecurity&quot;&gt;&lt;/a&gt;SpringSecurity&lt;/h2&gt;&lt;p&gt;SpringSecurity 是一个基于 Spring 的框架，也是 SpringBoot 底层安全模块默认的技术选型。记住下面这三个东西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;  WebSecurityConfigurerAdapter：自定义安全策略&lt;/li&gt;
&lt;li&gt;  AuthenticationManagerBuilder：自定义认证策略&lt;/li&gt;
&lt;li&gt;  @EnableWebSecurity：开启 WebSecurity 模式&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十一)</title>
    <link href="http://guest997.tk/2021/08/22/springboot-expound11/"/>
    <id>http://guest997.tk/2021/08/22/springboot-expound11/</id>
    <published>2021-08-22T01:04:27.000Z</published>
    <updated>2021-09-02T05:17:17.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SpringData（数据库基于之前的-MyBatis-文章）"><a href="#SpringData（数据库基于之前的-MyBatis-文章）" class="headerlink" title="SpringData（数据库基于之前的 MyBatis 文章）"></a>SpringData（数据库基于之前的 MyBatis 文章）</h2><p>对于数据访问层，无论是 SQL 还是 NOSQL，SpringBoot 底层都是采用 SpringData 的方式进行统一处理。SpringData 是 Spring 中与 SpringBoot、SpringCloud 等齐名的知名项目。</p><p>新建 SpringBoot 项目，导入 Lombok、Spring Web、JDBC API 和 MySQL Driver 依赖。</p><h3 id="整合-JDBC"><a href="#整合-JDBC" class="headerlink" title="整合 JDBC"></a>整合 JDBC</h3><h4 id="JDBCTemplate"><a href="#JDBCTemplate" class="headerlink" title="JDBCTemplate"></a>JDBCTemplate</h4><p>即使不使用第三方数据库操作框架，如 MyBatis，Spring 本身也对原生的 JDBC 做了轻量级的封装，即 JdbcTemplate。数据库操作的所有 CRUD 方法都在 JdbcTemplate 中。SpringBoot 不仅提供了默认的数据源，同时默认已经配置好了 JdbcTemplate 放在了容器中，只需注入即可使用。</p><h4 id="配置数据库连接属性"><a href="#配置数据库连接属性" class="headerlink" title="配置数据库连接属性"></a>配置数据库连接属性</h4><p>可以使用 spring.datasource.type 指定自定义的数据源类型，值为连接池实现的完全限定名。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spring:</span></span><br><span class="line"><span class="symbol">  datasource:</span></span><br><span class="line"><span class="symbol">    username:</span> root</span><br><span class="line"><span class="symbol">    password:</span> root</span><br><span class="line"><span class="symbol">    url:</span> jdbc:mysql:<span class="comment">//localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br></pre></td></tr></table></figure><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">&quot;/jdbc&quot;</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/addUser/&#123;id&#125;/&#123;name&#125;/&#123;pwd&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">addUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id, <span class="meta">@PathVariable</span>(<span class="string">&quot;name&quot;</span>) <span class="built_in">String</span> name, <span class="meta">@PathVariable</span>(<span class="string">&quot;pwd&quot;</span>) <span class="built_in">String</span> pwd</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">String</span> sql = <span class="string">&quot;insert into mybatis.user(id,name,pwd) values(?,?,?)&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql, id, name, pwd);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;add a user successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/delUser/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">delUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">String</span> sql = <span class="string">&quot;delete from mybatis.user where id=&quot;</span> + id;</span><br><span class="line">        jdbcTemplate.update(sql);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;delete a user successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/updateUser/&#123;name&#125;/&#123;pwd&#125;/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">updateUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id, <span class="meta">@PathVariable</span>(<span class="string">&quot;name&quot;</span>) <span class="built_in">String</span> name, <span class="meta">@PathVariable</span>(<span class="string">&quot;pwd&quot;</span>) <span class="built_in">String</span> pwd</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">Object</span>[] objects = <span class="keyword">new</span> <span class="built_in">Object</span>[<span class="number">3</span>];</span><br><span class="line">        objects[<span class="number">0</span>] = name;</span><br><span class="line">        objects[<span class="number">1</span>] = pwd;</span><br><span class="line">        objects[<span class="number">2</span>] = id;</span><br><span class="line">        <span class="built_in">String</span> sql = <span class="string">&quot;update mybatis.user set name=?,pwd=? where id=?&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql, objects);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;update a user successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/queryAllUser&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;&gt; <span class="function"><span class="title">queryAllUser</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">String</span> sql = <span class="string">&quot;select * from mybatis.user&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForList(sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/queryUser/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; <span class="function"><span class="title">queryUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">String</span> sql = <span class="string">&quot;select * from mybatis.user where id=&quot;</span> + id;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.queryForMap(sql);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整合-Druid-数据源"><a href="#整合-Druid-数据源" class="headerlink" title="整合 Druid 数据源"></a>整合 Druid 数据源</h3><p>Java 程序很大一部分要操作数据库，为了提高性能操作数据库的时候，就不得不使用数据库连接池。Druid 是阿里巴巴开源平台上一个数据库连接池实现，结合了 C3P0、DBCP 等 DB 池的优点，同时加入了日志监控。Druid 可以很好地监控 DB 池连接和 SQL 的执行情况，天生就是针对监控而生的 DB 连接池。</p><h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--druid 连接池依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--log4j2 日志依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.14.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#druid 数据源配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#配置监控统计拦截的 filters，stat:监控统计、log4j2：日志记录、wall：防御 sql 注入</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j2</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><h4 id="配置-Druid-数据源监控"><a href="#配置-Druid-数据源监控" class="headerlink" title="配置 Druid 数据源监控"></a>配置 Druid 数据源监控</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.Servlet;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//由于 SpringBoot 内置 Servlet 容器时没有 web.xml 文件，所以使用 ServletRegistrationBean 配置一个 Druid 数据源监控的 Servlet。</span></span><br><span class="line">    <span class="comment">//还可以使用 @WebServlet 注解实现</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean&lt;Servlet&gt; <span class="title">statViewServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设置后台访问地址</span></span><br><span class="line">        ServletRegistrationBean&lt;Servlet&gt; servletRegistrationBean = <span class="keyword">new</span> ServletRegistrationBean&lt;&gt;(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        initParams.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        initParams.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;localhost&quot;</span>);       <span class="comment">//表示只有本机可以访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;allow&quot;, &quot;&quot;);              //表示允许所有访问</span></span><br><span class="line">        <span class="comment">//initParams.put(&quot;Guest997&quot;, &quot;192.168.1.123&quot;);   //表示禁止此 ip 访问</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置初始化参数</span></span><br><span class="line">        servletRegistrationBean.setInitParameters(initParams);</span><br><span class="line">        <span class="keyword">return</span> servletRegistrationBean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>访问 localhost:8080/druid，会跳转到监控登录页面。如下图<img data-src="/images/springboot-expound11.md-0.png"></p><p>访问上面 JDBC 写的几个 Controller，可以在 SQL监控看到执行情况。如下图<img data-src="/images/springboot-expound11.md-1.png"></p><h3 id="整合-MyBatis-框架（重点）"><a href="#整合-MyBatis-框架（重点）" class="headerlink" title="整合 MyBatis 框架（重点）"></a>整合 MyBatis 框架（重点）</h3><h4 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--MyBatis 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="POJO-层"><a href="#POJO-层" class="headerlink" title="POJO 层"></a>POJO 层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Mapper-层"><a href="#Mapper-层" class="headerlink" title="Mapper 层"></a>Mapper 层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span>     <span class="comment">//表示这是 mybatis 的 mapper 接口类</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delUser</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getAllUser</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">User <span class="title">getUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--resources/mybatis/mapper/UserMapper.xml--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span></span><br><span class="line"><span class="meta"><span class="xml">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span></span><br><span class="line"><span class="meta"><span class="xml">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;ml.guest997.mapper.UserMapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        insert into mybatis.user(id, name, pwd)</span></span><br><span class="line"><span class="xml">        values (#</span><span class="template-variable">&#123;id&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;name&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;pwd&#125;</span><span class="xml">)</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delUser&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        delete</span></span><br><span class="line"><span class="xml">        from mybatis.user</span></span><br><span class="line"><span class="xml">        where id = #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        update mybatis.user</span></span><br><span class="line"><span class="xml">        set name =#</span><span class="template-variable">&#123;name&#125;</span><span class="xml">,</span></span><br><span class="line"><span class="xml">            pwd=#</span><span class="template-variable">&#123;pwd&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        where id = #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAllUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        select *</span></span><br><span class="line"><span class="xml">        from mybatis.user;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        select *</span></span><br><span class="line"><span class="xml">        from mybatis.user</span></span><br><span class="line"><span class="xml">        where id = #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="整合-MyBatis"><a href="#整合-MyBatis" class="headerlink" title="整合 MyBatis"></a>整合 MyBatis</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#整合 mybatis</span><br><span class="line">mybatis:</span><br><span class="line">  type-aliases-<span class="keyword">package</span>: ml.guest997.pojo</span><br><span class="line">  mapper-locations: <span class="keyword">classpath</span>:mybatis<span class="regexp">/mapper/</span>*.xml</span><br></pre></td></tr></table></figure><h4 id="Controller-层-1"><a href="#Controller-层-1" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">&quot;/mybatis&quot;</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/addUser/&#123;id&#125;/&#123;name&#125;/&#123;pwd&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">addUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id, <span class="meta">@PathVariable</span>(<span class="string">&quot;name&quot;</span>) <span class="built_in">String</span> name, <span class="meta">@PathVariable</span>(<span class="string">&quot;pwd&quot;</span>) <span class="built_in">String</span> pwd</span>)</span> &#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(id, name, pwd);</span><br><span class="line">        userMapper.addUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;add a user successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/delUser/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">delUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id</span>)</span> &#123;</span><br><span class="line">        userMapper.delUser(id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;delete a user successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/updateUser/&#123;name&#125;/&#123;pwd&#125;/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">updateUser</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id, <span class="meta">@PathVariable</span>(<span class="string">&quot;name&quot;</span>) <span class="built_in">String</span> name, <span class="meta">@PathVariable</span>(<span class="string">&quot;pwd&quot;</span>) <span class="built_in">String</span> pwd</span>)</span> &#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User(id, name, pwd);</span><br><span class="line">        userMapper.updateUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;update a user successfully!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/getAllUser&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="function"><span class="title">getAllUser</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.getAllUser();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">&quot;/getUserById/&#123;id&#125;&quot;</span>)</span><br><span class="line">    <span class="keyword">public</span> User <span class="function"><span class="title">getUserById</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userMapper.getUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SpringData（数据库基于之前的-MyBatis-文章）&quot;&gt;&lt;a href=&quot;#SpringData（数据库基于之前的-MyBatis-文章）&quot; class=&quot;headerlink&quot; title=&quot;SpringData（数据库基于之前的 MyBatis 文章）&quot;&gt;&lt;/a&gt;SpringData（数据库基于之前的 MyBatis 文章）&lt;/h2&gt;&lt;p&gt;对于数据访问层，无论是 SQL 还是 NOSQL，SpringBoot 底层都是采用 SpringData 的方式进行统一处理。SpringData 是 Spring 中与 SpringBoot、SpringCloud 等齐名的知名项目。&lt;/p&gt;
&lt;p&gt;新建 SpringBoot 项目，导入 Lombok、Spring Web、JDBC API 和 MySQL Driver 依赖。&lt;/p&gt;
&lt;h3 id=&quot;整合-JDBC&quot;&gt;&lt;a href=&quot;#整合-JDBC&quot; class=&quot;headerlink&quot; title=&quot;整合 JDBC&quot;&gt;&lt;/a&gt;整合 JDBC&lt;/h3&gt;&lt;h4 id=&quot;JDBCTemplate&quot;&gt;&lt;a href=&quot;#JDBCTemplate&quot; class=&quot;headerlink&quot; title=&quot;JDBCTemplate&quot;&gt;&lt;/a&gt;JDBCTemplate&lt;/h4&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(十)</title>
    <link href="http://guest997.tk/2021/08/21/springboot-expound10/"/>
    <id>http://guest997.tk/2021/08/21/springboot-expound10/</id>
    <published>2021-08-21T02:47:20.000Z</published>
    <updated>2021-09-02T05:17:09.424Z</updated>
    
    <content type="html"><![CDATA[<h2 id="员工管理系统（续二）"><a href="#员工管理系统（续二）" class="headerlink" title="员工管理系统（续二）"></a>员工管理系统（续二）</h2><h3 id="修改员工信息"><a href="#修改员工信息" class="headerlink" title="修改员工信息"></a>修改员工信息</h3><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@<span class="constructor">GetMapping(<span class="string">&quot;/updateEmp/&#123;id&#125;&quot;</span>)</span></span><br><span class="line">public String <span class="keyword">to</span><span class="constructor">UpdatePage(@PathVariable(<span class="string">&quot;id&quot;</span>)</span> Integer id, Model model) &#123;</span><br><span class="line">    Employee employee = employeeDao.get<span class="constructor">EmployeeById(<span class="params">id</span>)</span>;</span><br><span class="line">    model.add<span class="constructor">Attribute(<span class="string">&quot;emp&quot;</span>, <span class="params">employee</span>)</span>;</span><br><span class="line">    Collection&lt;Department&gt; departments = departmentDao.get<span class="constructor">Departments()</span>;</span><br><span class="line">    model.add<span class="constructor">Attribute(<span class="string">&quot;departments&quot;</span>, <span class="params">departments</span>)</span>;</span><br><span class="line">    return <span class="string">&quot;emp/update&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="constructor">PostMapping(<span class="string">&quot;/updateEmp&quot;</span>)</span></span><br><span class="line">public String update<span class="constructor">Emp(Employee <span class="params">employee</span>)</span> &#123;</span><br><span class="line">    employeeDao.save<span class="constructor">Employee(<span class="params">employee</span>)</span>;</span><br><span class="line">    return <span class="string">&quot;redirect:/getEmps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改员工页面"><a href="#修改员工页面" class="headerlink" title="修改员工页面"></a>修改员工页面</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--list.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">updateEmp</span>/&#125;</span><span class="xml"><span class="tag"><span class="string">+$</span></span></span><span class="template-variable">&#123;emp.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-primary&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">updateEmp</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--由于后端增加和修改员工使用的是同一个方法，所以为了不让其增加员工，需要传一个 id 给后端。--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>lastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getLastName()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">               <span class="attr">placeholder</span>=<span class="string">&quot;Guest997&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getEmail()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">               <span class="attr">placeholder</span>=<span class="string">&quot;1036635267@qq.com&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getGender()==1&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getGender()==0&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:selected</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getDepartment().getId()==department.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;department:$</span></span></span><span class="template-variable">&#123;departments&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;department.getDepartmentName()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;department.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$</span></span></span><span class="template-tag">&#123;#<span class="name">dates.format</span>(emp.getBirth(),&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;1999-06-01 00:00:00&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="删除员工"><a href="#删除员工" class="headerlink" title="删除员工"></a>删除员工</h3><h4 id="Controller-层-1"><a href="#Controller-层-1" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">&quot;/delEmp/&#123;id&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">delEmp</span>(<span class="params"><span class="meta">@PathVariable</span>(<span class="string">&quot;id&quot;</span>) Integer id, Model model</span>)</span> &#123;</span><br><span class="line">    employeeDao.deleteEmployee(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/getEmps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="增加删除链接按钮"><a href="#增加删除链接按钮" class="headerlink" title="增加删除链接按钮"></a>增加删除链接按钮</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">delEmp</span>/&#125;</span><span class="xml"><span class="tag"><span class="string">+$</span></span></span><span class="template-variable">&#123;emp.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-danger&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="404-和注销"><a href="#404-和注销" class="headerlink" title="404 和注销"></a>404 和注销</h3><p>直接将404页面放在 error 目录下即可。</p><h4 id="Controller-层-2"><a href="#Controller-层-2" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">&quot;/user&quot;</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/logout&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String logout(HttpSession httpSession) &#123;</span><br><span class="line">        <span class="comment">//使 session 失效</span></span><br><span class="line">        httpSession.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/index.html&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="增加注销链接按钮"><a href="#增加注销链接按钮" class="headerlink" title="增加注销链接按钮"></a>增加注销链接按钮</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--commons.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">user</span>/logout&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;员工管理系统（续二）&quot;&gt;&lt;a href=&quot;#员工管理系统（续二）&quot; class=&quot;headerlink&quot; title=&quot;员工管理系统（续二）&quot;&gt;&lt;/a&gt;员工管理系统（续二）&lt;/h2&gt;&lt;h3 id=&quot;修改员工信息&quot;&gt;&lt;a href=&quot;#修改员工信息&quot; class=&quot;headerlink&quot; title=&quot;修改员工信息&quot;&gt;&lt;/a&gt;修改员工信息&lt;/h3&gt;&lt;h4 id=&quot;Controller-层&quot;&gt;&lt;a href=&quot;#Controller-层&quot; class=&quot;headerlink&quot; title=&quot;Controller 层&quot;&gt;&lt;/a&gt;Controller 层&lt;/h4&gt;&lt;figure class=&quot;highlight reasonml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;constructor&quot;&gt;GetMapping(&lt;span class=&quot;string&quot;&gt;&amp;quot;/updateEmp/&amp;#123;id&amp;#125;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public String &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;constructor&quot;&gt;UpdatePage(@PathVariable(&lt;span class=&quot;string&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;)&lt;/span&gt; Integer id, Model model) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Employee employee = employeeDao.get&lt;span class=&quot;constructor&quot;&gt;EmployeeById(&lt;span class=&quot;params&quot;&gt;id&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    model.add&lt;span class=&quot;constructor&quot;&gt;Attribute(&lt;span class=&quot;string&quot;&gt;&amp;quot;emp&amp;quot;&lt;/span&gt;, &lt;span class=&quot;params&quot;&gt;employee&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Collection&amp;lt;Department&amp;gt; departments = departmentDao.get&lt;span class=&quot;constructor&quot;&gt;Departments()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    model.add&lt;span class=&quot;constructor&quot;&gt;Attribute(&lt;span class=&quot;string&quot;&gt;&amp;quot;departments&amp;quot;&lt;/span&gt;, &lt;span class=&quot;params&quot;&gt;departments&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;string&quot;&gt;&amp;quot;emp/update&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;constructor&quot;&gt;PostMapping(&lt;span class=&quot;string&quot;&gt;&amp;quot;/updateEmp&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public String update&lt;span class=&quot;constructor&quot;&gt;Emp(Employee &lt;span class=&quot;params&quot;&gt;employee&lt;/span&gt;)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    employeeDao.save&lt;span class=&quot;constructor&quot;&gt;Employee(&lt;span class=&quot;params&quot;&gt;employee&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;string&quot;&gt;&amp;quot;redirect:/getEmps&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;修改员工页面&quot;&gt;&lt;a href=&quot;#修改员工页面&quot; class=&quot;headerlink&quot; title=&quot;修改员工页面&quot;&gt;&lt;/a&gt;修改员工页面&lt;/h4&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(九)</title>
    <link href="http://guest997.tk/2021/08/21/springboot-expound09/"/>
    <id>http://guest997.tk/2021/08/21/springboot-expound09/</id>
    <published>2021-08-21T02:40:13.000Z</published>
    <updated>2021-09-02T05:17:09.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="员工管理系统（续一）"><a href="#员工管理系统（续一）" class="headerlink" title="员工管理系统（续一）"></a>员工管理系统（续一）</h2><h3 id="登陆功能实现"><a href="#登陆功能实现" class="headerlink" title="登陆功能实现"></a>登陆功能实现</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--使用了 thymeleaf 中的工具类--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;msg&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;not #strings.isEmpty(msg)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">&quot;/user&quot;</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(<span class="meta-string">&quot;/login&quot;</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String userLogin(<span class="meta">@RequestParam(<span class="meta-string">&quot;username&quot;</span>)</span> String username, <span class="meta">@RequestParam(<span class="meta-string">&quot;password&quot;</span>)</span> String password, Model model, HttpSession httpSession) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(username) &amp;&amp; <span class="string">&quot;123456&quot;</span>.equals(password)) &#123;</span><br><span class="line">            <span class="comment">//拦截器用到的属性</span></span><br><span class="line">            httpSession.setAttribute(<span class="string">&quot;loginUser&quot;</span>, username);</span><br><span class="line">            <span class="comment">//为什么不直接 return&quot;dashboard&quot;，而是使用重定向？是因为前端成功登录后跳转到新页面，地址栏中会有请求参数，这样不好看也不安全。</span></span><br><span class="line">            <span class="comment">//templates 文件夹下的页面不能直接访问，需要在自定义视图解析器中添加相应的映射跳转到 dashboard。</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;redirect:/dashboard.html&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;账号或密码错误！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加映射"><a href="#添加映射" class="headerlink" title="添加映射"></a>添加映射</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/dashboard.html&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="登录拦截"><a href="#登录拦截" class="headerlink" title="登录拦截"></a>登录拦截</h4><p>不管登不登录，访问 localhost:8080/dashboard 都是能够直接进入的，这不合逻辑，应该是要登录了才能进去，因此就需要个拦截器进行拦截。</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginHandlerInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Object loginUser = request.getSession().getAttribute(<span class="string">&quot;loginUser&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (loginUser == <span class="keyword">null</span>)&#123;</span><br><span class="line">            request.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;权限不足，请先登录！&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/index.html&quot;</span>).forward(request, response);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/dashboard.html&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//addPathPatterns 表示需要拦截的请求，excludePathPatterns 则表示不被拦截的请求。</span></span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginHandlerInterceptor()).addPathPatterns(<span class="string">&quot;/**&quot;</span>).excludePathPatterns(<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/user/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="展示员工列表"><a href="#展示员工列表" class="headerlink" title="展示员工列表"></a>展示员工列表</h3><h4 id="Controller-层-1"><a href="#Controller-层-1" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.dao.EmployeeDao;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.Employee;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmployeeDao employeeDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getEmps&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmps</span><span class="params">(Model model)</span></span>&#123;</span><br><span class="line">        Collection&lt;Employee&gt; employees = employeeDao.getEmployees();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;emps&quot;</span>, employees);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;emp/list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽取公共页面"><a href="#抽取公共页面" class="headerlink" title="抽取公共页面"></a>抽取公共页面</h4><p>头部导航栏和侧边导航栏是一直不变的。所以我们就把公共的 html 代码放在了 common/commons.html 页面中。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--头部导航栏--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用 th:fragment 表示这是一个组件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;topbar&quot;</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--侧边导航栏--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2 d-none d-md-block bg-light sidebar&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--使用 th:class 接管，是为了实现点击链接文字高亮。当传进来的参数为指定值，就是 nav-link active 激活高亮状态，否则就不高亮。--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;active==&#x27;dashboard.html&#x27;?&#x27;nav-link active&#x27;:&#x27;nav-link&#x27;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">dashboard.html</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;active==&#x27;list.html&#x27;?&#x27;nav-link active&#x27;:&#x27;nav-link&#x27;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">getEmps</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">             <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">             <span class="attr">class</span>=<span class="string">&quot;feather feather-users&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">circle</span> <span class="attr">cx</span>=<span class="string">&quot;9&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;7&quot;</span> <span class="attr">r</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">circle</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M23 21v-2a4 4 0 0 0-3-3.87&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M16 3.13a4 4 0 0 1 0 7.75&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br><span class="line"><span class="xml">        员工管理</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">...</span></span><br></pre></td></tr></table></figure><p>抽取出来后，就在需要地方放进去就好了。<strong>注意：在同一个页面头部和侧边导航栏的 active 参数都要设置并且是一样的，因为我们想要的是其中一个链接文字高亮。</strong></p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--dashboard.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--头部导航栏--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~</span></span></span><span class="template-variable">&#123;common/commons::topbar(active=&#x27;dashboard.html&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--侧边导航栏--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~</span></span></span><span class="template-variable">&#123;common/commons::sidebar(active=&#x27;dashboard.html&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--list.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--头部导航栏--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~</span></span></span><span class="template-variable">&#123;common/commons::topbar(active=&#x27;list.html&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--侧边导航栏--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~</span></span></span><span class="template-variable">&#123;common/commons::sidebar(active=&#x27;list.html&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="数据展示"><a href="#数据展示" class="headerlink" title="数据展示"></a>数据展示</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;table-responsive&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped table-sm&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>lastName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>department<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;emp:$</span></span></span><span class="template-variable">&#123;emps&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getLastName()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getEmail()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.getGender()==0?&#x27;女&#x27;:&#x27;男&#x27;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;emp.department.getDepartmentName()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="comment">&lt;!--使用了 thymeleaf 中的工具类--&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-tag">&#123;#<span class="name">dates.format</span>(emp.getBirth(), &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="增加员工"><a href="#增加员工" class="headerlink" title="增加员工"></a>增加员工</h3><h4 id="Controller-层-2"><a href="#Controller-层-2" class="headerlink" title="Controller 层"></a>Controller 层</h4><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@Autowired</span><br><span class="line"><span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line"></span><br><span class="line">@<span class="constructor">GetMapping(<span class="string">&quot;/addEmp&quot;</span>)</span></span><br><span class="line">public String <span class="keyword">to</span><span class="constructor">AddPage(Model <span class="params">model</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//添加员工时需要传所有的部门信息给前端，好让前端展示部门名字。总不能在前端就显示个部门 id 给用户添加信息。</span></span><br><span class="line">    Collection&lt;Department&gt; departments = departmentDao.get<span class="constructor">Departments()</span>;</span><br><span class="line">    model.add<span class="constructor">Attribute(<span class="string">&quot;departments&quot;</span>,<span class="params">departments</span>)</span>;</span><br><span class="line">    return <span class="string">&quot;emp/add&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="constructor">PostMapping(<span class="string">&quot;/addEmp&quot;</span>)</span></span><br><span class="line">public String add<span class="constructor">Emp(Employee <span class="params">employee</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//由于前端传过来的只有部门 id，所以可以看下 SpringBoot 是怎么自动封装成 Department 对象的。</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(employee);</span><br><span class="line">    employeeDao.save<span class="constructor">Employee(<span class="params">employee</span>)</span>;</span><br><span class="line">    <span class="comment">//重定向到上面的 getEmps 请求，重新查询员工列表。不能使用转发，因为可能会发生表单重复提交。</span></span><br><span class="line">    return <span class="string">&quot;redirect:/getEmps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="增加员工页面"><a href="#增加员工页面" class="headerlink" title="增加员工页面"></a>增加员工页面</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--list.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-success&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">addEmp</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>增加员工<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--add.html--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">addEmp</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>lastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Guest997&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;1036635267@qq.com&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">checked</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--因为 th:value 就只传了个 id 到后端，所以 name 属性也就设置个 id 才行，否则封装成对象时就不知道该对应哪个属性了。--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="comment">&lt;!--使用 th:value 获取部门 id 是因为后端只需要通过部门 id 就能获取整个部门信息--&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;department:$</span></span></span><span class="template-variable">&#123;departments&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;department.getDepartmentName()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">                    <span class="attr">th:value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;department.getId()&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;1999-06-01 00:00:00&quot;</span> <span class="attr">required</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h4><p>更改日期格式直接在 yaml 配置文件中如下修改即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#关闭 thymeleaf 缓存</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#配置页面国际化</span></span><br><span class="line">  <span class="attr">messages:</span></span><br><span class="line">    <span class="attr">basename:</span> <span class="string">i18n.login</span></span><br><span class="line">  <span class="comment">#修改日期格式</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">format:</span></span><br><span class="line">     <span class="attr">date:</span> <span class="string">yyyy-MM-dd</span> <span class="string">HH:mm:ss</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;员工管理系统（续一）&quot;&gt;&lt;a href=&quot;#员工管理系统（续一）&quot; class=&quot;headerlink&quot; title=&quot;员工管理系统（续一）&quot;&gt;&lt;/a&gt;员工管理系统（续一）&lt;/h2&gt;&lt;h3 id=&quot;登陆功能实现&quot;&gt;&lt;a href=&quot;#登陆功能实现&quot; class=&quot;headerlink&quot; title=&quot;登陆功能实现&quot;&gt;&lt;/a&gt;登陆功能实现&lt;/h3&gt;&lt;figure class=&quot;highlight dust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!--使用了 thymeleaf 中的工具类--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;color: red&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;th:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;msg&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;th:if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;$&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;template-variable&quot;&gt;&amp;#123;not #strings.isEmpty(msg)&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;Controller-层&quot;&gt;&lt;a href=&quot;#Controller-层&quot; class=&quot;headerlink&quot; title=&quot;Controller 层&quot;&gt;&lt;/a&gt;Controller 层&lt;/h4&gt;&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; ml.guest997.controller;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.stereotype.Controller;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.ui.Model;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span class=&quot;keyword&quot;&gt;annotation&lt;/span&gt;.RequestMapping;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.springframework.web.bind.&lt;span class=&quot;keyword&quot;&gt;annotation&lt;/span&gt;.RequestParam;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.util.StringUtils;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpSession;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Controller&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@RequestMapping(&lt;span class=&quot;meta-string&quot;&gt;&amp;quot;/user&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LoginController&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@RequestMapping(&lt;span class=&quot;meta-string&quot;&gt;&amp;quot;/login&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String userLogin(&lt;span class=&quot;meta&quot;&gt;@RequestParam(&lt;span class=&quot;meta-string&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt;)&lt;/span&gt; String username, &lt;span class=&quot;meta&quot;&gt;@RequestParam(&lt;span class=&quot;meta-string&quot;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;)&lt;/span&gt; String password, Model model, HttpSession httpSession) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!StringUtils.isEmpty(username) &amp;amp;&amp;amp; &lt;span class=&quot;string&quot;&gt;&amp;quot;123456&amp;quot;&lt;/span&gt;.equals(password)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//拦截器用到的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            httpSession.setAttribute(&lt;span class=&quot;string&quot;&gt;&amp;quot;loginUser&amp;quot;&lt;/span&gt;, username);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//为什么不直接 return&amp;quot;dashboard&amp;quot;，而是使用重定向？是因为前端成功登录后跳转到新页面，地址栏中会有请求参数，这样不好看也不安全。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//templates 文件夹下的页面不能直接访问，需要在自定义视图解析器中添加相应的映射跳转到 dashboard。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;redirect:/dashboard.html&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            model.addAttribute(&lt;span class=&quot;string&quot;&gt;&amp;quot;msg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;账号或密码错误！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(八)</title>
    <link href="http://guest997.tk/2021/08/20/springboot-expound08/"/>
    <id>http://guest997.tk/2021/08/20/springboot-expound08/</id>
    <published>2021-08-20T02:16:11.000Z</published>
    <updated>2021-09-02T05:17:09.385Z</updated>
    
    <content type="html"><![CDATA[<h2 id="员工管理系统（没有关联数据库）"><a href="#员工管理系统（没有关联数据库）" class="headerlink" title="员工管理系统（没有关联数据库）"></a>员工管理系统（没有关联数据库）</h2><p>项目源码会放在我的网盘 <strong>学习-SpringBoot</strong> 目录下的 <strong>StaffManagement</strong> 压缩包。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>新建 SpringBoot 项目，导入 Lombok、Spring Web 和 Thymeleaf 依赖。导入所有的静态资源，如下图。<strong>仔细查看所有 html 页面中的 thymeleaf 语法当作复习一遍。并且每写一个前后端交互功能，也要一个个对着测试，是否将参数成功传给后端，后端处理完数据，前端能否正常接收并展示。</strong><br><img data-src="/images/springboot-expound08.md-0.png"></p><h4 id="POJO-层"><a href="#POJO-层" class="headerlink" title="POJO 层"></a>POJO 层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Department</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String departmentName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> lastName;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> email;</span><br><span class="line">    <span class="keyword">private</span> Integer gender;     <span class="comment">//0:女 1:男</span></span><br><span class="line">    <span class="keyword">private</span> Department department;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">Date</span> birth;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="title">Employee</span>(<span class="params">Integer id, <span class="built_in">String</span> lastName, <span class="built_in">String</span> email, Integer gender, Department department</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">        <span class="built_in">this</span>.email = email;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="built_in">this</span>.department = department;</span><br><span class="line">        <span class="built_in">this</span>.birth = <span class="keyword">new</span> <span class="built_in">Date</span>();        <span class="comment">//直接使用 new Date() 赋值给 birth 属性</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Dao-层"><a href="#Dao-层" class="headerlink" title="Dao 层"></a>Dao 层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.Department;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DepartmentDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Department&gt; departments;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//创建部门表</span></span><br><span class="line">        departments = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        departments.put(<span class="number">101</span>, <span class="keyword">new</span> Department(<span class="number">101</span>, <span class="string">&quot;调研部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">102</span>, <span class="keyword">new</span> Department(<span class="number">102</span>, <span class="string">&quot;宣传部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">103</span>, <span class="keyword">new</span> Department(<span class="number">103</span>, <span class="string">&quot;发行部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">104</span>, <span class="keyword">new</span> Department(<span class="number">104</span>, <span class="string">&quot;市场部&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得所有部门信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Department&gt; <span class="title">getDepartments</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departments.values();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过 id 获取部门信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Department <span class="title">getDepartmentById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departments.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.Department;</span><br><span class="line"><span class="keyword">import</span> ml.guest997.pojo.Employee;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeDao</span> </span>&#123;</span><br><span class="line">    <span class="comment">//模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Employee&gt; employees;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//创建员工表</span></span><br><span class="line">        employees = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">//至于为什么不直接使用 departmentDao.getDepartmentById() 插入部门信息，是因为静态代码块会先于 Spring 依赖注入。</span></span><br><span class="line">        employees.put(<span class="number">1001</span>, <span class="keyword">new</span> Employee(<span class="number">1001</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;1036635267@qq.com&quot;</span>, <span class="number">0</span>, <span class="keyword">new</span> Department(<span class="number">101</span>, <span class="string">&quot;调研部&quot;</span>)));</span><br><span class="line">        employees.put(<span class="number">1002</span>, <span class="keyword">new</span> Employee(<span class="number">1002</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;1036635267@qq.com&quot;</span>, <span class="number">1</span>, <span class="keyword">new</span> Department(<span class="number">102</span>, <span class="string">&quot;宣传部&quot;</span>)));</span><br><span class="line">        employees.put(<span class="number">1003</span>, <span class="keyword">new</span> Employee(<span class="number">1003</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;1036635267@qq.com&quot;</span>, <span class="number">0</span>, <span class="keyword">new</span> Department(<span class="number">103</span>, <span class="string">&quot;发行部&quot;</span>)));</span><br><span class="line">        employees.put(<span class="number">1004</span>, <span class="keyword">new</span> Employee(<span class="number">1004</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;1036635267@qq.com&quot;</span>, <span class="number">1</span>, <span class="keyword">new</span> Department(<span class="number">104</span>, <span class="string">&quot;市场部&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//id 初始化（为了保证 id 一定存在）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> initId = <span class="number">1005</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加或修改一个员工</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveEmployee</span><span class="params">(Employee employee)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//实现 id 自增，既然自增了也就保证了 id 唯一。</span></span><br><span class="line">        <span class="keyword">if</span> (employee.getId() == <span class="keyword">null</span>) &#123;</span><br><span class="line">            employee.setId(initId++);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//至于为什么不对 lastName 和 email 属性进行操作，是因为 employee 对象已经有这两个属性的值了，不管它是否为空值都是已经存在不需要再更改了。（其实如果想要保证这两个属性不能为空值，直接在前端提示即可；当然为了更加安全，也可以在这里进行非空值判断再重新赋值）</span></span><br><span class="line">        <span class="comment">//至于为什么要绕一圈重新设置 department 对象属性值，是因为传进来的 employee 对象中的 department 对象属性可能只有 id 属性值，而我们想要的是 department 对象全部属性值就可以通过 departmentDao.getDepartmentById() 直接将整个部门信息拿过并赋值。</span></span><br><span class="line">        employee.setDepartment(departmentDao.getDepartmentById(employee.getDepartment().getId()));</span><br><span class="line">        employees.put(employee.getId(), employee);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询所有员工信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection&lt;Employee&gt; <span class="title">getEmployees</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employees.values();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过 id 获取员工信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Employee <span class="title">getEmployeeById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employees.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除员工</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteEmployee</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        employees.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="首页实现"><a href="#首页实现" class="headerlink" title="首页实现"></a>首页实现</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭 thymeleaf 缓存</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>首页跳转有很多种方式，在这里就用 Configuration 进行跳转。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ViewControllerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="页面国际化（在-IDEA-中把编码全部设置为-UTF-8）"><a href="#页面国际化（在-IDEA-中把编码全部设置为-UTF-8）" class="headerlink" title="页面国际化（在 IDEA 中把编码全部设置为 UTF-8）"></a>页面国际化（在 IDEA 中把编码全部设置为 UTF-8）</h3><p>页面国际化其实就是多语言切换。<strong>查看 resources/i18n 下的所有 properties 文件。查看 index.html 文件中的所有#{}，这个就是 thymeleaf 语法中的获取国际化内容。</strong></p><h4 id="配置文件生效"><a href="#配置文件生效" class="headerlink" title="配置文件生效"></a>配置文件生效</h4><p>在 MessageSourceAutoConfiguration 类下的 messageSource() 已经自动配置好了管理国际化资源文件的组件。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> MessageSource <span class="function"><span class="title">messageSource</span>(<span class="params">MessageSourceProperties properties</span>)</span> &#123;</span><br><span class="line">    ResourceBundleMessageSource messageSource = <span class="keyword">new</span> ResourceBundleMessageSource();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.hasText(properties.getBasename())) &#123;</span><br><span class="line">        <span class="comment">//设置国际化文件名（去掉语言和国家名字）</span></span><br><span class="line">        messageSource.setBasenames(StringUtils</span><br><span class="line">                                   .commaDelimitedListToStringArray(StringUtils.trimAllWhitespace(properties.getBasename())));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties.getEncoding() != <span class="literal">null</span>) &#123;</span><br><span class="line">        messageSource.setDefaultEncoding(properties.getEncoding().name());</span><br><span class="line">    &#125;</span><br><span class="line">    messageSource.setFallbackToSystemLocale(properties.isFallbackToSystemLocale());</span><br><span class="line">    Duration cacheDuration = properties.getCacheDuration();</span><br><span class="line">    <span class="keyword">if</span> (cacheDuration != <span class="literal">null</span>) &#123;</span><br><span class="line">        messageSource.setCacheMillis(cacheDuration.toMillis());</span><br><span class="line">    &#125;</span><br><span class="line">    messageSource.setAlwaysUseMessageFormat(properties.isAlwaysUseMessageFormat());</span><br><span class="line">    messageSource.setUseCodeAsDefaultMessage(properties.isUseCodeAsDefaultMessage());</span><br><span class="line">    <span class="keyword">return</span> messageSource;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment">#关闭 thymeleaf 缓存</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#配置页面国际化</span></span><br><span class="line">  <span class="attr">messages:</span></span><br><span class="line">    <span class="attr">basename:</span> <span class="string">i18n.login</span></span><br></pre></td></tr></table></figure><h4 id="配置国际化解析"><a href="#配置国际化解析" class="headerlink" title="配置国际化解析"></a>配置国际化解析</h4><p>这样设置虽然是能够正常显示中文，但是还要实现点击按钮切换语言。</p><p>在 WebMvcAutoConfiguration 类中，找到 EnableWebMvcConfiguration 下的 localeResolver()。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(name = DispatcherServlet.LOCALE_RESOLVER_BEAN_NAME)</span></span><br><span class="line"><span class="meta">@SuppressWarnings(<span class="meta-string">&quot;deprecation&quot;</span>)</span></span><br><span class="line"><span class="keyword">public</span> LocaleResolver localeResolver() &#123;</span><br><span class="line">    <span class="comment">//容器中有用户配置的语言环境解析器就用用户的</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.webProperties.getLocaleResolver() == WebProperties.LocaleResolver.FIXED) &#123;</span><br><span class="line">        <span class="keyword">return</span> new FixedLocaleResolver(<span class="keyword">this</span>.webProperties.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.mvcProperties.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) &#123;</span><br><span class="line">        <span class="keyword">return</span> new FixedLocaleResolver(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//否则就用默认的</span></span><br><span class="line">    AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();</span><br><span class="line">    Locale locale = (<span class="keyword">this</span>.webProperties.getLocale() != <span class="literal">null</span>) ? <span class="keyword">this</span>.webProperties.getLocale()</span><br><span class="line">        : <span class="keyword">this</span>.mvcProperties.getLocale();</span><br><span class="line">    localeResolver.setDefaultLocale(locale);</span><br><span class="line">    <span class="keyword">return</span> localeResolver;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然有默认的可以参考，我们就点进去查看 AcceptHeaderLocaleResolver 类下的 resolveLocale()。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Locale resolveLocale(HttpServletRequest request) &#123;</span><br><span class="line">    Locale defaultLocale = <span class="keyword">this</span>.getDefaultLocale();</span><br><span class="line">    <span class="comment">//默认的就是根据请求头中的语言环境进行国际化</span></span><br><span class="line">    <span class="keyword">if</span> (defaultLocale != <span class="literal">null</span> &amp;&amp; request.getHeader(<span class="string">&quot;Accept-Language&quot;</span>) == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> defaultLocale;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Locale requestLocale = request.getLocale();</span><br><span class="line">        List&lt;Locale&gt; supportedLocales = <span class="keyword">this</span>.getSupportedLocales();</span><br><span class="line">        <span class="keyword">if</span> (!supportedLocales.isEmpty() &amp;&amp; !supportedLocales.contains(requestLocale)) &#123;</span><br><span class="line">            Locale supportedLocale = <span class="keyword">this</span>.findSupportedLocale(request, supportedLocales);</span><br><span class="line">            <span class="keyword">if</span> (supportedLocale != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> supportedLocale;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> defaultLocale != <span class="literal">null</span> ? defaultLocale : requestLocale;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> requestLocale;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 a 链接按钮上携带语言环境，点击按钮使我们的国际化资源生效，就需要让我们自己的 Locale 生效，我们就需要写一个自己的 LocaleResolver。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--传入参数不使用 ？使用(key=value)--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">index.html</span>(l=&#x27;zh_CN&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">index.html</span>(l=&#x27;en_US&#x27;)&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.LocaleResolver;</span><br><span class="line"><span class="keyword">import</span> org.thymeleaf.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：这里的组件名一定要是 localeResolver，否则就是不生效的。</span></span><br><span class="line"><span class="meta">@Configuration(&quot;localeResolver&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLocaleResolver</span> <span class="keyword">implements</span> <span class="title">LocaleResolver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Locale <span class="title">resolveLocale</span><span class="params">(HttpServletRequest httpServletRequest)</span> </span>&#123;</span><br><span class="line">        String language = httpServletRequest.getParameter(<span class="string">&quot;l&quot;</span>);</span><br><span class="line">        Locale locale = Locale.getDefault();        <span class="comment">//通过下面的非空判断，没有获取到用户配置的就使用 SpringBoot 默认的配置。</span></span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(language))&#123;</span><br><span class="line">            <span class="comment">//分割请求参数，语言_地区</span></span><br><span class="line">            String[] split = language.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            locale = <span class="keyword">new</span> Locale(split[<span class="number">0</span>],split[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLocale</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Locale locale)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;员工管理系统（没有关联数据库）&quot;&gt;&lt;a href=&quot;#员工管理系统（没有关联数据库）&quot; class=&quot;headerlink&quot; title=&quot;员工管理系统（没有关联数据库）&quot;&gt;&lt;/a&gt;员工管理系统（没有关联数据库）&lt;/h2&gt;&lt;p&gt;项目源码会放在我的网盘 &lt;strong&gt;学习-SpringBoot&lt;/strong&gt; 目录下的 &lt;strong&gt;StaffManagement&lt;/strong&gt; 压缩包。&lt;/p&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h3&gt;&lt;p&gt;新建 SpringBoot 项目，导入 Lombok、Spring Web 和 Thymeleaf 依赖。导入所有的静态资源，如下图。&lt;strong&gt;仔细查看所有 html 页面中的 thymeleaf 语法当作复习一遍。并且每写一个前后端交互功能，也要一个个对着测试，是否将参数成功传给后端，后端处理完数据，前端能否正常接收并展示。&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&quot;/images/springboot-expound08.md-0.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;POJO-层&quot;&gt;&lt;a href=&quot;#POJO-层&quot; class=&quot;headerlink&quot; title=&quot;POJO 层&quot;&gt;&lt;/a&gt;POJO 层&lt;/h4&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(七)</title>
    <link href="http://guest997.tk/2021/08/20/springboot-expound07/"/>
    <id>http://guest997.tk/2021/08/20/springboot-expound07/</id>
    <published>2021-08-20T02:11:50.000Z</published>
    <updated>2021-09-02T05:17:07.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SpringMVC-自动配置原理"><a href="#SpringMVC-自动配置原理" class="headerlink" title="SpringMVC 自动配置原理"></a>SpringMVC 自动配置原理</h2><p>我们需要了解 SpringBoot 对 SpringMVC 做了哪些配置，包括如何扩展和定制。下面是官方文档内容。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动配置在 Spring 默认设置的基础上添加了以下功能：</span></span><br><span class="line">The auto-configuration adds the following features on top of Spring’s defaults:</span><br><span class="line"><span class="comment">//包含视图解析器</span></span><br><span class="line">Inclusion of ContentNegotiatingViewResolver and BeanNameViewResolver beans.</span><br><span class="line"><span class="comment">//支持提供静态资源，包括对 WebJars 的支持。</span></span><br><span class="line">Support <span class="keyword">for</span> serving static resources, including support <span class="keyword">for</span> WebJars </span><br><span class="line"><span class="comment">//自动注册 Converter（转换器：数据类型的转换）和 Formatter（格式化器）</span></span><br><span class="line">Automatic registration of Converter, GenericConverter, and Formatter beans.</span><br><span class="line"><span class="comment">//Http 消息转换器转换 Http 请求和响应，比如把对象转换为 JSON 字符串。</span></span><br><span class="line">Support <span class="keyword">for</span> HttpMessageConverters (covered later <span class="keyword">in</span> <span class="keyword">this</span> document).</span><br><span class="line"><span class="comment">//定义错误代码生成规则</span></span><br><span class="line">Automatic registration of MessageCodesResolver (covered later <span class="keyword">in</span> <span class="keyword">this</span> document).</span><br><span class="line"><span class="comment">//首页定制</span></span><br><span class="line">Static index.html support.</span><br><span class="line"><span class="comment">//图标定制</span></span><br><span class="line">Custom Favicon support (covered later <span class="keyword">in</span> <span class="keyword">this</span> document).</span><br><span class="line"><span class="comment">//绑定请求数据</span></span><br><span class="line">Automatic use of a ConfigurableWebBindingInitializer bean (covered later <span class="keyword">in</span> <span class="keyword">this</span> document).</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如果您希望保留 Spring Boot MVC 功能，并且希望添加其他 MVC 配置（拦截器、格式化程序、视图控制器和其他功能），则可以添加自己的 @configuration 类，类型为 webmvcconfiguer，但不添加 @EnableWebMvc。如果希望提供</span></span><br><span class="line"><span class="comment">RequestMappingHandlerMapping、RequestMappingHandlerAdapter 或 ExceptionHandlerExceptionResolver 的自定义实例，则可以声明 WebMVCregistrationAdapter 实例来提供此类组件。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">If you want to keep Spring Boot MVC features and you want to add additional MVC configuration </span><br><span class="line">(interceptors, formatters, view controllers, and other features), you can add your own </span><br><span class="line"><span class="meta">@Configuration</span> <span class="class"><span class="keyword">class</span> <span class="title">of</span> <span class="title">type</span> <span class="title">WebMvcConfigurer</span> <span class="title">but</span> <span class="title">without</span> <span class="meta">@EnableWebMvc</span>. <span class="title">If</span> <span class="title">you</span> <span class="title">wish</span> <span class="title">to</span> <span class="title">provide</span> </span></span><br><span class="line">custom instances of RequestMappingHandlerMapping, RequestMappingHandlerAdapter, or </span><br><span class="line">ExceptionHandlerExceptionResolver, you can declare a WebMvcRegistrationsAdapter instance to provide such components.</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果您想完全控制 Spring MVC，可以添加自己的 @Configuration，并用 @EnableWebMvc 进行注释。</span></span><br><span class="line">If you want to take complete control of Spring MVC, you can add your own <span class="meta">@Configuration</span> annotated with <span class="meta">@EnableWebMvc</span>.</span><br></pre></td></tr></table></figure><h3 id="视图解析器"><a href="#视图解析器" class="headerlink" title="视图解析器"></a>视图解析器</h3><h4 id="ContentNegotiatingViewResolver（内容协商视图解析器）"><a href="#ContentNegotiatingViewResolver（内容协商视图解析器）" class="headerlink" title="ContentNegotiatingViewResolver（内容协商视图解析器）"></a>ContentNegotiatingViewResolver（内容协商视图解析器）</h4><p>在 WebMvcAutoConfiguration 类中，找到 WebMvcAutoConfigurationAdapter 下的 ContentNegotiatingViewResolver 内部类。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ContentNegotiatingViewResolver 使用所有其他视图解析器来定位视图，因此它应该具有较高的优先级。</span></span><br><span class="line">public ContentNegotiatingViewResolver view<span class="constructor">Resolver(BeanFactory <span class="params">beanFactory</span>)</span> &#123;</span><br><span class="line">    ContentNegotiatingViewResolver resolver = <span class="keyword">new</span> <span class="constructor">ContentNegotiatingViewResolver()</span>;</span><br><span class="line">    resolver.set<span class="constructor">ContentNegotiationManager((ContentNegotiationManager)</span>beanFactory.get<span class="constructor">Bean(ContentNegotiationManager.<span class="params">class</span>)</span>);</span><br><span class="line">    resolver.set<span class="constructor">Order(-2147483648)</span>;</span><br><span class="line">    return resolver;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点进去查看这个类的 resolveViewName() 如何解析视图名称。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@Nullable</span><br><span class="line">public View resolve<span class="constructor">ViewName(String <span class="params">viewName</span>, Locale <span class="params">locale</span>)</span> throws Exception &#123;</span><br><span class="line">    RequestAttributes attrs = <span class="module-access"><span class="module"><span class="identifier">RequestContextHolder</span>.</span></span>get<span class="constructor">RequestAttributes()</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Assert</span>.</span></span>state(attrs instanceof ServletRequestAttributes, <span class="string">&quot;No current ServletRequestAttributes&quot;</span>);</span><br><span class="line">    List&lt;MediaType&gt; requestedMediaTypes = this.get<span class="constructor">MediaTypes(((ServletRequestAttributes)</span>attrs).get<span class="constructor">Request()</span>);</span><br><span class="line">    <span class="keyword">if</span> (requestedMediaTypes != null) &#123;</span><br><span class="line">        <span class="comment">//获取候选的视图对象</span></span><br><span class="line">        List&lt;View&gt; candidateViews = this.get<span class="constructor">CandidateViews(<span class="params">viewName</span>, <span class="params">locale</span>, <span class="params">requestedMediaTypes</span>)</span>;</span><br><span class="line">        <span class="comment">//选择一个最适合的视图对象，然后把这个对象返回</span></span><br><span class="line">        View bestView = this.get<span class="constructor">BestView(<span class="params">candidateViews</span>, <span class="params">requestedMediaTypes</span>, <span class="params">attrs</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (bestView != null) &#123;</span><br><span class="line">            return bestView;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="operator"></span></span><br><span class="line"><span class="operator">    ...</span></span><br><span class="line"><span class="operator"></span>&#125;</span><br></pre></td></tr></table></figure><p>继续点击查看 getCandidateViews() 如何获取候选的视图解析器。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;View&gt; get<span class="constructor">CandidateViews(String <span class="params">viewName</span>, Locale <span class="params">locale</span>, List&lt;MediaType&gt; <span class="params">requestedMediaTypes</span>)</span> throws Exception &#123;</span><br><span class="line">    List&lt;View&gt; candidateViews = <span class="keyword">new</span> <span class="constructor">ArrayList()</span>;</span><br><span class="line">    <span class="keyword">if</span> (this.viewResolvers != null) &#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">Assert</span>.</span></span>state(this.contentNegotiationManager != null, <span class="string">&quot;No ContentNegotiationManager set&quot;</span>);</span><br><span class="line">        <span class="comment">//获取 viewResolvers 集合把所有的视图解析器拿来，进行 while 循环挨个解析。</span></span><br><span class="line">        Iterator var5 = this.viewResolvers.iterator<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(var5.has<span class="constructor">Next()</span>) &#123;</span><br><span class="line">            ViewResolver viewResolver = (ViewResolver)var5.next<span class="literal">()</span>;</span><br><span class="line">            View view = viewResolver.resolve<span class="constructor">ViewName(<span class="params">viewName</span>, <span class="params">locale</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (view != null) &#123;</span><br><span class="line">                candidateViews.add(view);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Iterator var8 = requestedMediaTypes.iterator<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(var8.has<span class="constructor">Next()</span>) &#123;</span><br><span class="line">                MediaType requestedMediaType = (MediaType)var8.next<span class="literal">()</span>;</span><br><span class="line">                List&lt;String&gt; extensions = this.contentNegotiationManager.resolve<span class="constructor">FileExtensions(<span class="params">requestedMediaType</span>)</span>;</span><br><span class="line">                Iterator var11 = extensions.iterator<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(var11.has<span class="constructor">Next()</span>) &#123;</span><br><span class="line">                    String extension = (String)var11.next<span class="literal">()</span>;</span><br><span class="line">                    String viewNameWithExtension = viewName + <span class="character">&#x27;.&#x27;</span> + extension;</span><br><span class="line">                    view = viewResolver.resolve<span class="constructor">ViewName(<span class="params">viewNameWithExtension</span>, <span class="params">locale</span>)</span>;</span><br><span class="line">                    <span class="keyword">if</span> (view != null) &#123;</span><br><span class="line">                        candidateViews.add(view);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="module-access"><span class="module"><span class="identifier">CollectionUtils</span>.</span></span>is<span class="constructor">Empty(<span class="params">this</span>.<span class="params">defaultViews</span>)</span>) &#123;</span><br><span class="line">        candidateViews.add<span class="constructor">All(<span class="params">this</span>.<span class="params">defaultViews</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return candidateViews;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ContentNegotiatingViewResolver 这个视图解析器就是用来组合所有的视图解析器的。而 viewResolvers 又是在哪里被赋值的？</strong></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">protected void init<span class="constructor">ServletContext(ServletContext <span class="params">servletContext</span>)</span> &#123;</span><br><span class="line">    <span class="comment">//从 beanFactory 工具类中获取容器的所有视图解析器</span></span><br><span class="line">    Collection&lt;ViewResolver&gt; matchingBeans = <span class="module-access"><span class="module"><span class="identifier">BeanFactoryUtils</span>.</span></span>beans<span class="constructor">OfTypeIncludingAncestors(<span class="params">this</span>.<span class="params">obtainApplicationContext</span>()</span>, <span class="module-access"><span class="module"><span class="identifier">ViewResolver</span>.</span></span><span class="keyword">class</span>).values<span class="literal">()</span>;<span class="operator"></span></span><br><span class="line"><span class="operator">    ...</span></span><br><span class="line"><span class="operator"></span>&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义视图解析器"><a href="#自定义视图解析器" class="headerlink" title="自定义视图解析器"></a>自定义视图解析器</h4><p>既然它是在容器中去找视图解析器，我们就可以自己给容器中去添加一个视图解析器，这个类就会帮我们自动的将它组合进来。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ml.guest997.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.View;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ViewResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfigurer</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewResolver <span class="title">myViewResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyViewResolver();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义视图解析器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyViewResolver</span> <span class="keyword">implements</span> <span class="title">ViewResolver</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> View <span class="title">resolveViewName</span><span class="params">(String s, Locale locale)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>给 DispatcherServlet 类中的 doDispatch() 加个断点进行调试一下。启动服务后，随便访问一个页面，可以看到 Debug 下确实有我们自定义的视图解析器。<img data-src="/images/springboot-expound07.md-0.png"></p><p><strong>如果你想自定义一些功能，只要写一个组件，然后把它交给 SpringBoot，SpringBoot 就会为我们自动进行装配了。</strong></p><h3 id="扩展视图解析器功能"><a href="#扩展视图解析器功能" class="headerlink" title="扩展视图解析器功能"></a>扩展视图解析器功能</h3><p>在 WebMvcAutoConfiguration 类中，找到 WebMvcAutoConfigurationAdapter 内部类，类上有一个注解，@Import(EnableWebMvcConfiguration.class)，点进去查看它有个父类 DelegatingWebMvcConfiguration，父类中有这样的一段代码。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从容器中获取所有的 WebMvcConfigurer</span></span><br><span class="line"><span class="meta">@Autowired</span>(</span><br><span class="line">    required = <span class="literal">false</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setConfigurers</span>(<span class="params">List&lt;WebMvcConfigurer&gt; configurers</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!CollectionUtils.isEmpty(configurers)) &#123;</span><br><span class="line">        <span class="built_in">this</span>.configurers.addWebMvcConfigurers(configurers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个类中继续寻找</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="built_in">void</span> <span class="function"><span class="title">addViewControllers</span>(<span class="params">ViewControllerRegistry registry</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.configurers.addViewControllers(registry);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点进去查看</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> addViewControllers(ViewControllerRegistry registry) &#123;</span><br><span class="line">    Iterator var2 = <span class="keyword">this</span>.delegates.iterator();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将所有的 WebMvcConfigurer 相关配置一起调用</span></span><br><span class="line">    <span class="keyword">while</span>(var2.hasNext()) &#123;</span><br><span class="line">        WebMvcConfigurer <span class="keyword">delegate</span> = (WebMvcConfigurer)var2.<span class="keyword">next</span>();</span><br><span class="line">        <span class="keyword">delegate</span>.addViewControllers(registry);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样我们就能通过重写 addViewControllers()，新增指定的视图跳转规则。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">addViewControllers</span>(<span class="params">ViewControllerRegistry registry</span>)</span> &#123;</span><br><span class="line">    registry.addViewController(<span class="string">&quot;/hello&quot;</span>).setViewName(<span class="string">&quot;/test&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 localhost:8080/hello，发现地址栏链接不变，但是却跳转到了 test.html 页面。</p><h3 id="日期格式化器"><a href="#日期格式化器" class="headerlink" title="日期格式化器"></a>日期格式化器</h3><p>在 WebMvcAutoConfiguration 类中，找到 WebMvcAutoConfigurationAdapter 下的 ContentNegotiatingViewResolver 类中的 mvcConversionService()。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">@Override</span><br><span class="line">public FormattingConversionService mvc<span class="constructor">ConversionService()</span> &#123;</span><br><span class="line">    Format format = this.mvcProperties.get<span class="constructor">Format()</span>;</span><br><span class="line">    <span class="comment">//调用了 dateFormat()</span></span><br><span class="line">    WebConversionService conversionService = <span class="keyword">new</span> <span class="constructor">WebConversionService(<span class="params">new</span> DateTimeFormatters()</span></span><br><span class="line">                                                                      .date<span class="constructor">Format(<span class="params">format</span>.<span class="params">getDate</span>()</span>).time<span class="constructor">Format(<span class="params">format</span>.<span class="params">getTime</span>()</span>).date<span class="constructor">TimeFormat(<span class="params">format</span>.<span class="params">getDateTime</span>()</span>));</span><br><span class="line">    add<span class="constructor">Formatters(<span class="params">conversionService</span>)</span>;</span><br><span class="line">    return conversionService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点进去查看 WebMvcProperties 类下的 Format 静态内部类。可以发现 SpringBoot中 默认的 date、time 和 dateTime 的默认格式，所以在使用的时候如果没有在 application.yaml 中配置我们自定义的对应的格式，我们就必须遵守这3种格式来配置日期数据。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Format</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Date format to use, for example `dd/MM/yyyy`.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> date;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Time format to use, for example `HH:mm:ss`.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> time;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Date-time format to use, for example `yyyy-MM-dd HH:mm:ss`.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> dateTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">getDate</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setDate</span>(<span class="params"><span class="built_in">String</span> date</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.date = date;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">getTime</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setTime</span>(<span class="params"><span class="built_in">String</span> time</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">getDateTime</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.dateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setDateTime</span>(<span class="params"><span class="built_in">String</span> dateTime</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.dateTime = dateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="EnableWebMvc"><a href="#EnableWebMvc" class="headerlink" title="@EnableWebMvc"></a>@EnableWebMvc</h3><p>如果在配置类上加上了注解 @EnableWebMvc，这个类就变成了自动配置类 WebMvcAutoConfiguration 的替代类，完全替代了 WebMvcAutoConfiguration。</p><p>点进去 @EnableWebMvc 注解里发现有一个 @Import({DelegatingWebMvcConfiguration.class}) 注解，导入了 DelegatingWebMvcConfiguration 类。点进去这个类发现它继承了 WebMvcConfigurationSupport 类。</p><p>回到 WebMvcAutoConfiguration 自动配置类中，发现有这样的注解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConditionalOnMissingBean(<span class="params">WebMvcConfigurationSupport.<span class="keyword">class</span></span>)</span></span><br></pre></td></tr></table></figure><p>意思就是当 WebMvcConfigurationSupport 不存在时，WebMvcAutoConfiguration 自动配置类就会生效，反之则不生效。所以如果在配置类上加上了注解 @EnableWebMvc，容器中就会存在 WebMvcConfigurationSupport 对象，那么 WebMvcAutoConfiguration 自动配置类就不会被加载到 Spring 容器中，结果就是 webmvc 环境都不会再自动配置了，全部需要我们手动地进行配置。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SpringMVC-自动配置原理&quot;&gt;&lt;a href=&quot;#SpringMVC-自动配置原理&quot; class=&quot;headerlink&quot; title=&quot;SpringMVC 自动配置原理&quot;&gt;&lt;/a&gt;SpringMVC 自动配置原理&lt;/h2&gt;&lt;p&gt;我们需要了解 SpringBoot 对 SpringMVC 做了哪些配置，包括如何扩展和定制。下面是官方文档内容。&lt;/p&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自动配置在 Spring 默认设置的基础上添加了以下功能：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The auto-configuration adds the following features on top of Spring’s defaults:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//包含视图解析器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Inclusion of ContentNegotiatingViewResolver and BeanNameViewResolver beans.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//支持提供静态资源，包括对 WebJars 的支持。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Support &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; serving static resources, including support &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; WebJars &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自动注册 Converter（转换器：数据类型的转换）和 Formatter（格式化器）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Automatic registration of Converter, GenericConverter, and Formatter beans.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Http 消息转换器转换 Http 请求和响应，比如把对象转换为 JSON 字符串。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Support &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; HttpMessageConverters (covered later &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; document).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//定义错误代码生成规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Automatic registration of MessageCodesResolver (covered later &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; document).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//首页定制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Static index.html support.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//图标定制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Custom Favicon support (covered later &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; document).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//绑定请求数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Automatic use of a ConfigurableWebBindingInitializer bean (covered later &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; document).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;如果您希望保留 Spring Boot MVC 功能，并且希望添加其他 MVC 配置（拦截器、格式化程序、视图控制器和其他功能），则可以添加自己的 @configuration 类，类型为 webmvcconfiguer，但不添加 @EnableWebMvc。如果希望提供&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;RequestMappingHandlerMapping、RequestMappingHandlerAdapter 或 ExceptionHandlerExceptionResolver 的自定义实例，则可以声明 WebMVCregistrationAdapter 实例来提供此类组件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If you want to keep Spring Boot MVC features and you want to add additional MVC configuration &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(interceptors, formatters, view controllers, and other features), you can add your own &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Configuration&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WebMvcConfigurer&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;but&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;@EnableWebMvc&lt;/span&gt;. &lt;span class=&quot;title&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;wish&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;provide&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;custom instances of RequestMappingHandlerMapping, RequestMappingHandlerAdapter, or &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ExceptionHandlerExceptionResolver, you can declare a WebMvcRegistrationsAdapter instance to provide such components.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//如果您想完全控制 Spring MVC，可以添加自己的 @Configuration，并用 @EnableWebMvc 进行注释。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If you want to take complete control of Spring MVC, you can add your own &lt;span class=&quot;meta&quot;&gt;@Configuration&lt;/span&gt; annotated with &lt;span class=&quot;meta&quot;&gt;@EnableWebMvc&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;视图解析器&quot;&gt;&lt;a href=&quot;#视图解析器&quot; class=&quot;headerlink&quot; title=&quot;视图解析器&quot;&gt;&lt;/a&gt;视图解析器&lt;/h3&gt;&lt;h4 id=&quot;ContentNegotiatingViewResolver（内容协商视图解析器）&quot;&gt;&lt;a href=&quot;#ContentNegotiatingViewResolver（内容协商视图解析器）&quot; class=&quot;headerlink&quot; title=&quot;ContentNegotiatingViewResolver（内容协商视图解析器）&quot;&gt;&lt;/a&gt;ContentNegotiatingViewResolver（内容协商视图解析器）&lt;/h4&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(六)</title>
    <link href="http://guest997.tk/2021/08/19/springboot-expound06/"/>
    <id>http://guest997.tk/2021/08/19/springboot-expound06/</id>
    <published>2021-08-19T01:45:21.000Z</published>
    <updated>2021-09-02T05:17:05.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Thymeleaf"><a href="#Thymeleaf" class="headerlink" title="Thymeleaf"></a>Thymeleaf</h2><h3 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h3><p>以前开发，前端传给后端的是 html 页面，需要转成 jsp 页面，jsp 支持非常强大的功能，包括能写 Java 代码。<br>但是 SpringBoot 项目是以 jar 的方式打包，而不是war。并且用的还是嵌入式的 Tomcat，所以默认是不支持 jsp 的。不支持 jsp，如果我们直接用纯静态页面的方式，那会给开发带来非常大的麻烦。</p><p>所以就有了模板引擎，其实 jsp 就是一个模板引擎，还有用的比较多的 freemarker，包括 SpringBoot 推荐的 Thymeleaf。模板引擎有非常多，但再多的模板引擎，他们的思想都是一样的。<img data-src="/images/springboot-expound06.md-0.jpg"></p><h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--thymeleaf 依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h3><p>查看 Thymeleaf 自动配置属性类 ThymeleafProperties 的源码，会发现只需要将 html 页面放在 classpath:/templates/ 路径下，Thymeleaf 就会进行自动渲染了。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> DEFAULT_PREFIX = <span class="string">&quot;classpath:/templates/&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> DEFAULT_SUFFIX = <span class="string">&quot;.html&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="语法学习"><a href="#语法学习" class="headerlink" title="语法学习"></a>语法学习</h3><p>Thymeleaf 语法和 Vue 语法很像，一个是 v- 开头，一个是 th: 开头。</p><h4 id="全部语法"><a href="#全部语法" class="headerlink" title="全部语法"></a>全部语法</h4><p><img data-src="/images/springboot-expound06.md-1.png"></p><h4 id="表达式语法"><a href="#表达式语法" class="headerlink" title="表达式语法"></a>表达式语法</h4><figure class="highlight nim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Simple</span> expressions:</span><br><span class="line">　　<span class="type">Variable</span> <span class="type">Expressions</span>: $<span class="meta">&#123;...&#125;</span>               变量表达式</span><br><span class="line">　　<span class="type">Selection</span> <span class="type">Variable</span> <span class="type">Expressions</span>: *<span class="meta">&#123;...&#125;</span>     选择表达式</span><br><span class="line">　　<span class="type">Message</span> <span class="type">Expressions</span>: <span class="comment">#&#123;...&#125;        获取国际化内容</span></span><br><span class="line">　　<span class="type">Link</span> <span class="type">URL</span> <span class="type">Expressions</span>: @<span class="meta">&#123;...&#125;</span>       定义 url</span><br><span class="line">　　<span class="type">Fragment</span> <span class="type">Expressions</span>: ~<span class="meta">&#123;...&#125;</span>       片段引用表达式</span><br><span class="line"></span><br><span class="line"><span class="type">Literals</span>（字面量）</span><br><span class="line">　　<span class="type">Text</span> literals: &#x27;one text&#x27;,&#x27;<span class="type">Another</span> one!&#x27;,…</span><br><span class="line">　　<span class="type">Number</span> literals: <span class="number">0</span>,<span class="number">34</span>,<span class="number">3</span>.<span class="number">0</span>,<span class="number">12</span>.<span class="number">3</span>,…</span><br><span class="line">　　<span class="type">Boolean</span> literals: <span class="literal">true</span>,<span class="literal">false</span></span><br><span class="line">　　<span class="type">Null</span> literal: null</span><br><span class="line">　　<span class="type">Literal</span> tokens: one,sometext,main,…</span><br><span class="line"></span><br><span class="line"><span class="type">Text</span> operations:（文本操作）</span><br><span class="line">　　<span class="type">String</span> concatenation: +</span><br><span class="line">　　<span class="type">Literal</span> substitutions: <span class="type">The</span> name <span class="keyword">is</span> $&#123;name&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">Arithmetic</span> operations:（数学运算）</span><br><span class="line">　　<span class="type">Binary</span> operators: +, -, *, /, %</span><br><span class="line">　　<span class="type">Minus</span> sign (unary operator): -</span><br><span class="line"></span><br><span class="line"><span class="type">Boolean</span> operations:（布尔运算）</span><br><span class="line">　　<span class="type">Binary</span> operators: <span class="keyword">and</span>,<span class="keyword">or</span></span><br><span class="line">　　<span class="type">Boolean</span> negation (unary operator): !,<span class="keyword">not</span></span><br><span class="line"></span><br><span class="line"><span class="type">Comparisons</span> <span class="keyword">and</span> equality:（比较运算）</span><br><span class="line">　　<span class="type">Comparators</span>: &gt;, &lt;, &gt;=, &lt;= (gt,lt,ge,le)</span><br><span class="line">　　<span class="type">Equality</span> operators: ==, != (eq,ne)</span><br><span class="line"></span><br><span class="line"><span class="type">Conditional</span> operators:（条件运算）</span><br><span class="line">　　<span class="type">If</span>-then: (<span class="keyword">if</span>) ? (then)</span><br><span class="line">　　<span class="type">If</span>-then-<span class="keyword">else</span>: (<span class="keyword">if</span>) ? (then) : (<span class="keyword">else</span>)</span><br><span class="line">　　<span class="type">Default</span>: (value) ?: (defaultvalue)</span><br><span class="line"></span><br><span class="line"><span class="type">Special</span> tokens:（特殊操作）</span><br><span class="line">　　<span class="type">No</span>-<span class="type">Operation</span>: _</span><br></pre></td></tr></table></figure><h4 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package ml.guest997.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line">@Controller</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThymeleafController</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    @<span class="built_in">RequestMapping</span>(<span class="string">&quot;/helloThymeleaf&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">helloThymeleaf</span><span class="params">(Model model)</span> </span>&#123;</span><br><span class="line">        Map&lt;<span class="keyword">String</span>, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.<span class="built_in">put</span>(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;Guest997&quot;</span>);</span><br><span class="line">        map.<span class="built_in">put</span>(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;guest997&quot;</span>);</span><br><span class="line">        model.<span class="built_in">addAttribute</span>(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;&lt;h1&gt;HelloThymeleaf!&lt;h1&gt;&quot;</span>);</span><br><span class="line">        model.<span class="built_in">addAttribute</span>(<span class="string">&quot;condition&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        model.<span class="built_in">addAttribute</span>(<span class="string">&quot;role&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        model.<span class="built_in">addAttribute</span>(<span class="string">&quot;map&quot;</span>, map);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--要导入 thymeleaf 约束--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;msg&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:utext</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;msg&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">th:if</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;condition&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>判断为真显示<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">th:unless</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;condition&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>判断为假显示<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--想要跳转到别的域名，需要用&#x27;&#x27;包裹起来--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;&#x27;https://guest997.ml&#x27;&quot;</span>&gt;</span>点击进入博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@</span></span></span><span class="template-tag">&#123;/<span class="name">helloSpringBoot</span>&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span>点击请求 HelloController<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;role&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">th:case</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>管理员<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">th:case</span>=<span class="string">&quot;guest&quot;</span>&gt;</span>访客<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">th:case</span>=<span class="string">&quot;*&quot;</span>&gt;</span>未登录<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;obj : $</span></span></span><span class="template-variable">&#123;map&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;obj.key&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;obj.value&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img data-src="/images/springboot-expound06.md-2.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Thymeleaf&quot;&gt;&lt;a href=&quot;#Thymeleaf&quot; class=&quot;headerlink&quot; title=&quot;Thymeleaf&quot;&gt;&lt;/a&gt;Thymeleaf&lt;/h2&gt;&lt;h3 id=&quot;模板引擎&quot;&gt;&lt;a href=&quot;#模板引擎&quot; class=&quot;headerlink&quot; title=&quot;模板引擎&quot;&gt;&lt;/a&gt;模板引擎&lt;/h3&gt;&lt;p&gt;以前开发，前端传给后端的是 html 页面，需要转成 jsp 页面，jsp 支持非常强大的功能，包括能写 Java 代码。&lt;br&gt;但是 SpringBoot 项目是以 jar 的方式打包，而不是war。并且用的还是嵌入式的 Tomcat，所以默认是不支持 jsp 的。不支持 jsp，如果我们直接用纯静态页面的方式，那会给开发带来非常大的麻烦。&lt;/p&gt;
&lt;p&gt;所以就有了模板引擎，其实 jsp 就是一个模板引擎，还有用的比较多的 freemarker，包括 SpringBoot 推荐的 Thymeleaf。模板引擎有非常多，但再多的模板引擎，他们的思想都是一样的。&lt;img data-src=&quot;/images/springboot-expound06.md-0.jpg&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h3&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot 详解(五)</title>
    <link href="http://guest997.tk/2021/08/19/springboot-expound05/"/>
    <id>http://guest997.tk/2021/08/19/springboot-expound05/</id>
    <published>2021-08-19T01:40:20.000Z</published>
    <updated>2021-09-02T05:16:58.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="静态资源处理"><a href="#静态资源处理" class="headerlink" title="静态资源处理"></a>静态资源处理</h2><h3 id="第一种静态资源映射规则"><a href="#第一种静态资源映射规则" class="headerlink" title="第一种静态资源映射规则"></a>第一种静态资源映射规则</h3><p>SpringBoot 中，SpringMVC 的 web 配置都在 WebMvcAutoConfiguration 这个配置类里面。其中有个 WebMvcAutoConfigurationAdapter 内部类，内部类中又有个 addResourceHandlers 方法。</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public void add<span class="constructor">ResourceHandlers(ResourceHandlerRegistry <span class="params">registry</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!this.resourceProperties.is<span class="constructor">AddMappings()</span>) &#123;</span><br><span class="line">        logger.debug(<span class="string">&quot;Default resource handling disabled&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//第一种静态资源映射规则</span></span><br><span class="line">        this.add<span class="constructor">ResourceHandler(<span class="params">registry</span>, <span class="string">&quot;/webjars/**&quot;</span>, <span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>)</span>;</span><br><span class="line">        <span class="comment">//第二种静态资源映射规则</span></span><br><span class="line">        this.add<span class="constructor">ResourceHandler(<span class="params">registry</span>, <span class="params">this</span>.<span class="params">mvcProperties</span>.<span class="params">getStaticPathPattern</span>()</span>, (registration) -&gt; &#123;</span><br><span class="line">            registration.add<span class="constructor">ResourceLocations(<span class="params">this</span>.<span class="params">resourceProperties</span>.<span class="params">getStaticLocations</span>()</span>);</span><br><span class="line">            <span class="keyword">if</span> (this.servletContext != null) &#123;</span><br><span class="line">                ServletContextResource resource = <span class="keyword">new</span> <span class="constructor">ServletContextResource(<span class="params">this</span>.<span class="params">servletContext</span>, <span class="string">&quot;/&quot;</span>)</span>;</span><br><span class="line">                registration.add<span class="constructor">ResourceLocations(<span class="params">new</span> Resource[]&#123;<span class="params">resource</span>&#125;)</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态资源可以通过访问 /webjars/** 路径获取到， 而这个路径是被自动映射为了 /META-INF/resources/webjars/。Webjars 本质就是以 jar 包的方式引入静态资源。</p><h3 id="第二种静态资源映射规则"><a href="#第二种静态资源映射规则" class="headerlink" title="第二种静态资源映射规则"></a>第二种静态资源映射规则</h3><p>点击去查看 getStaticLocations()，发现返回了 staticLocations 数组，而这个数组在类中通过 Resources() 被 CLASSPATH_RESOURCE_LOCATIONS 常量赋值了。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span>[] CLASSPATH_RESOURCE_LOCATIONS = <span class="keyword">new</span> <span class="keyword">String</span>[]&#123;<span class="string">&quot;classpath:/META-INF/resources/&quot;</span>, <span class="string">&quot;classpath:/resources/&quot;</span>, <span class="string">&quot;classpath:/static/&quot;</span>, <span class="string">&quot;classpath:/public/&quot;</span>&#125;;</span><br></pre></td></tr></table></figure><p>这四个路径分别如下图所示。<br><img data-src="/images/springboot-expound05.md-0.png"></p><p>返回最开始的 addResourceHandlers() 中查看第二种静态资源映射规则，会发现这些路径全部被映射为了 /，也就是服务器根路径。</p><p>运行 Application.java，访问 localhost:8080/test.js，会发现静态资源文件内容是能正常显示的。</p><p>这些路径也是有优先级的，classpath:/META-INF/resources/ &gt; classpath:/resources/ &gt; classpath:/static/ &gt; classpath:/public/。</p><h2 id="首页处理（同样是在-WebMvcAutoConfiguration-这个配置类里面）"><a href="#首页处理（同样是在-WebMvcAutoConfiguration-这个配置类里面）" class="headerlink" title="首页处理（同样是在 WebMvcAutoConfiguration 这个配置类里面）"></a>首页处理（同样是在 WebMvcAutoConfiguration 这个配置类里面）</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可以从 WelcomePageHandlerMapping（欢迎页面处理程序映射）类中看到调用了 getWelcomePage()</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> WelcomePageHandlerMapping welcomePageHandlerMapping(ApplicationContext applicationContext, FormattingConversionService mvcConversionService, ResourceUrlProvider mvcResourceUrlProvider) &#123;</span><br><span class="line">    WelcomePageHandlerMapping welcomePageHandlerMapping = new WelcomePageHandlerMapping(new TemplateAvailabilityProviders(applicationContext), applicationContext, <span class="keyword">this</span>.getWelcomePage(), <span class="keyword">this</span>.mvcProperties.getStaticPathPattern());</span><br><span class="line">    welcomePageHandlerMapping.setInterceptors(<span class="keyword">this</span>.getInterceptors(mvcConversionService, mvcResourceUrlProvider));</span><br><span class="line">    welcomePageHandlerMapping.setCorsConfigurations(<span class="keyword">this</span>.getCorsConfigurations());</span><br><span class="line">    <span class="keyword">return</span> welcomePageHandlerMapping;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取了 resourceProperties 类下的 staticLocations，就是在上面讲到的四个路径。</span></span><br><span class="line"><span class="comment">//通过调用 getIndexHtml(location) 循环遍历是否存在 Resource indexHtml 对象，就在就返回对象。</span></span><br><span class="line"><span class="comment">//(Resource)new ServletContextResource(servletContext, &quot;/&quot;) 意思就是通过调用 getIndexHtml(Resource location) 将index.html 的路径映射为根路径，这样就实现了访问 localhost:8080 就直接是自定义首页了。</span></span><br><span class="line"><span class="keyword">private</span> Resource getWelcomePage() &#123;</span><br><span class="line">    String[] var1 = <span class="keyword">this</span>.resourceProperties.getStaticLocations();</span><br><span class="line">    int var2 = var1.length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int var3 = <span class="number">0</span>; var3 &lt; var2; ++var3) &#123;</span><br><span class="line">        String location = var1[var3];</span><br><span class="line">        Resource indexHtml = <span class="keyword">this</span>.getIndexHtml(location);</span><br><span class="line">        <span class="keyword">if</span> (indexHtml != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> indexHtml;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ServletContext servletContext = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">    <span class="keyword">if</span> (servletContext != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getIndexHtml((Resource)(new ServletContextResource(servletContext, <span class="string">&quot;/&quot;</span>)));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//this.resourceLoader.getResource(location) 返回的是一个 Resource 对象，意思就是又调用了下面的重载方法 getIndexHtml(Resource location)</span></span><br><span class="line"><span class="keyword">private</span> Resource getIndexHtml(String location) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.getIndexHtml(<span class="keyword">this</span>.resourceLoader.getResource(location));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断 index.html 存不存在，存在就返回 Resource 对象，不存在就返回 null。</span></span><br><span class="line"><span class="keyword">private</span> Resource getIndexHtml(Resource location) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Resource resource = location.createRelative(<span class="string">&quot;index.html&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (resource.exists() &amp;&amp; resource.getURL() != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> resource;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var3) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优先级也还是如上面的一样，就不再赘述了。</p><h2 id="网站图标"><a href="#网站图标" class="headerlink" title="网站图标"></a>网站图标</h2><p>将图片改名为 <strong>favicon.ico</strong>，然后直接放在 static 目录下就可以了。没生效的话，刷新缓存即可。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;静态资源处理&quot;&gt;&lt;a href=&quot;#静态资源处理&quot; class=&quot;headerlink&quot; title=&quot;静态资源处理&quot;&gt;&lt;/a&gt;静态资源处理&lt;/h2&gt;&lt;h3 id=&quot;第一种静态资源映射规则&quot;&gt;&lt;a href=&quot;#第一种静态资源映射规则&quot; class=&quot;headerlink&quot; title=&quot;第一种静态资源映射规则&quot;&gt;&lt;/a&gt;第一种静态资源映射规则&lt;/h3&gt;&lt;p&gt;SpringBoot 中，SpringMVC 的 web 配置都在 WebMvcAutoConfiguration 这个配置类里面。其中有个 WebMvcAutoConfigurationAdapter 内部类，内部类中又有个 addResourceHandlers 方法。&lt;/p&gt;
&lt;figure class=&quot;highlight reasonml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public void add&lt;span class=&quot;constructor&quot;&gt;ResourceHandlers(ResourceHandlerRegistry &lt;span class=&quot;params&quot;&gt;registry&lt;/span&gt;)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!this.resourceProperties.is&lt;span class=&quot;constructor&quot;&gt;AddMappings()&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        logger.debug(&lt;span class=&quot;string&quot;&gt;&amp;quot;Default resource handling disabled&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//第一种静态资源映射规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.add&lt;span class=&quot;constructor&quot;&gt;ResourceHandler(&lt;span class=&quot;params&quot;&gt;registry&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;/webjars/**&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;classpath:/META-INF/resources/webjars/&amp;quot;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//第二种静态资源映射规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.add&lt;span class=&quot;constructor&quot;&gt;ResourceHandler(&lt;span class=&quot;params&quot;&gt;registry&lt;/span&gt;, &lt;span class=&quot;params&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;params&quot;&gt;mvcProperties&lt;/span&gt;.&lt;span class=&quot;params&quot;&gt;getStaticPathPattern&lt;/span&gt;()&lt;/span&gt;, (registration) -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            registration.add&lt;span class=&quot;constructor&quot;&gt;ResourceLocations(&lt;span class=&quot;params&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;params&quot;&gt;resourceProperties&lt;/span&gt;.&lt;span class=&quot;params&quot;&gt;getStaticLocations&lt;/span&gt;()&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (this.servletContext != null) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ServletContextResource resource = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;constructor&quot;&gt;ServletContextResource(&lt;span class=&quot;params&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;params&quot;&gt;servletContext&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                registration.add&lt;span class=&quot;constructor&quot;&gt;ResourceLocations(&lt;span class=&quot;params&quot;&gt;new&lt;/span&gt; Resource[]&amp;#123;&lt;span class=&quot;params&quot;&gt;resource&lt;/span&gt;&amp;#125;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;静态资源可以通过访问 /webjars/** 路径获取到， 而这个路径是被自动映射为了 /META-INF/resources/webjars/。Webjars 本质就是以 jar 包的方式引入静态资源。&lt;/p&gt;</summary>
    
    
    
    <category term="学习" scheme="http://guest997.tk/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="http://guest997.tk/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="springboot" scheme="http://guest997.tk/tags/springboot/"/>
    
  </entry>
  
</feed>
